<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="wholememory_8h" kind="file" language="C++">
    <compoundname>wholememory.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="global__reference_8h" local="no">wholememory/global_reference.h</includes>
    <includedby refid="graph__op_8h" local="no">include/wholememory/graph_op.h</includedby>
    <includedby refid="wholegraph__op_8h" local="no">include/wholememory/wholegraph_op.h</includedby>
    <includedby refid="wholememory__op_8h" local="no">include/wholememory/wholememory_op.h</includedby>
    <includedby refid="wholememory__tensor_8h" local="no">include/wholememory/wholememory_tensor.h</includedby>
    <includedby refid="append__unique__impl_8h" local="no">src/graph_ops/append_unique_impl.h</includedby>
    <includedby refid="csr__add__self__loop__impl_8h" local="no">src/graph_ops/csr_add_self_loop_impl.h</includedby>
    <includedby refid="logger_8hpp" local="no">src/logger.hpp</includedby>
    <includedby refid="nvshmem__wholememory__bootstrap_8cpp" local="no">src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</includedby>
    <includedby refid="unweighted__sample__without__replacement__impl_8h" local="no">src/wholegraph_ops/unweighted_sample_without_replacement_impl.h</includedby>
    <includedby refid="weighted__sample__without__replacement__impl_8h" local="no">src/wholegraph_ops/weighted_sample_without_replacement_impl.h</includedby>
    <includedby refid="communicator_8cpp" local="no">src/wholememory/communicator.cpp</includedby>
    <includedby refid="communicator_8hpp" local="no">src/wholememory/communicator.hpp</includedby>
    <includedby refid="embedding_8cpp" local="yes">src/wholememory/embedding.cpp</includedby>
    <includedby refid="file__io_8h" local="no">src/wholememory/file_io.h</includedby>
    <includedby refid="initialize_8hpp" local="no">src/wholememory/initialize.hpp</includedby>
    <includedby refid="memory__handle_8cpp" local="yes">src/wholememory/memory_handle.cpp</includedby>
    <includedby refid="memory__handle_8hpp" local="no">src/wholememory/memory_handle.hpp</includedby>
    <includedby refid="nccl__comms_8hpp" local="no">src/wholememory/nccl_comms.hpp</includedby>
    <includedby refid="wholememory_8cpp" local="no">src/wholememory/wholememory.cpp</includedby>
    <includedby refid="bucket__ids__func_8h" local="no">src/wholememory_ops/functions/bucket_ids_func.h</includedby>
    <includedby refid="embedding__cache__func_8h" local="no">src/wholememory_ops/functions/embedding_cache_func.h</includedby>
    <includedby refid="embedding__optimizer__func_8h" local="no">src/wholememory_ops/functions/embedding_optimizer_func.h</includedby>
    <includedby refid="exchange__embeddings__nccl__func_8h" local="no">src/wholememory_ops/functions/exchange_embeddings_nccl_func.h</includedby>
    <includedby refid="exchange__ids__nccl__func_8h" local="no">src/wholememory_ops/functions/exchange_ids_nccl_func.h</includedby>
    <includedby refid="gather__cached__func_8h" local="no">src/wholememory_ops/functions/gather_cached_func.h</includedby>
    <includedby refid="gather__scatter__func_8h" local="no">src/wholememory_ops/functions/gather_scatter_func.h</includedby>
    <includedby refid="map__indices__func_8h" local="no">src/wholememory_ops/functions/map_indices_func.h</includedby>
    <includedby refid="sort__indices__func_8h" local="no">src/wholememory_ops/functions/sort_indices_func.h</includedby>
    <includedby refid="gather__op__impl_8h" local="no">src/wholememory_ops/gather_op_impl.h</includedby>
    <includedby refid="scatter__op__impl_8h" local="no">src/wholememory_ops/scatter_op_impl.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>unistd.h</label>
      </node>
      <node id="4">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48">
        <label>src/wholememory_ops/functions/gather_scatter_func.h</label>
        <link refid="gather__scatter__func_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/wholememory/embedding_optimizer.hpp</label>
        <link refid="embedding__optimizer_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>src/wholememory_ops/gather_op_impl.h</label>
        <link refid="gather__op__impl_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>src/wholememory_ops/functions/bucket_ids_func.h</label>
        <link refid="bucket__ids__func_8h"/>
      </node>
      <node id="23">
        <label>src/graph_ops/append_unique_impl.h</label>
        <link refid="append__unique__impl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/wholememory_ops/scatter_op.cpp</label>
        <link refid="scatter__op_8cpp"/>
      </node>
      <node id="26">
        <label>src/logger.cpp</label>
        <link refid="logger_8cpp"/>
      </node>
      <node id="4">
        <label>src/graph_ops/csr_add_self_loop.cpp</label>
        <link refid="csr__add__self__loop_8cpp"/>
      </node>
      <node id="2">
        <label>include/wholememory/graph_op.h</label>
        <link refid="graph__op_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/wholememory/embedding.hpp</label>
        <link refid="embedding_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>src/wholememory/nccl_comms.hpp</label>
        <link refid="nccl__comms_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>src/wholememory/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/wholememory/embedding_optimizer.cpp</label>
        <link refid="embedding__optimizer_8cpp"/>
      </node>
      <node id="24">
        <label>src/graph_ops/csr_add_self_loop_impl.h</label>
        <link refid="csr__add__self__loop__impl_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>include/wholememory/wholememory_op.h</label>
        <link refid="wholememory__op_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>src/wholememory_ops/functions/gather_cached_func.h</label>
        <link refid="gather__cached__func_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/wholememory_ops/gather_op.cpp</label>
        <link refid="gather__op_8cpp"/>
      </node>
      <node id="22">
        <label>src/wholememory_ops/functions/map_indices_func.h</label>
        <link refid="map__indices__func_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>src/wholememory/file_io.h</label>
        <link refid="file__io_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>src/wholememory/nccl_comms.cpp</label>
        <link refid="nccl__comms_8cpp"/>
      </node>
      <node id="9">
        <label>src/wholememory/embedding.cpp</label>
        <link refid="embedding_8cpp"/>
      </node>
      <node id="41">
        <label>src/wholememory/env_func_ptrs.cpp</label>
        <link refid="env__func__ptrs_8cpp"/>
      </node>
      <node id="34">
        <label>src/wholememory/memory_handle.cpp</label>
        <link refid="memory__handle_8cpp"/>
      </node>
      <node id="20">
        <label>src/wholememory/wholememory_tensor.cpp</label>
        <link refid="wholememory__tensor_8cpp"/>
      </node>
      <node id="21">
        <label>src/wholememory_ops/functions/embedding_optimizer_func.h</label>
        <link refid="embedding__optimizer__func_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/wholememory/embedding_cache.cpp</label>
        <link refid="embedding__cache_8cpp"/>
      </node>
      <node id="40">
        <label>src/wholememory/initialize.hpp</label>
        <link refid="initialize_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/parallel_utils.hpp</label>
        <link refid="parallel__utils_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>src/wholememory_ops/scatter_op_impl.h</label>
        <link refid="scatter__op__impl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>src/wholememory_ops/functions/sort_indices_func.h</label>
        <link refid="sort__indices__func_8h"/>
      </node>
      <node id="36">
        <label>src/wholegraph_ops/weighted_sample_without_replacement_impl.h</label>
        <link refid="weighted__sample__without__replacement__impl_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/graph_ops/append_unique.cpp</label>
        <link refid="append__unique_8cpp"/>
      </node>
      <node id="6">
        <label>src/wholegraph_ops/unweighted_sample_without_replacement.cpp</label>
        <link refid="unweighted__sample__without__replacement_8cpp"/>
      </node>
      <node id="27">
        <label>src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</label>
        <link refid="nvshmem__wholememory__bootstrap_8cpp"/>
      </node>
      <node id="13">
        <label>include/wholememory/embedding.h</label>
        <link refid="embedding_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>include/wholememory/wholememory_tensor.h</label>
        <link refid="wholememory__tensor_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/wholememory/wholegraph_op.h</label>
        <link refid="wholegraph__op_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>src/wholememory/memory_handle.hpp</label>
        <link refid="memory__handle_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/wholememory_ops/functions/embedding_cache_func.h</label>
        <link refid="embedding__cache__func_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>src/wholegraph_ops/unweighted_sample_without_replacement_impl.h</label>
        <link refid="unweighted__sample__without__replacement__impl_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/wholememory/embedding_cache.hpp</label>
        <link refid="embedding__cache_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/parallel_utils.cpp</label>
        <link refid="parallel__utils_8cpp"/>
      </node>
      <node id="33">
        <label>src/wholememory/initialize.cpp</label>
        <link refid="initialize_8cpp"/>
      </node>
      <node id="30">
        <label>src/wholememory/wholememory.cpp</label>
        <link refid="wholememory_8cpp"/>
      </node>
      <node id="7">
        <label>src/wholegraph_ops/weighted_sample_without_replacement.cpp</label>
        <link refid="weighted__sample__without__replacement_8cpp"/>
      </node>
      <node id="45">
        <label>src/wholememory_ops/functions/exchange_embeddings_nccl_func.h</label>
        <link refid="exchange__embeddings__nccl__func_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>src/wholememory/file_io.cpp</label>
        <link refid="file__io_8cpp"/>
      </node>
      <node id="31">
        <label>src/wholememory/communicator.cpp</label>
        <link refid="communicator_8cpp"/>
      </node>
      <node id="46">
        <label>src/wholememory_ops/functions/exchange_ids_nccl_func.h</label>
        <link refid="exchange__ids__nccl__func_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwholememory__unique__id__t" prot="public">wholememory_unique_id_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" prot="public" static="no">
        <name>WHOLEMEMORY_RETURN_ON_FAIL</name>
        <param><defname>X</defname></param>
        <initializer>  do {                                                                                \
    auto err = X;                                                                     \
    if (err != <ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>) {                                                 \
      const char* error_str = #X;                                                     \
      fprintf(stderr, &quot;File %s line %d %s failed.\n&quot;, __FILE__, __LINE__, error_str); \
      return err;                                                                     \
    }                                                                                 \
  } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="45" column="9" bodyfile="include/wholememory/wholememory.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="wholememory_8h_1a741437b5d700d6a694ce90bf07bed804" prot="public" static="no">
        <name>WHOLEMEMORY_UNIQUE_ID_BYTES</name>
        <initializer>(128)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="114" column="9" bodyfile="include/wholememory/wholememory.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" prot="public" static="no" strong="no">
        <type></type>
        <name>wholememory_error_code_t</name>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" prot="public">
          <name>WHOLEMEMORY_SUCCESS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>success </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a222cd3ef87c325a96a0e71296cfdf809" prot="public">
          <name>WHOLEMEMORY_UNKNOW_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>unknown error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2b4b897ab5a9ba65a0cac0c6e168176c" prot="public">
          <name>WHOLEMEMORY_NOT_IMPLEMENTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>method is not implemented </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" prot="public">
          <name>WHOLEMEMORY_LOGIC_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>logic error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a227d180e89097c8a95afb251a607d302" prot="public">
          <name>WHOLEMEMORY_CUDA_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CUDA error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a25abf5395e3046b33d49544c3f16ffd9" prot="public">
          <name>WHOLEMEMORY_COMMUNICATION_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>communication error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" prot="public">
          <name>WHOLEMEMORY_INVALID_INPUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>input is invalid, e.g. nullptr </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a485ecd2b76892b86eaeaa28163e4a5c7" prot="public">
          <name>WHOLEMEMORY_INVALID_VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>input value is invalid </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2db0472c7939a13f0d83342b8533255b" prot="public">
          <name>WHOLEMEMORY_OUT_OF_MEMORY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>out of memory </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2acfd69c3c88b109af7e9b31ba119f983d" prot="public">
          <name>WHOLEMEMORY_NOT_SUPPORTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>not supported </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>WholeMemory Error Code definition. </para>
        </briefdescription>
        <detaileddescription>
<para>Defines error code of WholeMemory library. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="32" column="1" bodyfile="include/wholememory/wholememory.h" bodystart="32" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" prot="public" static="no" strong="no">
        <type></type>
        <name>wholememory_memory_type_t</name>
        <enumvalue id="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4590b351fca36aa4365d26bec0be0ea8" prot="public">
          <name>WHOLEMEMORY_MT_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not defined. <linebreak/>
 </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4c6ff55ce83b298a2945868ed19431c9" prot="public">
          <name>WHOLEMEMORY_MT_CONTINUOUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Memory from all ranks are mapped in continuous address space </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50acb4fa48855a5741ad8f7153dceb7665e" prot="public">
          <name>WHOLEMEMORY_MT_CHUNKED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Memory from all ranks are mapped in chunked address space </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50aaf158928fcf5c811aba5071c22ec0f06" prot="public">
          <name>WHOLEMEMORY_MT_DISTRIBUTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Memory from other ranks are not mapped. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Memory Type of WholeMemory. </para>
        </briefdescription>
        <detaileddescription>
<para>Memory Type is the Memory Address Mapping Type of WholeMemory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="60" column="1" bodyfile="include/wholememory/wholememory.h" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="enum" id="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" prot="public" static="no" strong="no">
        <type></type>
        <name>wholememory_memory_location_t</name>
        <enumvalue id="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead7f045a859dafe2dc9e34b952ecead80" prot="public">
          <name>WHOLEMEMORY_ML_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not defined </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead3ca08fe2942418057f06c95eebd4714" prot="public">
          <name>WHOLEMEMORY_ML_DEVICE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Device Memory </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9feac158439ddfbce3650664e8924b533f45" prot="public">
          <name>WHOLEMEMORY_ML_HOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Host Memory </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Memory Location of WholeMemory. </para>
        </briefdescription>
        <detaileddescription>
<para>Memory Location of WholeMemory can be host or device. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="72" column="1" bodyfile="include/wholememory/wholememory.h" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="enum" id="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" prot="public" static="no" strong="no">
        <type></type>
        <name>wholememory_distributed_backend_t</name>
        <enumvalue id="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82abad46d2ec3092b034ee0eb0b6db88225" prot="public">
          <name>WHOLEMEMORY_DB_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not defined </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82a1c459898724e4c23efd58d0881c2ad5f" prot="public">
          <name>WHOLEMEMORY_DB_NCCL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82abede33ed3c2f8d61cd02409161967356" prot="public">
          <name>WHOLEMEMORY_DB_NVSHMEM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="78" column="1" bodyfile="include/wholememory/wholememory.h" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="enum" id="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" prot="public" static="no" strong="no">
        <type></type>
        <name>LogLevel</name>
        <enumvalue id="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a8684be68df3e6f94931ebf73a51de477" prot="public">
          <name>LEVEL_FATAL</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Fatal </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a56f6226774ca281a80cd2ee0ddd84f8b" prot="public">
          <name>LEVEL_ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9af1af3c11f22a52b3c8e7b2472275181f" prot="public">
          <name>LEVEL_WARN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Warn </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a831e8f5cdb3ed97330b2e17502149d8f" prot="public">
          <name>LEVEL_INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Info </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a210bac66f34a56114215d54588b8c7f3" prot="public">
          <name>LEVEL_DEBUG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Debug </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a1ca076c143f2ec60ba02c86573af9da3" prot="public">
          <name>LEVEL_TRACE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Trace </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="84" column="1" bodyfile="include/wholememory/wholememory.h" bodystart="84" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" prot="public" static="no">
        <type>struct <ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_</ref> *</type>
        <definition>typedef struct wholememory_comm_* wholememory_comm_t</definition>
        <argsstring></argsstring>
        <name>wholememory_comm_t</name>
        <briefdescription>
<para>Opaque handle to communicator. </para>
        </briefdescription>
        <detaileddescription>
<para>An Opaque handle to communicator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="112" column="33" bodyfile="include/wholememory/wholememory.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" prot="public" static="no">
        <type>struct <ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_</ref> *</type>
        <definition>typedef struct wholememory_handle_* wholememory_handle_t</definition>
        <argsstring></argsstring>
        <name>wholememory_handle_t</name>
        <briefdescription>
<para>Opaque handle to WholeMemory. </para>
        </briefdescription>
        <detaileddescription>
<para>An Opaque handle to WholeMemory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="199" column="35" bodyfile="include/wholememory/wholememory.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wholememory_8h_1ac03f23f6ae5f65598610570f0d8c22c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_init</definition>
        <argsstring>(unsigned int flags, LogLevel log_level=LEVEL_INFO)</argsstring>
        <name>wholememory_init</name>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" kindref="member">LogLevel</ref></type>
          <declname>log_level</declname>
          <defval><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a831e8f5cdb3ed97330b2e17502149d8f" kindref="member">LEVEL_INFO</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize WholeMemory library <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>: reserved should be 0 </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_level</parametername>
</parameternamelist>
<parameterdescription>
<para>: wholememory log level, the default level is &quot;info&quot; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="99" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="28" bodyend="31" declfile="include/wholememory/wholememory.h" declline="99" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1ac64d99bf6a3d3e970047a61a8da2c327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_finalize</definition>
        <argsstring>()</argsstring>
        <name>wholememory_finalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finalize WholeMemory library <simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="105" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="33" bodyend="33" declfile="include/wholememory/wholememory.h" declline="105" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1aa16928ff6dfb19d81ed83d5c948679d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_create_unique_id</definition>
        <argsstring>(wholememory_unique_id_t *unique_id)</argsstring>
        <name>wholememory_create_unique_id</name>
        <param>
          <type><ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref> *</type>
          <declname>unique_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create UniqueID for WholeMemory Communicator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>unique_id</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned UniqueID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="130" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="35" bodyend="38" declfile="include/wholememory/wholememory.h" declline="130" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a2158c4ad10230fd10e9dbe0e25bb4fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_create_communicator</definition>
        <argsstring>(wholememory_comm_t *comm, wholememory_unique_id_t unique_id, int rank, int size)</argsstring>
        <name>wholememory_create_communicator</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref></type>
          <declname>unique_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create WholeMemory Communicator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unique_id</parametername>
</parameternamelist>
<parameterdescription>
<para>: UniqueID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: rank of this process. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>: number of processes in this Communicator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="140" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="40" bodyend="46" declfile="include/wholememory/wholememory.h" declline="140" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a535b198b847ba819dc253dc788b03b10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_destroy_communicator</definition>
        <argsstring>(wholememory_comm_t comm)</argsstring>
        <name>wholememory_destroy_communicator</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy WholeMemory Communicator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Communicator to destroy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="150" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="48" bodyend="51" declfile="include/wholememory/wholememory.h" declline="150" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1aef063eb0befed5b0eebb21cd1709b755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_communicator_support_type_location</definition>
        <argsstring>(wholememory_comm_t comm, wholememory_memory_type_t memory_type, wholememory_memory_location_t memory_location)</argsstring>
        <name>wholememory_communicator_support_type_location</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref></type>
          <declname>memory_type</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref></type>
          <declname>memory_location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if combination of WholeMemory type and location is supported in the communicator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_type</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_location</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Location </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WHOLEMEMORY_SUCCESS if supported else WHOLEMEMORY_NOT_SUPPORTED </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="159" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="53" bodyend="59" declfile="include/wholememory/wholememory.h" declline="159" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a53c06d095720e32fd22c2de3cb78952a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_communicator_get_rank</definition>
        <argsstring>(int *rank, wholememory_comm_t comm)</argsstring>
        <name>wholememory_communicator_get_rank</name>
        <param>
          <type>int *</type>
          <declname>rank</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the rank of current process in the WholeMemory Communicator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="170" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="61" bodyend="64" declfile="include/wholememory/wholememory.h" declline="170" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1aa1aad91132568fe162864d821a47b5cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_communicator_get_size</definition>
        <argsstring>(int *size, wholememory_comm_t comm)</argsstring>
        <name>wholememory_communicator_get_size</name>
        <param>
          <type>int *</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of WholeMemory Communicator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="178" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="66" bodyend="69" declfile="include/wholememory/wholememory.h" declline="178" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a8cd90b1190d991c3be93e5c4cb0efe6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_communicator_is_bind_to_nvshmem</definition>
        <argsstring>(wholememory_comm_t comm)</argsstring>
        <name>wholememory_communicator_is_bind_to_nvshmem</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="180" column="6" bodyfile="src/wholememory/wholememory.cpp" bodystart="70" bodyend="77" declfile="include/wholememory/wholememory.h" declline="180" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a4ad5b2e466777d8de9060ae41045c9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_communicator_set_distributed_backend</definition>
        <argsstring>(wholememory_comm_t comm, wholememory_distributed_backend_t distributed_backend)</argsstring>
        <name>wholememory_communicator_set_distributed_backend</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref></type>
          <declname>distributed_backend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="182" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="79" bodyend="83" declfile="include/wholememory/wholememory.h" declline="182" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1ac220de29475bcf0823ba0520ee4a7ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref></type>
        <definition>wholememory_distributed_backend_t wholememory_communicator_get_distributed_backend</definition>
        <argsstring>(wholememory_comm_t comm)</argsstring>
        <name>wholememory_communicator_get_distributed_backend</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="185" column="35" bodyfile="src/wholememory/wholememory.cpp" bodystart="85" bodyend="89" declfile="include/wholememory/wholememory.h" declline="185" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a50d5b529e38c0967a8f8ac3cb0903606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_communicator_barrier</definition>
        <argsstring>(wholememory_comm_t comm)</argsstring>
        <name>wholememory_communicator_barrier</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Barrier on WholeMemory Communicator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="192" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="91" bodyend="95" declfile="include/wholememory/wholememory.h" declline="192" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a0cee72a10bd01876c3858160bfbc21be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_malloc</definition>
        <argsstring>(wholememory_handle_t *wholememory_handle_ptr, size_t total_size, wholememory_comm_t comm, wholememory_memory_type_t memory_type, wholememory_memory_location_t memory_location, size_t data_granularity)</argsstring>
        <name>wholememory_malloc</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref> *</type>
          <declname>wholememory_handle_ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>total_size</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref></type>
          <declname>memory_type</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref></type>
          <declname>memory_location</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_granularity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Malloc WholeMemory <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: total allocated size in bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_type</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_location</parametername>
</parameternamelist>
<parameterdescription>
<para>: memory location, host or device </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_granularity</parametername>
</parameternamelist>
<parameterdescription>
<para>: granularity size of data, which is guaranteed not to be partitioned. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="211" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="97" bodyend="106" declfile="include/wholememory/wholememory.h" declline="211" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1adbfde0ef9e47f01898165a11e54be310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_free</definition>
        <argsstring>(wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_free</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free allocated WholeMemory Handle <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle to free </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="223" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="108" bodyend="111" declfile="include/wholememory/wholememory.h" declline="223" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a399699aa55ec434ea8fe89d2b7bf6832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_get_communicator</definition>
        <argsstring>(wholememory_comm_t *comm, wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_communicator</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref> *</type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get underlying WholeMemory Communicator from WholeMemory Handle <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="231" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="113" bodyend="117" declfile="include/wholememory/wholememory.h" declline="231" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a502d8b806342b9a8b50fde1eeeb9321f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref></type>
        <definition>wholememory_memory_type_t wholememory_get_memory_type</definition>
        <argsstring>(wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_memory_type</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get WholeMemory Type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: WholeMemory Type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="239" column="27" bodyfile="src/wholememory/wholememory.cpp" bodystart="119" bodyend="122" declfile="include/wholememory/wholememory.h" declline="239" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1ad50a27e0c7b949e58005bd029621aa84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref></type>
        <definition>wholememory_memory_location_t wholememory_get_memory_location</definition>
        <argsstring>(wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_memory_location</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get WholeMemory Location <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: WholeMemory Location </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="246" column="31" bodyfile="src/wholememory/wholememory.cpp" bodystart="124" bodyend="128" declfile="include/wholememory/wholememory.h" declline="246" declcolumn="31"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a7c0a690dff6b776c85c5f77159278fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref></type>
        <definition>wholememory_distributed_backend_t wholememory_get_distributed_backend</definition>
        <argsstring>(wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_distributed_backend</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="249" column="35" bodyfile="src/wholememory/wholememory.cpp" bodystart="130" bodyend="134" declfile="include/wholememory/wholememory.h" declline="249" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a03e67a7e6ee0c56163867d8574c5a3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wholememory_get_total_size</definition>
        <argsstring>(wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_total_size</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total size of WholeMemory <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: total size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="257" column="8" bodyfile="src/wholememory/wholememory.cpp" bodystart="136" bodyend="139" declfile="include/wholememory/wholememory.h" declline="257" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a6a6163414d3d58e406a9d19945c5d81f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wholememory_get_data_granularity</definition>
        <argsstring>(wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_data_granularity</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get data granularity of WholeMemory Handle <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: data granularity size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="264" column="8" bodyfile="src/wholememory/wholememory.cpp" bodystart="141" bodyend="144" declfile="include/wholememory/wholememory.h" declline="264" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1ab7b1ac02e48fd518d5ab9846f888c459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_get_local_memory</definition>
        <argsstring>(void **local_ptr, size_t *local_size, size_t *local_offset, wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_local_memory</name>
        <param>
          <type>void **</type>
          <declname>local_ptr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>local_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>local_offset</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local memory from WholeMemory Handle of current rank, local memory has direct access to the memory. But local memory doesn&apos;t have to be on local GPU. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>local_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned local memory pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned local memory size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned local memory offset from WholeMemory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="275" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="146" bodyend="153" declfile="include/wholememory/wholememory.h" declline="275" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a53fd45479222f083fbc11516cff9f039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_get_rank_memory</definition>
        <argsstring>(void **rank_memory_ptr, size_t *rank_memory_size, size_t *rank_memory_offset, int rank, wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_rank_memory</name>
        <param>
          <type>void **</type>
          <declname>rank_memory_ptr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>rank_memory_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>rank_memory_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get local memory of specified rank from WholeMemory Handle <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rank_memory_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned local memory pointer of specified rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank_memory_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned local memory size of specified rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank_memory_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned local memory offset of specified rank from WholeMemory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: rank specified </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="289" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="155" bodyend="163" declfile="include/wholememory/wholememory.h" declline="289" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1aae935625f126a48d3e0a2ef5f424738d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_get_global_pointer</definition>
        <argsstring>(void **global_ptr, wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_global_pointer</name>
        <param>
          <type>void **</type>
          <declname>global_ptr</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get global memory pointer from WholeMemory Handle. Only Continuous memory type or Chunked Host memory has global pointer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>global_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned pointer of WholeMemory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="302" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="165" bodyend="169" declfile="include/wholememory/wholememory.h" declline="302" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a689f1bb462495115850e4421e264a14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_get_global_reference</definition>
        <argsstring>(wholememory_gref_t *wholememory_gref, wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_global_reference</name>
        <param>
          <type><ref refid="structwholememory__gref__t" kindref="compound">wholememory_gref_t</ref> *</type>
          <declname>wholememory_gref</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get global reference from WholeMemory Handle WholeMemory global reference is common data structure for Continuous and Chunked Memory Types. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_gref</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned WholeMemory global reference </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="312" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="171" bodyend="175" declfile="include/wholememory/wholememory.h" declline="312" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a8bde7fe2b80903e4a81b680bead8bdd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_determine_partition_plan</definition>
        <argsstring>(size_t *size_per_rank, size_t total_size, size_t data_granularity, int world_size)</argsstring>
        <name>wholememory_determine_partition_plan</name>
        <param>
          <type>size_t *</type>
          <declname>size_per_rank</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>total_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_granularity</declname>
        </param>
        <param>
          <type>int</type>
          <declname>world_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the partition plan WholeMemory will use <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size_per_rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned size per rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: total size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_granularity</parametername>
</parameternamelist>
<parameterdescription>
<para>: data granularity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>world_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: communicator world size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="323" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="188" bodyend="195" declfile="include/wholememory/wholememory.h" declline="323" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a5cae2d487f15ab98766f7b23a4ef8d1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_determine_entry_partition_plan</definition>
        <argsstring>(size_t *entry_per_rank, size_t total_entry_count, int world_size)</argsstring>
        <name>wholememory_determine_entry_partition_plan</name>
        <param>
          <type>size_t *</type>
          <declname>entry_per_rank</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>total_entry_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>world_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the partition plan WholeMemory will use based on entry count. Entry is number of data granularity <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>entry_per_rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned entry count per rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>total_entry_count</parametername>
</parameternamelist>
<parameterdescription>
<para>: total entry count </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>world_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: communicator world size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="336" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="197" bodyend="204" declfile="include/wholememory/wholememory.h" declline="336" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a9e5aba2c332624e97cacc8950350547f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_get_partition_plan</definition>
        <argsstring>(size_t *size_per_rank, wholememory_handle_t wholememory_handle)</argsstring>
        <name>wholememory_get_partition_plan</name>
        <param>
          <type>size_t *</type>
          <declname>size_per_rank</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the partition plan used in WholeMemory Handle <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size_per_rank</parametername>
</parameternamelist>
<parameterdescription>
<para>: returned size per rank </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="346" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="206" bodyend="210" declfile="include/wholememory/wholememory.h" declline="346" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a6d2464bdeb391f5082127d589ef68639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fork_get_device_count</definition>
        <argsstring>()</argsstring>
        <name>fork_get_device_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fork a new process and get device count. Should be called before other CUDA call <simplesect kind="return"><para>: CUDA device count, -1 on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="353" column="5" bodyfile="src/wholememory/wholememory.cpp" bodystart="212" bodyend="220" declfile="include/wholememory/wholememory.h" declline="353" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1aeffe11e17a6d90f4a2ba0ef1b9ff087b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_load_from_file</definition>
        <argsstring>(wholememory_handle_t wholememory_handle, size_t memory_offset, size_t memory_entry_size, size_t file_entry_size, const char **file_names, int file_count, int round_robin_size)</argsstring>
        <name>wholememory_load_from_file</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>memory_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>memory_entry_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>file_entry_size</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>file_names</declname>
        </param>
        <param>
          <type>int</type>
          <declname>file_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>round_robin_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load WholeMemory from binary files, all rank should be called together <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>: load to memory offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_entry_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: entry size of WholeMemory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_entry_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: entry size in file, should be less than or equal to memory_entry_size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_names</parametername>
</parameternamelist>
<parameterdescription>
<para>: file names, all binary files will be logically concatenated and loaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_count</parametername>
</parameternamelist>
<parameterdescription>
<para>: number of files. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>round_robin_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: continuous embedding number for a rank under round-robin shard mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="366" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="222" bodyend="237" declfile="include/wholememory/wholememory.h" declline="366" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a3ecf6243431ca5a36b46be30876b4589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_store_to_file</definition>
        <argsstring>(wholememory_handle_t wholememory_handle, size_t memory_offset, size_t memory_entry_stride, size_t file_entry_size, const char *local_file_name)</argsstring>
        <name>wholememory_store_to_file</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>memory_offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>memory_entry_stride</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>file_entry_size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>local_file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store local WholeMemory to file, this should be called by all ranks, with different local_file_name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>: memory offset to store </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_entry_stride</parametername>
</parameternamelist>
<parameterdescription>
<para>: entry size of WholeMemory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>file_entry_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: entry size in file, should be less than or equal to memory_entry_size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>local_file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: local file to store to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="384" column="26" bodyfile="src/wholememory/wholememory.cpp" bodystart="239" bodyend="247" declfile="include/wholememory/wholememory.h" declline="384" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a779e1301d544875ab9d2bf1da7c54ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_is_intranode_communicator</definition>
        <argsstring>(wholememory_comm_t comm)</argsstring>
        <name>wholememory_is_intranode_communicator</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Comm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="394" column="6" bodyfile="src/wholememory/wholememory.cpp" bodystart="264" bodyend="267" declfile="include/wholememory/wholememory.h" declline="394" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="wholememory_8h_1a5f6d556e8f85b753bc6840bc41c19097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_is_build_with_nvshmem</definition>
        <argsstring>()</argsstring>
        <name>wholememory_is_build_with_nvshmem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/wholememory.h" line="396" column="6" bodyfile="src/wholememory/wholememory.cpp" bodystart="269" bodyend="278" declfile="include/wholememory/wholememory.h" declline="396" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="global__reference_8h" kindref="compound">wholememory/global_reference.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a222cd3ef87c325a96a0e71296cfdf809" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a222cd3ef87c325a96a0e71296cfdf809" kindref="member">WHOLEMEMORY_UNKNOW_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2b4b897ab5a9ba65a0cac0c6e168176c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2b4b897ab5a9ba65a0cac0c6e168176c" kindref="member">WHOLEMEMORY_NOT_IMPLEMENTED</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a227d180e89097c8a95afb251a607d302" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a227d180e89097c8a95afb251a607d302" kindref="member">WHOLEMEMORY_CUDA_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a25abf5395e3046b33d49544c3f16ffd9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a25abf5395e3046b33d49544c3f16ffd9" kindref="member">WHOLEMEMORY_COMMUNICATION_ERROR</ref>,<sp/></highlight></codeline>
<codeline lineno="39" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a485ecd2b76892b86eaeaa28163e4a5c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a485ecd2b76892b86eaeaa28163e4a5c7" kindref="member">WHOLEMEMORY_INVALID_VALUE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2db0472c7939a13f0d83342b8533255b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2db0472c7939a13f0d83342b8533255b" kindref="member">WHOLEMEMORY_OUT_OF_MEMORY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2acfd69c3c88b109af7e9b31ba119f983d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2acfd69c3c88b109af7e9b31ba119f983d" kindref="member">WHOLEMEMORY_NOT_SUPPORTED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_RETURN_ON_FAIL(X)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>auto<sp/>err<sp/>=<sp/>X;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(err<sp/>!=<sp/>WHOLEMEMORY_SUCCESS)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>error_str<sp/>=<sp/>#X;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/>&quot;File<sp/>%s<sp/>line<sp/>%d<sp/>%s<sp/>failed.\n&quot;</highlight><highlight class="normal">,<sp/>__FILE__,<sp/>__LINE__,<sp/>error_str);<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>err;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4590b351fca36aa4365d26bec0be0ea8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4590b351fca36aa4365d26bec0be0ea8" kindref="member">WHOLEMEMORY_MT_NONE</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4c6ff55ce83b298a2945868ed19431c9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4c6ff55ce83b298a2945868ed19431c9" kindref="member">WHOLEMEMORY_MT_CONTINUOUS</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50acb4fa48855a5741ad8f7153dceb7665e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50acb4fa48855a5741ad8f7153dceb7665e" kindref="member">WHOLEMEMORY_MT_CHUNKED</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50aaf158928fcf5c811aba5071c22ec0f06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50aaf158928fcf5c811aba5071c22ec0f06" kindref="member">WHOLEMEMORY_MT_DISTRIBUTED</ref>,<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>{</highlight></codeline>
<codeline lineno="73" refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead7f045a859dafe2dc9e34b952ecead80" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead7f045a859dafe2dc9e34b952ecead80" kindref="member">WHOLEMEMORY_ML_NONE</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="74" refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead3ca08fe2942418057f06c95eebd4714" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead3ca08fe2942418057f06c95eebd4714" kindref="member">WHOLEMEMORY_ML_DEVICE</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9feac158439ddfbce3650664e8924b533f45" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9feac158439ddfbce3650664e8924b533f45" kindref="member">WHOLEMEMORY_ML_HOST</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/>{</highlight></codeline>
<codeline lineno="79" refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82abad46d2ec3092b034ee0eb0b6db88225" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82abad46d2ec3092b034ee0eb0b6db88225" kindref="member">WHOLEMEMORY_DB_NONE</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="80" refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82a1c459898724e4c23efd58d0881c2ad5f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82a1c459898724e4c23efd58d0881c2ad5f" kindref="member">WHOLEMEMORY_DB_NCCL</ref>,</highlight></codeline>
<codeline lineno="81" refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82abede33ed3c2f8d61cd02409161967356" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82abede33ed3c2f8d61cd02409161967356" kindref="member">WHOLEMEMORY_DB_NVSHMEM</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" kindref="member">LogLevel</ref><sp/>{</highlight></codeline>
<codeline lineno="85" refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a8684be68df3e6f94931ebf73a51de477" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a8684be68df3e6f94931ebf73a51de477" kindref="member">LEVEL_FATAL</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="86" refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a56f6226774ca281a80cd2ee0ddd84f8b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a56f6226774ca281a80cd2ee0ddd84f8b" kindref="member">LEVEL_ERROR</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9af1af3c11f22a52b3c8e7b2472275181f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9af1af3c11f22a52b3c8e7b2472275181f" kindref="member">LEVEL_WARN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a831e8f5cdb3ed97330b2e17502149d8f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a831e8f5cdb3ed97330b2e17502149d8f" kindref="member">LEVEL_INFO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a210bac66f34a56114215d54588b8c7f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a210bac66f34a56114215d54588b8c7f3" kindref="member">LEVEL_DEBUG</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a1ca076c143f2ec60ba02c86573af9da3" kindref="member">LEVEL_TRACE</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a1ca076c143f2ec60ba02c86573af9da3" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1ac03f23f6ae5f65598610570f0d8c22c6" kindref="member">wholememory_init</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" kindref="member">LogLevel</ref><sp/>log_level<sp/>=<sp/><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a831e8f5cdb3ed97330b2e17502149d8f" kindref="member">LEVEL_INFO</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1ac64d99bf6a3d3e970047a61a8da2c327" kindref="member">wholememory_finalize</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_</ref>*<sp/><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="wholememory_8h_1a741437b5d700d6a694ce90bf07bed804" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_UNIQUE_ID_BYTES<sp/>(128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structwholememory__unique__id__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref><sp/>{</highlight></codeline>
<codeline lineno="122" refid="structwholememory__unique__id__t_1aabf081a994eadd9edceeed96183c449e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">internal</highlight><highlight class="normal">[<ref refid="wholememory_8h_1a741437b5d700d6a694ce90bf07bed804" kindref="member">WHOLEMEMORY_UNIQUE_ID_BYTES</ref>];</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1aa16928ff6dfb19d81ed83d5c948679d2" kindref="member">wholememory_create_unique_id</ref>(<ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref>*<sp/>unique_id);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a2158c4ad10230fd10e9dbe0e25bb4fa0" kindref="member">wholememory_create_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref>*<sp/>comm,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref><sp/>unique_id,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a535b198b847ba819dc253dc788b03b10" kindref="member">wholememory_destroy_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1aef063eb0befed5b0eebb21cd1709b755" kindref="member">wholememory_communicator_support_type_location</ref>(</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a53c06d095720e32fd22c2de3cb78952a" kindref="member">wholememory_communicator_get_rank</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rank,<sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1aa1aad91132568fe162864d821a47b5cc" kindref="member">wholememory_communicator_get_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>size,<sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a8cd90b1190d991c3be93e5c4cb0efe6e" kindref="member">wholememory_communicator_is_bind_to_nvshmem</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a4ad5b2e466777d8de9060ae41045c9bb" kindref="member">wholememory_communicator_set_distributed_backend</ref>(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,<sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" kindref="member">distributed_backend</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="wholememory_8h_1ac220de29475bcf0823ba0520ee4a7ef8" kindref="member">wholememory_communicator_get_distributed_backend</ref>(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a50d5b529e38c0967a8f8ac3cb0903606" kindref="member">wholememory_communicator_barrier</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_</ref>*<sp/><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a0cee72a10bd01876c3858160bfbc21be" kindref="member">wholememory_malloc</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref>*<sp/>wholememory_handle_ptr,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_granularity);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1adbfde0ef9e47f01898165a11e54be310" kindref="member">wholememory_free</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a399699aa55ec434ea8fe89d2b7bf6832" kindref="member">wholememory_get_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref>*<sp/>comm,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/><ref refid="wholememory_8h_1a502d8b806342b9a8b50fde1eeeb9321f" kindref="member">wholememory_get_memory_type</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/><ref refid="wholememory_8h_1ad50a27e0c7b949e58005bd029621aa84" kindref="member">wholememory_get_memory_location</ref>(</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="wholememory_8h_1a7c0a690dff6b776c85c5f77159278fd8" kindref="member">wholememory_get_distributed_backend</ref>(</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a03e67a7e6ee0c56163867d8574c5a3a8" kindref="member">wholememory_get_total_size</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a6a6163414d3d58e406a9d19945c5d81f" kindref="member">wholememory_get_data_granularity</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1ab7b1ac02e48fd518d5ab9846f888c459" kindref="member">wholememory_get_local_memory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>local_ptr,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>local_size,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>local_offset,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a53fd45479222f083fbc11516cff9f039" kindref="member">wholememory_get_rank_memory</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>rank_memory_ptr,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>rank_memory_size,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>rank_memory_offset,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1aae935625f126a48d3e0a2ef5f424738d" kindref="member">wholememory_get_global_pointer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>global_ptr,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a689f1bb462495115850e4421e264a14a" kindref="member">wholememory_get_global_reference</ref>(<ref refid="structwholememory__gref__t" kindref="compound">wholememory_gref_t</ref>*<sp/>wholememory_gref,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a8bde7fe2b80903e4a81b680bead8bdd3" kindref="member">wholememory_determine_partition_plan</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>size_per_rank,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_granularity,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a5cae2d487f15ab98766f7b23a4ef8d1d" kindref="member">wholememory_determine_entry_partition_plan</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>entry_per_rank,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_entry_count,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a9e5aba2c332624e97cacc8950350547f" kindref="member">wholememory_get_partition_plan</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>size_per_rank,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a6d2464bdeb391f5082127d589ef68639" kindref="member">fork_get_device_count</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1aeffe11e17a6d90f4a2ba0ef1b9ff087b" kindref="member">wholememory_load_from_file</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memory_offset,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memory_entry_size,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_entry_size,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>file_names,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_count,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>round_robin_size);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="wholememory_8h_1a3ecf6243431ca5a36b46be30876b4589" kindref="member">wholememory_store_to_file</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memory_offset,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>memory_entry_stride,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>file_entry_size,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>local_file_name);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a779e1301d544875ab9d2bf1da7c54ef0" kindref="member">wholememory_is_intranode_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a5f6d556e8f85b753bc6840bc41c19097" kindref="member">wholememory_is_build_with_nvshmem</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>wholememory_get_nvshmem_reference(</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__nvshmem__ref__t" kindref="compound">wholememory_nvshmem_ref_t</ref>*<sp/>wholememory_nvshmem_ref,<sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/wholememory/wholememory.h"/>
  </compounddef>
</doxygen>
