<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="logger_8hpp" kind="file" language="C++">
    <compoundname>logger.hpp</compoundname>
    <includes local="no">cstdarg</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">cassert</includes>
    <includes local="no">raft/core/error.hpp</includes>
    <includes refid="error_8hpp" local="yes">error.hpp</includes>
    <includes refid="wholememory_8h" local="no">wholememory/wholememory.h</includes>
    <includedby refid="append__unique_8cpp" local="yes">src/graph_ops/append_unique.cpp</includedby>
    <includedby refid="csr__add__self__loop_8cpp" local="yes">src/graph_ops/csr_add_self_loop.cpp</includedby>
    <includedby refid="logger_8cpp" local="yes">src/logger.cpp</includedby>
    <includedby refid="nvshmem__wholememory__bootstrap_8cpp" local="yes">src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</includedby>
    <includedby refid="parallel__utils_8hpp" local="yes">src/parallel_utils.hpp</includedby>
    <includedby refid="unweighted__sample__without__replacement_8cpp" local="yes">src/wholegraph_ops/unweighted_sample_without_replacement.cpp</includedby>
    <includedby refid="weighted__sample__without__replacement_8cpp" local="yes">src/wholegraph_ops/weighted_sample_without_replacement.cpp</includedby>
    <includedby refid="communicator_8cpp" local="yes">src/wholememory/communicator.cpp</includedby>
    <includedby refid="embedding_8cpp" local="yes">src/wholememory/embedding.cpp</includedby>
    <includedby refid="embedding__cache_8cpp" local="yes">src/wholememory/embedding_cache.cpp</includedby>
    <includedby refid="embedding__optimizer_8cpp" local="yes">src/wholememory/embedding_optimizer.cpp</includedby>
    <includedby refid="file__io_8cpp" local="yes">src/wholememory/file_io.cpp</includedby>
    <includedby refid="initialize_8cpp" local="yes">src/wholememory/initialize.cpp</includedby>
    <includedby refid="memory__handle_8cpp" local="yes">src/wholememory/memory_handle.cpp</includedby>
    <includedby refid="wholememory__tensor_8cpp" local="yes">src/wholememory/wholememory_tensor.cpp</includedby>
    <includedby refid="gather__op_8cpp" local="yes">src/wholememory_ops/gather_op.cpp</includedby>
    <includedby refid="scatter__op_8cpp" local="yes">src/wholememory_ops/scatter_op.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="9">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="2">
        <label>cstdarg</label>
      </node>
      <node id="13">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>src/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>unistd.h</label>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20">
        <label>src/wholememory_ops/scatter_op.cpp</label>
        <link refid="scatter__op_8cpp"/>
      </node>
      <node id="4">
        <label>src/logger.cpp</label>
        <link refid="logger_8cpp"/>
      </node>
      <node id="3">
        <label>src/graph_ops/csr_add_self_loop.cpp</label>
        <link refid="csr__add__self__loop_8cpp"/>
      </node>
      <node id="14">
        <label>src/wholememory/embedding_optimizer.cpp</label>
        <link refid="embedding__optimizer_8cpp"/>
      </node>
      <node id="1">
        <label>src/logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/wholememory_ops/gather_op.cpp</label>
        <link refid="gather__op_8cpp"/>
      </node>
      <node id="12">
        <label>src/wholememory/embedding.cpp</label>
        <link refid="embedding_8cpp"/>
      </node>
      <node id="17">
        <label>src/wholememory/memory_handle.cpp</label>
        <link refid="memory__handle_8cpp"/>
      </node>
      <node id="18">
        <label>src/wholememory/wholememory_tensor.cpp</label>
        <link refid="wholememory__tensor_8cpp"/>
      </node>
      <node id="13">
        <label>src/wholememory/embedding_cache.cpp</label>
        <link refid="embedding__cache_8cpp"/>
      </node>
      <node id="6">
        <label>src/parallel_utils.hpp</label>
        <link refid="parallel__utils_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/graph_ops/append_unique.cpp</label>
        <link refid="append__unique_8cpp"/>
      </node>
      <node id="9">
        <label>src/wholegraph_ops/unweighted_sample_without_replacement.cpp</label>
        <link refid="unweighted__sample__without__replacement_8cpp"/>
      </node>
      <node id="5">
        <label>src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</label>
        <link refid="nvshmem__wholememory__bootstrap_8cpp"/>
      </node>
      <node id="7">
        <label>src/parallel_utils.cpp</label>
        <link refid="parallel__utils_8cpp"/>
      </node>
      <node id="16">
        <label>src/wholememory/initialize.cpp</label>
        <link refid="initialize_8cpp"/>
      </node>
      <node id="10">
        <label>src/wholegraph_ops/weighted_sample_without_replacement.cpp</label>
        <link refid="weighted__sample__without__replacement_8cpp"/>
      </node>
      <node id="8">
        <label>src/wholememory/wholememory.cpp</label>
        <link refid="wholememory_8cpp"/>
      </node>
      <node id="15">
        <label>src/wholememory/file_io.cpp</label>
        <link refid="file__io_8cpp"/>
      </node>
      <node id="11">
        <label>src/wholememory/communicator.cpp</label>
        <link refid="communicator_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacewholememory">wholememory</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" prot="public" static="no">
        <name>WHOLEMEMORY_LOG</name>
        <param><defname>lev</defname></param>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>  do {                                                                                 \
    if (<ref refid="namespacewholememory_1a0d576289ac0363828be1beec7d4cf320" kindref="member">wholememory::will_log_for</ref>(lev))                                                \
      std::cout &lt;&lt; <ref refid="group__CStringFormat_1ga4f5d8ab83984f560343bdffc037e393d" kindref="member">wholememory::format</ref>(fmt, ##__VA_ARGS__) &lt;&lt; std::endl &lt;&lt; std::flush; \
  } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logger.hpp" line="70" column="9" bodyfile="src/logger.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logger_8hpp_1a2aabf020ba5e697df145e080d894b5c4" prot="public" static="no">
        <name>WHOLEMEMORY_FATAL</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer>  do {                                                                                 \
    std::string fatal_msg{};                                                           \
    <ref refid="error_8hpp_1a33c6861f6bff7b4e32aba13aa0e6b01a" kindref="member">SET_WHOLEMEMORY_ERROR_MSG</ref>(fatal_msg, &quot;WholeMemory FATAL at &quot;, fmt, ##__VA_ARGS__); \
    throw <ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>(fatal_msg);                                         \
  } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logger.hpp" line="76" column="9" bodyfile="src/logger.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" prot="public" static="no">
        <name>WHOLEMEMORY_ERROR</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" kindref="member">WHOLEMEMORY_LOG</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a56f6226774ca281a80cd2ee0ddd84f8b" kindref="member">LEVEL_ERROR</ref>, fmt, ##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logger.hpp" line="83" column="9" bodyfile="src/logger.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logger_8hpp_1ada7e915c82d40eae1dee8f59a56190b8" prot="public" static="no">
        <name>WHOLEMEMORY_WARN</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" kindref="member">WHOLEMEMORY_LOG</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9af1af3c11f22a52b3c8e7b2472275181f" kindref="member">LEVEL_WARN</ref>, fmt, ##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logger.hpp" line="84" column="9" bodyfile="src/logger.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logger_8hpp_1a1702a455ad09f0ae700386f361fd83da" prot="public" static="no">
        <name>WHOLEMEMORY_INFO</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" kindref="member">WHOLEMEMORY_LOG</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a831e8f5cdb3ed97330b2e17502149d8f" kindref="member">LEVEL_INFO</ref>, fmt, ##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logger.hpp" line="85" column="9" bodyfile="src/logger.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logger_8hpp_1a0eb7cfae57edd307ff88037f844938c9" prot="public" static="no">
        <name>WHOLEMEMORY_DEBUG</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" kindref="member">WHOLEMEMORY_LOG</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a210bac66f34a56114215d54588b8c7f3" kindref="member">LEVEL_DEBUG</ref>, fmt, ##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logger.hpp" line="86" column="9" bodyfile="src/logger.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="logger_8hpp_1ad27061a8f698adf1d9ded4af3e21849a" prot="public" static="no">
        <name>WHOLEMEMORY_TRACE</name>
        <param><defname>fmt</defname></param>
        <param><defname>...</defname></param>
        <initializer><ref refid="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" kindref="member">WHOLEMEMORY_LOG</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a1ca076c143f2ec60ba02c86573af9da3" kindref="member">LEVEL_TRACE</ref>, fmt, ##__VA_ARGS__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/logger.hpp" line="87" column="9" bodyfile="src/logger.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raft/core/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8hpp" kindref="compound">error.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wholememory_8h" kindref="compound">wholememory/wholememory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory" kindref="compound">wholememory</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" kindref="member">LogLevel</ref>&amp;<sp/><ref refid="namespacewholememory_1a4033065ca9bce3f08195fe129c148574" kindref="member">get_log_level</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a8e4a31a1162a4a8b732df36bd7c2fb40" kindref="member">set_log_level</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" kindref="member">LogLevel</ref><sp/>lev);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a0d576289ac0363828be1beec7d4cf320" kindref="member">will_log_for</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9" kindref="member">LogLevel</ref><sp/>lev);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="group__CStringFormat_1ga4f5d8ab83984f560343bdffc037e393d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="group__CStringFormat_1ga4f5d8ab83984f560343bdffc037e393d" kindref="member">format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>va_list&amp;<sp/>vl)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>va_list<sp/>vl_copy;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>va_copy(vl_copy,<sp/>vl);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>std::vsnprintf(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0,<sp/>fmt,<sp/>vl_copy);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>assert(length<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>std::vector&lt;char&gt;<sp/>buf(length<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>(void)std::vsnprintf(buf.data(),<sp/>length<sp/>+<sp/>1,<sp/>fmt,<sp/>vl);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(buf.data());</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="group__CStringFormat_1ga199f31858eed3e5c749216f1377dc380" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="group__CStringFormat_1ga4f5d8ab83984f560343bdffc037e393d" kindref="member">format</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>va_list<sp/>vl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>va_start(vl,<sp/>fmt);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>std::string<sp/>str<sp/>=<sp/><ref refid="group__CStringFormat_1ga4f5d8ab83984f560343bdffc037e393d" kindref="member">wholememory::format</ref>(fmt,<sp/>vl);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>va_end(vl);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70" refid="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_LOG(lev,<sp/>fmt,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(wholememory::will_log_for(lev))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>wholememory::format(fmt,<sp/>##__VA_ARGS__)<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::flush;<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="logger_8hpp_1a2aabf020ba5e697df145e080d894b5c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_FATAL(fmt,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>std::string<sp/>fatal_msg{};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SET_WHOLEMEMORY_ERROR_MSG(fatal_msg,<sp/>&quot;WholeMemory<sp/>FATAL<sp/>at<sp/>&quot;</highlight><highlight class="normal">,<sp/>fmt,<sp/>##__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>throw<sp/>wholememory::logic_error(fatal_msg);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_ERROR(fmt,<sp/>...)<sp/>WHOLEMEMORY_LOG(LEVEL_ERROR,<sp/>fmt,<sp/>##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="logger_8hpp_1ada7e915c82d40eae1dee8f59a56190b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_WARN(fmt,<sp/>...)<sp/><sp/>WHOLEMEMORY_LOG(LEVEL_WARN,<sp/>fmt,<sp/>##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="logger_8hpp_1a1702a455ad09f0ae700386f361fd83da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_INFO(fmt,<sp/>...)<sp/><sp/>WHOLEMEMORY_LOG(LEVEL_INFO,<sp/>fmt,<sp/>##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="logger_8hpp_1a0eb7cfae57edd307ff88037f844938c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_DEBUG(fmt,<sp/>...)<sp/>WHOLEMEMORY_LOG(LEVEL_DEBUG,<sp/>fmt,<sp/>##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="logger_8hpp_1ad27061a8f698adf1d9ded4af3e21849a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WHOLEMEMORY_TRACE(fmt,<sp/>...)<sp/>WHOLEMEMORY_LOG(LEVEL_TRACE,<sp/>fmt,<sp/>##__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>wholememory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/logger.hpp"/>
  </compounddef>
</doxygen>
