<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="tensor__description_8cpp" kind="file" language="C++">
    <compoundname>tensor_description.cpp</compoundname>
    <includes refid="tensor__description_8h" local="no">wholememory/tensor_description.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>src/wholememory/tensor_description.cpp</label>
        <link refid="tensor__description_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tensor__description_8cpp_1a1283f01dec368463825a17645e13169e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t wholememory_dtype_get_element_size</definition>
        <argsstring>(wholememory_dtype_t dtype)</argsstring>
        <name>wholememory_dtype_get_element_size</name>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get element size of wholememory_dtype_t <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>: wholememory_dtype_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: element size of dtype, -1 on invalid dtype. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="22" column="8" bodyfile="src/wholememory/tensor_description.cpp" bodystart="22" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1ac8f6885877895e0d08ee49ac1cbeccbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_dtype_is_floating_number</definition>
        <argsstring>(wholememory_dtype_t dtype)</argsstring>
        <name>wholememory_dtype_is_floating_number</name>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if dtype is floating number <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>: wholememory_dtype_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: True if dtype is WHOLEMEMORY_DT_FLOAT, WHOLEMEMORY_DT_HALF, WHOLEMEMORY_DT_DOUBLE or WHOLEMEMORY_DT_BF16. False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="38" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a95d71635154e5aac8a984f1782615ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_dtype_is_integer_number</definition>
        <argsstring>(wholememory_dtype_t dtype)</argsstring>
        <name>wholememory_dtype_is_integer_number</name>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if dtype is integer number <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>: wholememory_dtype_t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: True if dtype is WHOLEMEMORY_DT_INT, WHOLEMEMORY_DT_INT64, WHOLEMEMORY_DT_INT16 or WHOLEMEMORY_DT_INT8, False otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="46" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a9f379e63f1116573712c47a9fded9867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref></type>
        <definition>wholememory_array_description_t wholememory_create_array_desc</definition>
        <argsstring>(int64_t size, int64_t storage_offset, wholememory_dtype_t dtype)</argsstring>
        <name>wholememory_create_array_desc</name>
        <param>
          <type>int64_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>storage_offset</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>: array size in number of elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>: storage offset in number of elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>: data type of array elements </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="54" column="33" bodyfile="src/wholememory/tensor_description.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1ac22ee763259c4865d5ec16a2ec34af62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref></type>
        <definition>wholememory_matrix_description_t wholememory_create_matrix_desc</definition>
        <argsstring>(int64_t sizes[2], int64_t stride, int64_t storage_offset, wholememory_dtype_t dtype)</argsstring>
        <name>wholememory_create_matrix_desc</name>
        <param>
          <type>int64_t</type>
          <declname>sizes</declname>
          <array>[2]</array>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stride</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>storage_offset</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sizes</parametername>
</parameternamelist>
<parameterdescription>
<para>: matrix sizes array, counted in number of elements, sizes[1] changes fastest. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>: stride of first dimension(slower changed dimension), stride is counted in number of elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>storage_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>: storage offset in number of elements </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>: data type of matrix elements </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>created <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="65" column="34" bodyfile="src/wholememory/tensor_description.cpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a98ad7a286797c238fa7974a32ac0c58a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory_initialize_tensor_desc</definition>
        <argsstring>(wholememory_tensor_description_t *p_tensor_description)</argsstring>
        <name>wholememory_initialize_tensor_desc</name>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>, set sizes and strides to all ones, and set storage_offset to 0, set dtype to WHOLEMEMORY_DT_UNKNOWN, set dim to 0. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="79" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a1349e4d9b4d917597068b02f177e1aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory_copy_array_desc_to_matrix</definition>
        <argsstring>(wholememory_matrix_description_t *p_matrix_description, wholememory_array_description_t *p_array_description)</argsstring>
        <name>wholememory_copy_array_desc_to_matrix</name>
        <param>
          <type><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> *</type>
          <declname>p_matrix_description</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> *</type>
          <declname>p_array_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy array description to tensor description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_matrix_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_array_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="90" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a0018f4528d34d836e42630f6e8f088e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory_copy_array_desc_to_tensor</definition>
        <argsstring>(wholememory_tensor_description_t *p_tensor_description, wholememory_array_description_t *p_array_description)</argsstring>
        <name>wholememory_copy_array_desc_to_tensor</name>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> *</type>
          <declname>p_array_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy array description to tensor description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_array_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="100" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="100" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1af2eef6741c9e7e40c4ea740f512f23dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory_copy_matrix_desc_to_tensor</definition>
        <argsstring>(wholememory_tensor_description_t *p_tensor_description, wholememory_matrix_description_t *p_matrix_description)</argsstring>
        <name>wholememory_copy_matrix_desc_to_tensor</name>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> *</type>
          <declname>p_matrix_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy matrix description to tensor description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_matrix_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="111" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="111" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a4bd945e95a4bec4bc89251ed8827587f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_convert_tensor_desc_to_array</definition>
        <argsstring>(wholememory_array_description_t *p_array_description, wholememory_tensor_description_t *p_tensor_description)</argsstring>
        <name>wholememory_convert_tensor_desc_to_array</name>
        <param>
          <type><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> *</type>
          <declname>p_array_description</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert tensor description to array description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_array_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return true if convertible else false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="124" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="124" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a4a1462d960e5272e54b6b349c0a9103d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_convert_tensor_desc_to_matrix</definition>
        <argsstring>(wholememory_matrix_description_t *p_matrix_description, wholememory_tensor_description_t *p_tensor_description)</argsstring>
        <name>wholememory_convert_tensor_desc_to_matrix</name>
        <param>
          <type><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> *</type>
          <declname>p_matrix_description</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert tensor description to matrix description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_matrix_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return true if convertible else false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="139" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="139" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a7ccb1c37ed3f815d4c97b480367e172f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t wholememory_get_memory_element_count_from_array</definition>
        <argsstring>(wholememory_array_description_t *p_array_description)</argsstring>
        <name>wholememory_get_memory_element_count_from_array</name>
        <param>
          <type><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> *</type>
          <declname>p_array_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total element count from array description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_array_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return element count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="161" column="9" bodyfile="src/wholememory/tensor_description.cpp" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a2f6022544969a1a512b92eac78a4d540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t wholememory_get_memory_size_from_array</definition>
        <argsstring>(wholememory_array_description_t *p_array_description)</argsstring>
        <name>wholememory_get_memory_size_from_array</name>
        <param>
          <type><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> *</type>
          <declname>p_array_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total memory size from array description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_array_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return memory size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="167" column="9" bodyfile="src/wholememory/tensor_description.cpp" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a472f4deff7fb87d90a5b0ad1a87208f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t wholememory_get_memory_element_count_from_matrix</definition>
        <argsstring>(wholememory_matrix_description_t *p_matrix_description)</argsstring>
        <name>wholememory_get_memory_element_count_from_matrix</name>
        <param>
          <type><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> *</type>
          <declname>p_matrix_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total element count from matrix description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_matrix_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return element count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="173" column="9" bodyfile="src/wholememory/tensor_description.cpp" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1ae8dad70c4b0ab44af5c14daeaaf3c598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t wholememory_get_memory_size_from_matrix</definition>
        <argsstring>(wholememory_matrix_description_t *p_matrix_description)</argsstring>
        <name>wholememory_get_memory_size_from_matrix</name>
        <param>
          <type><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> *</type>
          <declname>p_matrix_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total memory size from matrix description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_matrix_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return memory size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="179" column="9" bodyfile="src/wholememory/tensor_description.cpp" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a42c858c711aea6b50a494bb57a542568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t wholememory_get_memory_element_count_from_tensor</definition>
        <argsstring>(wholememory_tensor_description_t *p_tensor_description)</argsstring>
        <name>wholememory_get_memory_element_count_from_tensor</name>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total element count from tensor description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return element count. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="186" column="9" bodyfile="src/wholememory/tensor_description.cpp" bodystart="186" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a1f9ecef913f2ca09c01cf5d0e87911aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t wholememory_get_memory_size_from_tensor</definition>
        <argsstring>(wholememory_tensor_description_t *p_tensor_description)</argsstring>
        <name>wholememory_get_memory_size_from_tensor</name>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get total memory size from tensor description. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: Return memory size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="195" column="9" bodyfile="src/wholememory/tensor_description.cpp" bodystart="195" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1ab48ae67f5f180a6ad0def499d37e1ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_squeeze_tensor</definition>
        <argsstring>(wholememory_tensor_description_t *p_tensor_description, int dim)</argsstring>
        <name>wholememory_squeeze_tensor</name>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Squeeze tensor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>: which dim to squeeze </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: true if success else false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="202" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="202" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="tensor__description_8cpp_1a8b696b100434b99de28e98f8fdc05e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory_unsqueeze_tensor</definition>
        <argsstring>(wholememory_tensor_description_t *p_tensor_description, int dim)</argsstring>
        <name>wholememory_unsqueeze_tensor</name>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>p_tensor_description</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unsqueeze tensor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to <ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dim</parametername>
</parameternamelist>
<parameterdescription>
<para>: unsqueeze at which dim </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: true if success else false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/tensor_description.cpp" line="219" column="6" bodyfile="src/wholememory/tensor_description.cpp" bodystart="219" bodyend="233"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tensor__description_8h" kindref="compound">wholememory/tensor_description.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a1283f01dec368463825a17645e13169e" kindref="member">wholememory_dtype_get_element_size</ref>(<ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>dtype)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dtype)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca660302ea0e9c9b953cd20e96f170d78f" kindref="member">WHOLEMEMORY_DT_UNKNOWN</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae63ed5b24aa79279081568835a6ed649" kindref="member">WHOLEMEMORY_DT_INT16</ref>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca099d083a74b36954ffa53074d982c64b" kindref="member">WHOLEMEMORY_DT_BF16</ref>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca21c33803cd2286859e642bfcc76e0c53" kindref="member">WHOLEMEMORY_DT_HALF</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae4485215773ac9d733555c7119002e52" kindref="member">WHOLEMEMORY_DT_INT</ref>:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca8fc99da34693be9e062833242c27d6ec" kindref="member">WHOLEMEMORY_DT_FLOAT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cad544b558c31c88cf2977614e34ace0d5" kindref="member">WHOLEMEMORY_DT_INT64</ref>:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca690ba24decf00c023dba03826a296193" kindref="member">WHOLEMEMORY_DT_DOUBLE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1ac8f6885877895e0d08ee49ac1cbeccbb" kindref="member">wholememory_dtype_is_floating_number</ref>(<ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>dtype)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca8fc99da34693be9e062833242c27d6ec" kindref="member">WHOLEMEMORY_DT_FLOAT</ref><sp/>||<sp/>dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca21c33803cd2286859e642bfcc76e0c53" kindref="member">WHOLEMEMORY_DT_HALF</ref><sp/>||</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca690ba24decf00c023dba03826a296193" kindref="member">WHOLEMEMORY_DT_DOUBLE</ref><sp/>||<sp/>dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca099d083a74b36954ffa53074d982c64b" kindref="member">WHOLEMEMORY_DT_BF16</ref>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a95d71635154e5aac8a984f1782615ab9" kindref="member">wholememory_dtype_is_integer_number</ref>(<ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>dtype)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae4485215773ac9d733555c7119002e52" kindref="member">WHOLEMEMORY_DT_INT</ref><sp/>||<sp/>dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cad544b558c31c88cf2977614e34ace0d5" kindref="member">WHOLEMEMORY_DT_INT64</ref><sp/>||</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae63ed5b24aa79279081568835a6ed649" kindref="member">WHOLEMEMORY_DT_INT16</ref><sp/>||<sp/>dtype<sp/>==<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref><sp/><ref refid="tensor__description_8cpp_1a9f379e63f1116573712c47a9fded9867" kindref="member">wholememory_create_array_desc</ref>(int64_t<sp/>size,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>storage_offset,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>dtype)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref><sp/>wm_array_desc;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>wm_array_desc.<ref refid="structwholememory__array__description__t_1ac26fe42874c1872624b9b6a22e92d2e6" kindref="member">size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>wm_array_desc.<ref refid="structwholememory__array__description__t_1aaf502ee49faaaca165a8873333b82885" kindref="member">storage_offset</ref><sp/>=<sp/>storage_offset;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>wm_array_desc.<ref refid="structwholememory__array__description__t_1ad19746269739fe6260e67c0ca1d36fba" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dtype;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wm_array_desc;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref><sp/><ref refid="tensor__description_8cpp_1ac22ee763259c4865d5ec16a2ec34af62" kindref="member">wholememory_create_matrix_desc</ref>(int64_t<sp/>sizes[2],</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>stride,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>storage_offset,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>dtype)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref><sp/>wm_matrix_desc;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>wm_matrix_desc.<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizes[0];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>wm_matrix_desc.<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizes[1];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>wm_matrix_desc.<ref refid="structwholememory__matrix__description__t_1ac712682b76f77a2c971b2b3d7f2f3d23" kindref="member">stride</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>stride;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>wm_matrix_desc.<ref refid="structwholememory__matrix__description__t_1a5afb47b05303091a3172beff18dc1835" kindref="member">storage_offset</ref><sp/>=<sp/>storage_offset;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>wm_matrix_desc.<ref refid="structwholememory__matrix__description__t_1a4f250764d95940dc84ba6eaa33fe955f" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>dtype;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wm_matrix_desc;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a98ad7a286797c238fa7974a32ac0c58a" kindref="member">wholememory_initialize_tensor_desc</ref>(<ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="tensor__description_8h_1aab2708854fc964fe383d730c8979f8fa" kindref="member">WHOLEMEMORY_MAX_TENSOR_DIM</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[i]<sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca660302ea0e9c9b953cd20e96f170d78f" kindref="member">WHOLEMEMORY_DT_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a1349e4d9b4d917597068b02f177e1aa7" kindref="member">wholememory_copy_array_desc_to_matrix</ref>(<ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>*<sp/>p_matrix_description,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>*<sp/>p_array_description)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ac26fe42874c1872624b9b6a22e92d2e6" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1a4f250764d95940dc84ba6eaa33fe955f" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ad19746269739fe6260e67c0ca1d36fba" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1ac712682b76f77a2c971b2b3d7f2f3d23" kindref="member">stride</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1a5afb47b05303091a3172beff18dc1835" kindref="member">storage_offset</ref><sp/>=<sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1aaf502ee49faaaca165a8873333b82885" kindref="member">storage_offset</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a0018f4528d34d836e42630f6e8f088e4" kindref="member">wholememory_copy_array_desc_to_tensor</ref>(<ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>*<sp/>p_array_description)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="tensor__description_8cpp_1a98ad7a286797c238fa7974a32ac0c58a" kindref="member">wholememory_initialize_tensor_desc</ref>(p_tensor_description);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ac26fe42874c1872624b9b6a22e92d2e6" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ad19746269739fe6260e67c0ca1d36fba" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref><sp/>=<sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1aaf502ee49faaaca165a8873333b82885" kindref="member">storage_offset</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1af2eef6741c9e7e40c4ea740f512f23dc" kindref="member">wholememory_copy_matrix_desc_to_tensor</ref>(<ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>*<sp/>p_matrix_description)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="tensor__description_8cpp_1a98ad7a286797c238fa7974a32ac0c58a" kindref="member">wholememory_initialize_tensor_desc</ref>(p_tensor_description);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[0];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[1];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/><sp/><sp/><sp/><sp/>=<sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1ac712682b76f77a2c971b2b3d7f2f3d23" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[1]<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1a4f250764d95940dc84ba6eaa33fe955f" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref><sp/>=<sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1a5afb47b05303091a3172beff18dc1835" kindref="member">storage_offset</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a4bd945e95a4bec4bc89251ed8827587f" kindref="member">wholememory_convert_tensor_desc_to_array</ref>(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>*<sp/>p_array_description,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/>&lt;=<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca660302ea0e9c9b953cd20e96f170d78f" kindref="member">WHOLEMEMORY_DT_UNKNOWN</ref><sp/>||</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/>&gt;=<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca6198ec382f0e25f11668ac8ba9456125" kindref="member">WHOLEMEMORY_DT_COUNT</ref>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ad19746269739fe6260e67c0ca1d36fba" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1aaf502ee49faaaca165a8873333b82885" kindref="member">storage_offset</ref><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ac26fe42874c1872624b9b6a22e92d2e6" kindref="member">size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a4a1462d960e5272e54b6b349c0a9103d" kindref="member">wholememory_convert_tensor_desc_to_matrix</ref>(</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>*<sp/>p_matrix_description,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/>&lt;=<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca660302ea0e9c9b953cd20e96f170d78f" kindref="member">WHOLEMEMORY_DT_UNKNOWN</ref><sp/>||</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/>&gt;=<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca6198ec382f0e25f11668ac8ba9456125" kindref="member">WHOLEMEMORY_DT_COUNT</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>&gt;<sp/>2<sp/>||<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>==<sp/>2<sp/>&amp;&amp;<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[1]<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1a4f250764d95940dc84ba6eaa33fe955f" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1a5afb47b05303091a3172beff18dc1835" kindref="member">storage_offset</ref><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[1]<sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[1];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1ac712682b76f77a2c971b2b3d7f2f3d23" kindref="member">stride</ref><sp/><sp/><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1ac712682b76f77a2c971b2b3d7f2f3d23" kindref="member">stride</ref><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">int64_t<sp/><ref refid="tensor__description_8cpp_1a7ccb1c37ed3f815d4c97b480367e172f" kindref="member">wholememory_get_memory_element_count_from_array</ref>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>*<sp/>p_array_description)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ac26fe42874c1872624b9b6a22e92d2e6" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">int64_t<sp/><ref refid="tensor__description_8cpp_1a2f6022544969a1a512b92eac78a4d540" kindref="member">wholememory_get_memory_size_from_array</ref>(<ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref>*<sp/>p_array_description)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a7ccb1c37ed3f815d4c97b480367e172f" kindref="member">wholememory_get_memory_element_count_from_array</ref>(p_array_description)<sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8cpp_1a1283f01dec368463825a17645e13169e" kindref="member">wholememory_dtype_get_element_size</ref>(p_array_description-&gt;<ref refid="structwholememory__array__description__t_1ad19746269739fe6260e67c0ca1d36fba" kindref="member">dtype</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">int64_t<sp/><ref refid="tensor__description_8cpp_1a472f4deff7fb87d90a5b0ad1a87208f8" kindref="member">wholememory_get_memory_element_count_from_matrix</ref>(</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>*<sp/>p_matrix_description)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1aa8a2dfca035dd6e3da2b0673adf29b78" kindref="member">sizes</ref>[0]<sp/>*<sp/>p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1ac712682b76f77a2c971b2b3d7f2f3d23" kindref="member">stride</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">int64_t<sp/><ref refid="tensor__description_8cpp_1ae8dad70c4b0ab44af5c14daeaaf3c598" kindref="member">wholememory_get_memory_size_from_matrix</ref>(</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref>*<sp/>p_matrix_description)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a472f4deff7fb87d90a5b0ad1a87208f8" kindref="member">wholememory_get_memory_element_count_from_matrix</ref>(p_matrix_description)<sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8cpp_1a1283f01dec368463825a17645e13169e" kindref="member">wholememory_dtype_get_element_size</ref>(p_matrix_description-&gt;<ref refid="structwholememory__matrix__description__t_1a4f250764d95940dc84ba6eaa33fe955f" kindref="member">dtype</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">int64_t<sp/><ref refid="tensor__description_8cpp_1a42c858c711aea6b50a494bb57a542568" kindref="member">wholememory_get_memory_element_count_from_tensor</ref>(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>&lt;<sp/>0<sp/>||<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>&gt;=<sp/><ref refid="tensor__description_8h_1aab2708854fc964fe383d730c8979f8fa" kindref="member">WHOLEMEMORY_MAX_TENSOR_DIM</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/>*<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0];</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">int64_t<sp/><ref refid="tensor__description_8cpp_1a1f9ecef913f2ca09c01cf5d0e87911aa" kindref="member">wholememory_get_memory_size_from_tensor</ref>(</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a42c858c711aea6b50a494bb57a542568" kindref="member">wholememory_get_memory_element_count_from_tensor</ref>(p_tensor_description)<sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8cpp_1a1283f01dec368463825a17645e13169e" kindref="member">wholememory_dtype_get_element_size</ref>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1ab48ae67f5f180a6ad0def499d37e1ee4" kindref="member">wholememory_squeeze_tensor</ref>(<ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dim<sp/>&lt;<sp/>0<sp/>||<sp/>dim<sp/>&gt;=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[dim]<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dim<sp/>!=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>-<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[dim]<sp/>!=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[dim<sp/>+<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>dim;<sp/>idx<sp/>&lt;<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>-<sp/>1;<sp/>idx++)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[idx]<sp/><sp/><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[idx<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[idx]<sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[idx<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref>--;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8cpp_1a8b696b100434b99de28e98f8fdc05e89" kindref="member">wholememory_unsqueeze_tensor</ref>(<ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>p_tensor_description,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim)</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_tensor_description<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dim<sp/>&lt;<sp/>0<sp/>||<sp/>dim<sp/>&gt;<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>int64_t<sp/>last_stride<sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>idx<sp/>&gt;<sp/>dim;<sp/>idx--)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[idx]<sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[idx<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>last_stride<sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[idx]<sp/>=<sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[idx<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[dim]<sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[dim]<sp/>=<sp/>last_stride;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>p_tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref>++;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/wholememory/tensor_description.cpp"/>
  </compounddef>
</doxygen>
