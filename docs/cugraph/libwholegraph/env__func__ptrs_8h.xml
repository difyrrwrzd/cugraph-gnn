<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="env__func__ptrs_8h" kind="file" language="C++">
    <compoundname>env_func_ptrs.h</compoundname>
    <includes local="no">cuda_runtime_api.h</includes>
    <includes refid="tensor__description_8h" local="no">wholememory/tensor_description.h</includes>
    <includedby refid="embedding_8h" local="no">include/wholememory/embedding.h</includedby>
    <includedby refid="graph__op_8h" local="no">include/wholememory/graph_op.h</includedby>
    <includedby refid="wholegraph__op_8h" local="no">include/wholememory/wholegraph_op.h</includedby>
    <includedby refid="wholememory__op_8h" local="no">include/wholememory/wholememory_op.h</includedby>
    <includedby refid="append__unique__impl_8h" local="no">src/graph_ops/append_unique_impl.h</includedby>
    <includedby refid="unweighted__sample__without__replacement__impl_8h" local="no">src/wholegraph_ops/unweighted_sample_without_replacement_impl.h</includedby>
    <includedby refid="weighted__sample__without__replacement__impl_8h" local="no">src/wholegraph_ops/weighted_sample_without_replacement_impl.h</includedby>
    <includedby refid="embedding_8cpp" local="no">src/wholememory/embedding.cpp</includedby>
    <includedby refid="env__func__ptrs_8hpp" local="no">src/wholememory/env_func_ptrs.hpp</includedby>
    <includedby refid="embedding__cache__func_8h" local="no">src/wholememory_ops/functions/embedding_cache_func.h</includedby>
    <includedby refid="output__memory__handle_8hpp" local="no">src/wholememory_ops/output_memory_handle.hpp</includedby>
    <includedby refid="temp__memory__handle_8hpp" local="no">src/wholememory_ops/temp_memory_handle.hpp</includedby>
    <includedby refid="thrust__allocator_8hpp" local="no">src/wholememory_ops/thrust_allocator.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>include/wholememory/env_func_ptrs.h</label>
        <link refid="env__func__ptrs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="3">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>src/wholememory/embedding_optimizer.hpp</label>
        <link refid="embedding__optimizer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/graph_ops/append_unique_impl.h</label>
        <link refid="append__unique__impl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/wholememory_ops/scatter_op.cpp</label>
        <link refid="scatter__op_8cpp"/>
      </node>
      <node id="12">
        <label>src/graph_ops/csr_add_self_loop.cpp</label>
        <link refid="csr__add__self__loop_8cpp"/>
      </node>
      <node id="10">
        <label>include/wholememory/graph_op.h</label>
        <link refid="graph__op_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/wholememory/embedding.hpp</label>
        <link refid="embedding_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/wholememory/embedding_optimizer.cpp</label>
        <link refid="embedding__optimizer_8cpp"/>
      </node>
      <node id="24">
        <label>src/wholememory_ops/output_memory_handle.hpp</label>
        <link refid="output__memory__handle_8hpp"/>
      </node>
      <node id="16">
        <label>include/wholememory/wholememory_op.h</label>
        <link refid="wholememory__op_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>src/wholememory_ops/thrust_allocator.hpp</label>
        <link refid="thrust__allocator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/wholememory_ops/gather_op.cpp</label>
        <link refid="gather__op_8cpp"/>
      </node>
      <node id="1">
        <label>include/wholememory/env_func_ptrs.h</label>
        <link refid="env__func__ptrs_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/wholememory/embedding.cpp</label>
        <link refid="embedding_8cpp"/>
      </node>
      <node id="23">
        <label>src/wholememory/env_func_ptrs.cpp</label>
        <link refid="env__func__ptrs_8cpp"/>
      </node>
      <node id="7">
        <label>src/wholememory/embedding_cache.cpp</label>
        <link refid="embedding__cache_8cpp"/>
      </node>
      <node id="28">
        <label>src/wholememory_ops/functions/sort_indices_func.h</label>
        <link refid="sort__indices__func_8h"/>
      </node>
      <node id="30">
        <label>src/wholememory_ops/thrust_allocator.cpp</label>
        <link refid="thrust__allocator_8cpp"/>
      </node>
      <node id="21">
        <label>src/wholegraph_ops/weighted_sample_without_replacement_impl.h</label>
        <link refid="weighted__sample__without__replacement__impl_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>src/wholememory_ops/temp_memory_handle.hpp</label>
        <link refid="temp__memory__handle_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>src/graph_ops/append_unique.cpp</label>
        <link refid="append__unique_8cpp"/>
      </node>
      <node id="14">
        <label>src/wholegraph_ops/unweighted_sample_without_replacement.cpp</label>
        <link refid="unweighted__sample__without__replacement_8cpp"/>
      </node>
      <node id="2">
        <label>include/wholememory/embedding.h</label>
        <link refid="embedding_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>include/wholememory/wholegraph_op.h</label>
        <link refid="wholegraph__op_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>src/wholememory/env_func_ptrs.hpp</label>
        <link refid="env__func__ptrs_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/wholememory_ops/functions/embedding_cache_func.h</label>
        <link refid="embedding__cache__func_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>src/wholegraph_ops/unweighted_sample_without_replacement_impl.h</label>
        <link refid="unweighted__sample__without__replacement__impl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/wholememory/embedding_cache.hpp</label>
        <link refid="embedding__cache_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>src/wholegraph_ops/weighted_sample_without_replacement.cpp</label>
        <link refid="weighted__sample__without__replacement_8cpp"/>
      </node>
      <node id="26">
        <label>src/wholememory_ops/functions/exchange_embeddings_nccl_func.h</label>
        <link refid="exchange__embeddings__nccl__func_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>src/wholememory_ops/functions/exchange_ids_nccl_func.h</label>
        <link refid="exchange__ids__nccl__func_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structwholememory__temp__memory__func__t" prot="public">wholememory_temp_memory_func_t</innerclass>
    <innerclass refid="structwholememory__output__memory__func__t" prot="public">wholememory_output_memory_func_t</innerclass>
    <innerclass refid="structwholememory__env__func__t" prot="public">wholememory_env_func_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cff" prot="public" static="no" strong="no">
        <type></type>
        <name>wholememory_memory_allocation_type_t</name>
        <enumvalue id="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffad668833797760bc14cf0cfd19de9fb2b" prot="public">
          <name>WHOLEMEMORY_MA_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa90bc04801a32deee762185250c704760" prot="public">
          <name>WHOLEMEMORY_MA_DEVICE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6a05bf42a1aa42657f7a6a9b66d43d4a" prot="public">
          <name>WHOLEMEMORY_MA_HOST</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6832f7b989ef69484f680690d2fa98fc" prot="public">
          <name>WHOLEMEMORY_MA_PINNED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function pointers for memory allocation. Input tensor memory should be allocated and use void* pointer to the memory and <ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref> or <ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref> to specify the shape Output tensor with fixed size should be the same as Input tensor. Output tensor with shape determined by Op should has void* memory_context input and allocated by wholememory_malloc_func_t functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/env_func_ptrs.h" line="33" column="1" bodyfile="include/wholememory/env_func_ptrs.h" bodystart="33" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="env__func__ptrs_8h_1a2493c2509f6269e4fe1312cd73fe0668" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wholememory_create_memory_context_func_t) (void **memory_context, void *global_context)</definition>
        <argsstring>)(void **memory_context, void *global_context)</argsstring>
        <name>wholememory_create_memory_context_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function pointer to create temporary memory context. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/env_func_ptrs.h" line="43" column="9" bodyfile="include/wholememory/env_func_ptrs.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="env__func__ptrs_8h_1a9478ec5dbbedf151935a29c4a7b1a2f2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wholememory_destroy_memory_context_func_t) (void *memory_context, void *global_context)</definition>
        <argsstring>)(void *memory_context, void *global_context)</argsstring>
        <name>wholememory_destroy_memory_context_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/env_func_ptrs.h" line="46" column="9" bodyfile="include/wholememory/env_func_ptrs.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="env__func__ptrs_8h_1a790ac6b8157cf0dfe03c092179b92b21" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* wholememory_malloc_func_t) (wholememory_tensor_description_t *desc, wholememory_memory_allocation_type_t memory_allocation_type, void *memory_context, void *global_context)</definition>
        <argsstring>)(wholememory_tensor_description_t *desc, wholememory_memory_allocation_type_t memory_allocation_type, void *memory_context, void *global_context)</argsstring>
        <name>wholememory_malloc_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/env_func_ptrs.h" line="49" column="9" bodyfile="include/wholememory/env_func_ptrs.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="env__func__ptrs_8h_1ad221b6e91d20f33659b7c54ef6a0241a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* wholememory_free_func_t) (void *memory_context, void *global_context)</definition>
        <argsstring>)(void *memory_context, void *global_context)</argsstring>
        <name>wholememory_free_func_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/env_func_ptrs.h" line="55" column="9" bodyfile="include/wholememory/env_func_ptrs.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="env__func__ptrs_8h_1ab0a39e858019908b61983a119cfaef84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cudaDeviceProp *</type>
        <definition>cudaDeviceProp* get_device_prop</definition>
        <argsstring>(int dev_id)</argsstring>
        <name>get_device_prop</name>
        <param>
          <type>int</type>
          <declname>dev_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/env_func_ptrs.h" line="75" column="16" bodyfile="src/wholememory/env_func_ptrs.cpp" bodystart="381" bodyend="381" declfile="include/wholememory/env_func_ptrs.h" declline="75" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda_runtime_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tensor__description_8h" kindref="compound">wholememory/tensor_description.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cff" kindref="member">wholememory_memory_allocation_type_t</ref><sp/>{</highlight></codeline>
<codeline lineno="34" refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffad668833797760bc14cf0cfd19de9fb2b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffad668833797760bc14cf0cfd19de9fb2b" kindref="member">WHOLEMEMORY_MA_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="35" refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa90bc04801a32deee762185250c704760" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa90bc04801a32deee762185250c704760" kindref="member">WHOLEMEMORY_MA_DEVICE</ref>,</highlight></codeline>
<codeline lineno="36" refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6a05bf42a1aa42657f7a6a9b66d43d4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6a05bf42a1aa42657f7a6a9b66d43d4a" kindref="member">WHOLEMEMORY_MA_HOST</ref>,</highlight></codeline>
<codeline lineno="37" refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6832f7b989ef69484f680690d2fa98fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6832f7b989ef69484f680690d2fa98fc" kindref="member">WHOLEMEMORY_MA_PINNED</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="env__func__ptrs_8h_1a2493c2509f6269e4fe1312cd73fe0668" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="env__func__ptrs_8h_1a2493c2509f6269e4fe1312cd73fe0668" kindref="member">wholememory_create_memory_context_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>memory_context,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>global_context);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="env__func__ptrs_8h_1a9478ec5dbbedf151935a29c4a7b1a2f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="env__func__ptrs_8h_1a9478ec5dbbedf151935a29c4a7b1a2f2" kindref="member">wholememory_destroy_memory_context_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>memory_context,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>global_context);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="env__func__ptrs_8h_1a790ac6b8157cf0dfe03c092179b92b21" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*wholememory_malloc_func_t)(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>desc,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cff" kindref="member">wholememory_memory_allocation_type_t</ref><sp/>memory_allocation_type,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>memory_context,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>global_context);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="env__func__ptrs_8h_1ad221b6e91d20f33659b7c54ef6a0241a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="env__func__ptrs_8h_1ad221b6e91d20f33659b7c54ef6a0241a" kindref="member">wholememory_free_func_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>memory_context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>global_context);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structwholememory__temp__memory__func__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__temp__memory__func__t" kindref="compound">wholememory_temp_memory_func_t</ref><sp/>{</highlight></codeline>
<codeline lineno="58" refid="structwholememory__temp__memory__func__t_1a0b6e0e8ab4e5b3cb544e0d3573cf2314" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a2493c2509f6269e4fe1312cd73fe0668" kindref="member">wholememory_create_memory_context_func_t</ref><sp/><ref refid="structwholememory__temp__memory__func__t_1a0b6e0e8ab4e5b3cb544e0d3573cf2314" kindref="member">create_memory_context_fn</ref>;</highlight></codeline>
<codeline lineno="59" refid="structwholememory__temp__memory__func__t_1a85c5125a684e4134e33eaa1fd760d327" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a9478ec5dbbedf151935a29c4a7b1a2f2" kindref="member">wholememory_destroy_memory_context_func_t</ref><sp/><ref refid="structwholememory__temp__memory__func__t_1a85c5125a684e4134e33eaa1fd760d327" kindref="member">destroy_memory_context_fn</ref>;</highlight></codeline>
<codeline lineno="60" refid="structwholememory__temp__memory__func__t_1a3763bef0afda3ebb0bcce4e0dad8467f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a790ac6b8157cf0dfe03c092179b92b21" kindref="member">wholememory_malloc_func_t</ref><sp/><ref refid="structwholememory__temp__memory__func__t_1a3763bef0afda3ebb0bcce4e0dad8467f" kindref="member">malloc_fn</ref>;</highlight></codeline>
<codeline lineno="61" refid="structwholememory__temp__memory__func__t_1a3cc1ce59aa1264d3ec227ff7c29a02b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1ad221b6e91d20f33659b7c54ef6a0241a" kindref="member">wholememory_free_func_t</ref><sp/><ref refid="structwholememory__temp__memory__func__t_1a3cc1ce59aa1264d3ec227ff7c29a02b8" kindref="member">free_fn</ref>;</highlight></codeline>
<codeline lineno="62" refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64" refid="structwholememory__output__memory__func__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__output__memory__func__t" kindref="compound">wholememory_output_memory_func_t</ref><sp/>{</highlight></codeline>
<codeline lineno="65" refid="structwholememory__output__memory__func__t_1ad4926a879ed7a1decc808dbbff5ab176" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1a790ac6b8157cf0dfe03c092179b92b21" kindref="member">wholememory_malloc_func_t</ref><sp/><ref refid="structwholememory__output__memory__func__t_1ad4926a879ed7a1decc808dbbff5ab176" kindref="member">malloc_fn</ref>;</highlight></codeline>
<codeline lineno="66" refid="structwholememory__output__memory__func__t_1a4c502da23857b5a67d9ef1a51c3a2b97" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="env__func__ptrs_8h_1ad221b6e91d20f33659b7c54ef6a0241a" kindref="member">wholememory_free_func_t</ref><sp/><ref refid="structwholememory__output__memory__func__t_1a4c502da23857b5a67d9ef1a51c3a2b97" kindref="member">free_fn</ref>;</highlight></codeline>
<codeline lineno="67" refid="structwholememory__output__memory__func__t_1a656329759f633ae189519e709a7a1bf1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="structwholememory__output__memory__func__t_1a656329759f633ae189519e709a7a1bf1" kindref="member">global_context</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structwholememory__env__func__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structwholememory__env__func__t_1a9aa656350e5280b16966ab0ddec27f9d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__temp__memory__func__t" kindref="compound">wholememory_temp_memory_func_t</ref><sp/><ref refid="structwholememory__env__func__t_1a9aa656350e5280b16966ab0ddec27f9d" kindref="member">temporary_fns</ref>;<sp/></highlight><highlight class="comment">/*<sp/>function<sp/>pointers<sp/>to<sp/>create<sp/>temporary<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structwholememory__env__func__t_1a19fc952a250b975bb81b60a91386732b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__output__memory__func__t" kindref="compound">wholememory_output_memory_func_t</ref><sp/><ref refid="structwholememory__env__func__t_1a19fc952a250b975bb81b60a91386732b" kindref="member">output_fns</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>function<sp/>pointers<sp/>to<sp/>create<sp/>Op<sp/>output<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">cudaDeviceProp*<sp/><ref refid="env__func__ptrs_8h_1ab0a39e858019908b61983a119cfaef84" kindref="member">get_device_prop</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1afd6d033a7ec5b3799a7c6cb0fefd177f" kindref="member">dev_id</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/wholememory/env_func_ptrs.h"/>
  </compounddef>
</doxygen>
