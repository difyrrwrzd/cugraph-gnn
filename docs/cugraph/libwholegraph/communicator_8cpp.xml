<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="communicator_8cpp" kind="file" language="C++">
    <compoundname>communicator.cpp</compoundname>
    <includes refid="communicator_8hpp" local="yes">communicator.hpp</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">cuda.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">raft/core/error.hpp</includes>
    <includes refid="tensor__description_8h" local="no">wholememory/tensor_description.h</includes>
    <includes refid="wholememory_8h" local="no">wholememory/wholememory.h</includes>
    <includes refid="cuda__macros_8hpp" local="yes">cuda_macros.hpp</includes>
    <includes refid="logger_8hpp" local="yes">logger.hpp</includes>
    <includes refid="memory__handle_8hpp" local="yes">memory_handle.hpp</includes>
    <includes refid="system__info_8hpp" local="yes">system_info.hpp</includes>
    <includes refid="nccl__comms_8hpp" local="yes">wholememory/nccl_comms.hpp</includes>
    <incdepgraph>
      <node id="29">
        <label>sys/stat.h</label>
      </node>
      <node id="24">
        <label>iomanip</label>
      </node>
      <node id="27">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>stdint.h</label>
      </node>
      <node id="12">
        <label>stdlib.h</label>
      </node>
      <node id="33">
        <label>cassert</label>
      </node>
      <node id="36">
        <label>wholememory/nccl_comms.hpp</label>
        <link refid="nccl__comms_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>string</label>
      </node>
      <node id="31">
        <label>cstdarg</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="17">
        <label>stddef.h</label>
      </node>
      <node id="30">
        <label>logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cstdio</label>
      </node>
      <node id="35">
        <label>system_info.hpp</label>
        <link refid="system__info_8hpp"/>
      </node>
      <node id="15">
        <label>unistd.h</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="22">
        <label>cstdlib</label>
      </node>
      <node id="25">
        <label>iostream</label>
      </node>
      <node id="18">
        <label>cuda_macros.hpp</label>
        <link refid="cuda__macros_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>memory_handle.hpp</label>
        <link refid="memory__handle_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cuda.h</label>
      </node>
      <node id="8">
        <label>mutex</label>
      </node>
      <node id="4">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="20">
        <label>chrono</label>
      </node>
      <node id="16">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>nccl.h</label>
      </node>
      <node id="10">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
      <node id="23">
        <label>execinfo.h</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
      <node id="1">
        <label>src/wholememory/communicator.cpp</label>
        <link refid="communicator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structwholememory_1_1host__info" prot="public">wholememory::host_info</innerclass>
    <innerclass refid="structwholememory_1_1rank__info" prot="public">wholememory::rank_info</innerclass>
    <innernamespace refid="namespacewholememory">wholememory</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="communicator_8cpp_1a946a5ed3677197c18c0c684887259f6f" prot="public" static="no">
        <name>BOOTID_FILE</name>
        <initializer>&quot;/proc/sys/kernel/random/<ref refid="communicator_8cpp_1a0935c2d5e5b6205ca65e2820cc3b2bb2" kindref="member">boot_id</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.cpp" line="451" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="communicator_8cpp_1a3bf60dd8990775b41eee8c48f7aff2da" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char host_name[HOST_NAME_MAX_LENGTH]</definition>
        <argsstring>[HOST_NAME_MAX_LENGTH]</argsstring>
        <name>host_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.cpp" line="0" column="8" bodyfile="src/wholememory/communicator.cpp" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8cpp_1a0935c2d5e5b6205ca65e2820cc3b2bb2" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char boot_id[BOOT_ID_MAX_LENGTH]</definition>
        <argsstring>[BOOT_ID_MAX_LENGTH]</argsstring>
        <name>boot_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.cpp" line="1" column="8" bodyfile="src/wholememory/communicator.cpp" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8cpp_1a4b31071669f6230a7c4bce9ea9ce0014" prot="public" static="no" mutable="no">
        <type>dev_t</type>
        <definition>dev_t shm_dev</definition>
        <argsstring></argsstring>
        <name>shm_dev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.cpp" line="2" column="9" bodyfile="src/wholememory/communicator.cpp" bodystart="2" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="communicator_8cpp_1ad61ced7b0a60734b8eacc4172afba2a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ncclDataType_t</type>
        <definition>static ncclDataType_t get_nccl_dtype</definition>
        <argsstring>(const wholememory_dtype_t dtype)</argsstring>
        <name>get_nccl_dtype</name>
        <param>
          <type>const <ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.cpp" line="67" column="23" bodyfile="src/wholememory/communicator.cpp" bodystart="67" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8cpp_1af72b18ea4970129d4923c36b54c813be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ncclDataType_t</type>
        <definition>static ncclDataType_t get_nccl_dtype_same_size</definition>
        <argsstring>(const wholememory_dtype_t dtype)</argsstring>
        <name>get_nccl_dtype_same_size</name>
        <param>
          <type>const <ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>dtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.cpp" line="83" column="23" bodyfile="src/wholememory/communicator.cpp" bodystart="83" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8cpp_1ad13189dc93acf4dc5df8b1ea264c806c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool __attribute__::operator==</definition>
        <argsstring>(const host_info &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const host_info &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.cpp" line="3" column="8" bodyfile="src/wholememory/communicator.cpp" bodystart="3" bodyend="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="communicator_8hpp" kindref="compound">communicator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;raft/core/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tensor__description_8h" kindref="compound">wholememory/tensor_description.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wholememory_8h" kindref="compound">wholememory/wholememory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cuda__macros_8hpp" kindref="compound">cuda_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__handle_8hpp" kindref="compound">memory_handle.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="system__info_8hpp" kindref="compound">system_info.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nccl__comms_8hpp" kindref="compound">wholememory/nccl_comms.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvshmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvshmemx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nvshmemi_is_nvshmem_bootstrapped;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="structwholememory__comm___1a178d397e9345164393841f0325d16138" kindref="member">wholememory_comm_::wholememory_comm_</ref>(ncclComm_t<sp/>nccl_comm,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranks,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" kindref="member">world_rank</ref><sp/>=<sp/>rank;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref><sp/>=<sp/>num_ranks;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a7d48b62f3df53ec1496f053529c79c52" kindref="member">WM_CUDA_CHECK</ref>(cudaGetDevice(&amp;<ref refid="structwholememory__comm___1af9f6d010ca8af713d8660a1defd63ab5" kindref="member">dev_id</ref>));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1a9a9627d2b431d377763f226d373ebd55" kindref="member">comm_stream</ref><sp/><sp/><sp/>=<sp/>stream;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1a76c4e2839b12259ae479cc87400b23e8" kindref="member">raw_nccl_comm</ref><sp/>=<sp/>nccl_comm;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a7d48b62f3df53ec1496f053529c79c52" kindref="member">WM_CUDA_CHECK</ref>(cudaEventCreate(&amp;<ref refid="structwholememory__comm___1a2156e2c488eaa112a5b0acd82df8a07c" kindref="member">cuda_event</ref>));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classwholememory_1_1nccl__comms" kindref="compound">wholememory::nccl_comms</ref>(nccl_comm,<sp/>num_ranks,<sp/>rank,<sp/>stream);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="structwholememory__comm___1aad0fb9af9c10cabd5ce0e7361b0f3d04" kindref="member">wholememory_comm_::~wholememory_comm_</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structwholememory__comm___1a2156e2c488eaa112a5b0acd82df8a07c" kindref="member">cuda_event</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaEventDestroy(<ref refid="structwholememory__comm___1a2156e2c488eaa112a5b0acd82df8a07c" kindref="member">cuda_event</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwholememory__comm___1a2156e2c488eaa112a5b0acd82df8a07c" kindref="member">cuda_event</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ncclDataType_t<sp/>get_nccl_dtype(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>dtype)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dtype)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca8fc99da34693be9e062833242c27d6ec" kindref="member">WHOLEMEMORY_DT_FLOAT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclFloat;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca690ba24decf00c023dba03826a296193" kindref="member">WHOLEMEMORY_DT_DOUBLE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclDouble;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca21c33803cd2286859e642bfcc76e0c53" kindref="member">WHOLEMEMORY_DT_HALF</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclHalf;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclChar;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae4485215773ac9d733555c7119002e52" kindref="member">WHOLEMEMORY_DT_INT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclInt32;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cad544b558c31c88cf2977614e34ace0d5" kindref="member">WHOLEMEMORY_DT_INT64</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclInt64;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CUDA_BF16_TYPES_EXIST__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca099d083a74b36954ffa53074d982c64b" kindref="member">WHOLEMEMORY_DT_BF16</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclBfloat16;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><ref refid="error_8hpp_1a9d320c87271a2911015ef771bdf3a00e" kindref="member">WHOLEMEMORY_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>supported<sp/>dtype.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ncclDataType_t<sp/>get_nccl_dtype_same_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>dtype)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dtype)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclChar;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae63ed5b24aa79279081568835a6ed649" kindref="member">WHOLEMEMORY_DT_INT16</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclHalf;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca099d083a74b36954ffa53074d982c64b" kindref="member">WHOLEMEMORY_DT_BF16</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclHalf;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca21c33803cd2286859e642bfcc76e0c53" kindref="member">WHOLEMEMORY_DT_HALF</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclHalf;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae4485215773ac9d733555c7119002e52" kindref="member">WHOLEMEMORY_DT_INT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclInt32;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca8fc99da34693be9e062833242c27d6ec" kindref="member">WHOLEMEMORY_DT_FLOAT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclFloat;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cad544b558c31c88cf2977614e34ace0d5" kindref="member">WHOLEMEMORY_DT_INT64</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclInt64;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5ca690ba24decf00c023dba03826a296193" kindref="member">WHOLEMEMORY_DT_DOUBLE</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ncclDouble;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><ref refid="error_8hpp_1a9d320c87271a2911015ef771bdf3a00e" kindref="member">WHOLEMEMORY_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>supported<sp/>dtype.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a58ad310a4836696213a8fe2beb7bba06" kindref="member">wholememory_comm_::barrier</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a5cc5e57c0b265a2c404e7206d915865f" kindref="member">barrier</ref>();<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ad247edc8f1d4bcb461c0b91bc024fe1f" kindref="member">wholememory_comm_::abort</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1aa56cbf4eab4f3d2439a11493f1e2cdae" kindref="member">abort</ref>();<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a618f9531eb00dada81f37fc345af2fb7" kindref="member">wholememory_comm_::allreduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="108"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a9d3f5222a1e1a267234ced7a06d1a9bd" kindref="member">allreduce</ref>(sendbuff,<sp/>recvbuff,<sp/>count,<sp/>get_nccl_dtype(datatype),<sp/>op,<sp/>stream);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ade39cc20f22857fba8318aea6b9678c7" kindref="member">wholememory_comm_::host_allreduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="117"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a0d2e531997db8eb50f7eb71c717074a6" kindref="member">host_allreduce</ref>(sendbuff,<sp/>recvbuff,<sp/>count,<sp/>get_nccl_dtype(datatype),<sp/>op);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a9a0b23b51674e0b46b3cc5d513ebb898" kindref="member">wholememory_comm_::bcast</ref>(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="123"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a32837283e5ce068c9f74e18396be70f1" kindref="member">bcast</ref>(buff,<sp/>count,<sp/>get_nccl_dtype_same_size(datatype),<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a9a0b23b51674e0b46b3cc5d513ebb898" kindref="member">wholememory_comm_::bcast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="133"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a32837283e5ce068c9f74e18396be70f1" kindref="member">bcast</ref>(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuff,<sp/>recvbuff,<sp/>count,<sp/>get_nccl_dtype_same_size(datatype),<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a3b499fd4878b771ca859b7b3cfca8627" kindref="member">wholememory_comm_::host_bcast</ref>(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="140"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a8a0647b80d43768ab93fa979782dd758" kindref="member">host_bcast</ref>(sendbuff,<sp/>recvbuff,<sp/>count,<sp/>get_nccl_dtype_same_size(datatype),<sp/>root);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a3b499fd4878b771ca859b7b3cfca8627" kindref="member">wholememory_comm_::host_bcast</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="148"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a8a0647b80d43768ab93fa979782dd758" kindref="member">host_bcast</ref>(buff,<sp/>count,<sp/>get_nccl_dtype_same_size(datatype),<sp/>root);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1acb79516642f0cf46b2ae2231c6750d5e" kindref="member">wholememory_comm_::reduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a0791a8659c7a6375998dd8cb42d97622" kindref="member">reduce</ref>(sendbuff,<sp/>recvbuff,<sp/>count,<sp/>get_nccl_dtype(datatype),<sp/>op,<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a8bf148950bcd3f2cfea24725dbf95473" kindref="member">wholememory_comm_::host_reduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a9a12b4424e13636604a5488c7fd48d5b" kindref="member">host_reduce</ref>(sendbuff,<sp/>recvbuff,<sp/>count,<sp/>get_nccl_dtype(datatype),<sp/>op,<sp/>root);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a58f136ed7de2cf2d77200db8217dc8b0" kindref="member">wholememory_comm_::allgather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a77faacd2253db52f5b1d3a0becd6531f" kindref="member">allgather</ref>(</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuff,<sp/>recvbuff,<sp/>sendcount,<sp/>get_nccl_dtype_same_size(datatype),<sp/>stream);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">wholememory_comm_::host_allgather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1ae77a4ce342cab3fa87ec1cc6b70b9d49" kindref="member">host_allgather</ref>(sendbuff,<sp/>recvbuff,<sp/>sendcount,<sp/>get_nccl_dtype_same_size(datatype));</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1acd66b7e1b2f81ee95c54e7df7f13a4e8" kindref="member">wholememory_comm_::allgatherv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>displs,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="197"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a618ce5c8b24adf13dfb95763f4dc71f7" kindref="member">allgatherv</ref>(</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuf,<sp/>recvbuf,<sp/>recvcounts,<sp/>displs,<sp/>get_nccl_dtype_same_size(datatype),<sp/>stream);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a3596051c38552f60302c73f808dd929a" kindref="member">wholememory_comm_::host_allgatherv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>displs,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="207"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a784154ff9524d3f53d988e58ebef54b3" kindref="member">host_allgatherv</ref>(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuf,<sp/>recvbuf,<sp/>recvcounts,<sp/>displs,<sp/>get_nccl_dtype_same_size(datatype));</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a19a9890de4780aa69ad42fc7232f1185" kindref="member">wholememory_comm_::gather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="218"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a73a6cc35a7cff8c615c2ba8d8687891e" kindref="member">gather</ref>(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuff,<sp/>recvbuff,<sp/>sendcount,<sp/>get_nccl_dtype_same_size(datatype),<sp/>root,<sp/>stream);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1afb1765b6858584748e0c7037e02e4739" kindref="member">wholememory_comm_::host_gather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="228"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a4d64070f50ddf939ba3800621b98d953" kindref="member">host_gather</ref>(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuff,<sp/>recvbuff,<sp/>sendcount,<sp/>get_nccl_dtype_same_size(datatype),<sp/>root);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a62a54dd31e5f5c780242c6cc7e203575" kindref="member">wholememory_comm_::gatherv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>displs,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="241"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a1fd2aa7e3c6a96659a0220911a22b11c" kindref="member">gatherv</ref>(sendbuff,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recvbuff,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendcount,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recvcounts,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displs,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_nccl_dtype_same_size(datatype),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a4ca5a716655622948fa23af74e2ce560" kindref="member">wholememory_comm_::reducescatter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recvcount,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="258"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a94fc73631f2193322a1fa47c7bdf70ba" kindref="member">reducescatter</ref>(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuff,<sp/>recvbuff,<sp/>recvcount,<sp/>get_nccl_dtype(datatype),<sp/>op,<sp/>stream);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a5a90145c68b3d1085358742f52de7713" kindref="member">wholememory_comm_::alltoall</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="268"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a6806dec1198207263259f4b1fac0890a" kindref="member">alltoall</ref>(</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuff,<sp/>recvbuff,<sp/>sendcount,<sp/>get_nccl_dtype_same_size(datatype),<sp/>stream);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a99d0e19b865e6e8e01536f5772188a0f" kindref="member">wholememory_comm_::host_alltoall</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="277"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1ad2ac6683adc087f2b0861730e3f31ad0" kindref="member">host_alltoall</ref>(sendbuff,<sp/>recvbuff,<sp/>sendcount,<sp/>get_nccl_dtype_same_size(datatype));</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1aeaa3eab3a7a556f2f12650ad2ee2d55e" kindref="member">wholememory_comm_::alltoallv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>sendcounts,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>senddispls,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvdispls,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="289"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1abb6104c4199fe9080713a31e9bb3b471" kindref="member">alltoallv</ref>(sendbuff,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recvbuff,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendcounts,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senddispls,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recvcounts,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recvdispls,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_nccl_dtype_same_size(datatype),</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="structwholememory__comm___1a48f8fbf5b4576512c61ef0295e6750f5" kindref="member">wholememory_comm_::sync_stream</ref>(cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="301"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a19ad4cec7625dec70f6d1f6f55902598" kindref="member">sync_stream</ref>(stream);</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="structwholememory__comm___1a48f8fbf5b4576512c61ef0295e6750f5" kindref="member">wholememory_comm_::sync_stream</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="306"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a19ad4cec7625dec70f6d1f6f55902598" kindref="member">sync_stream</ref>();</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>thread<sp/>is<sp/>sending<sp/>&amp;<sp/>receiving<sp/>at<sp/>the<sp/>same<sp/>time,<sp/>use<sp/>device_sendrecv<sp/>to<sp/>avoid<sp/>deadlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a0114332c4a3b68af1a89493f8727d14f" kindref="member">wholememory_comm_::device_send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>send_buf,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>send_size,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="315"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a34a634466f900c17d23007c50f7b9bef" kindref="member">device_send</ref>(send_buf,<sp/>send_size,<sp/>dest,<sp/>stream);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>thread<sp/>is<sp/>sending<sp/>&amp;<sp/>receiving<sp/>at<sp/>the<sp/>same<sp/>time,<sp/>use<sp/>device_sendrecv<sp/>to<sp/>avoid<sp/>deadlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a78eccab8ce5e6ed6c9adbc677aa38b92" kindref="member">wholememory_comm_::device_recv</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recv_buf,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recv_size,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="324"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1a58bc2d531f7c02d6ce70b50a7dc93722" kindref="member">device_recv</ref>(recv_buf,<sp/>recv_size,<sp/>source,<sp/>stream);</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a7d4f9ec8d146d05f679460a7006fae60" kindref="member">wholememory_comm_::device_sendrecv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendsize,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recvsize,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="335"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1ad4c09ac908a6b418640c321308e39d28" kindref="member">device_sendrecv</ref>(sendbuf,<sp/>sendsize,<sp/>dest,<sp/>recvbuf,<sp/>recvsize,<sp/>source,<sp/>stream);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a47024fbc4bfc631aab75a06b9302de65" kindref="member">wholememory_comm_::device_multicast_sendrecv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sendsizes,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sendoffsets,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dests,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>recvsizes,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>recvoffsets,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sources,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="348"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1ac70f253e5b6a17f197286cdd0ff93b44" kindref="member">device_multicast_sendrecv</ref>(</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>sendbuf,<sp/>sendsizes,<sp/>sendoffsets,<sp/>dests,<sp/>recvbuf,<sp/>recvsizes,<sp/>recvoffsets,<sp/>sources,<sp/>stream);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ac5998572fd8c52a62500a5308569d03c" kindref="member">wholememory_comm_::is_intranode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref><sp/>==<sp/><ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;<sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a86e4a137c710b81c0422127556f836eb" kindref="member">wholememory_comm_::support_type_location</ref>(<ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="357"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memory_location<sp/>==<sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9feac158439ddfbce3650664e8924b533f45" kindref="member">WHOLEMEMORY_ML_HOST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structwholememory__comm___1ac5998572fd8c52a62500a5308569d03c" kindref="member">is_intranode</ref>()<sp/>||<sp/>memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50aaf158928fcf5c811aba5071c22ec0f06" kindref="member">WHOLEMEMORY_MT_DISTRIBUTED</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="system__info_8cpp_1a7758895085a4b665ac9908c6324e395f" kindref="member">SupportMNNVLForEGM</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memory_location<sp/>==<sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead3ca08fe2942418057f06c95eebd4714" kindref="member">WHOLEMEMORY_ML_DEVICE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50aaf158928fcf5c811aba5071c22ec0f06" kindref="member">WHOLEMEMORY_MT_DISTRIBUTED</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structwholememory__comm___1ac5998572fd8c52a62500a5308569d03c" kindref="member">is_intranode</ref>())<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="system__info_8cpp_1a9fd5ec853ae2127290da62c79103465b" kindref="member">DevicesCanAccessP2P</ref>(&amp;<ref refid="structwholememory__comm___1af20488964e4466d7906d86fb8630bfba" kindref="member">local_gpu_ids</ref>[0],<sp/><ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="system__info_8cpp_1a9fd5ec853ae2127290da62c79103465b" kindref="member">DevicesCanAccessP2P</ref>(&amp;<ref refid="structwholememory__comm___1af20488964e4466d7906d86fb8630bfba" kindref="member">local_gpu_ids</ref>[0],<sp/><ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref>)<sp/>&amp;&amp;<sp/><ref refid="system__info_8cpp_1a1498d86ae084dab2e930543fa6cf6e36" kindref="member">SupportMNNVL</ref>();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a559ca2d0c8b8239d5f3759dfe0eeeed8" kindref="member">wholememory_comm_::group_start</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1ab1e01a1fbed6181b973cedf9efcf88d6" kindref="member">group_start</ref>();<sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1aa84bef36f3e2e31cdec9f6c22f530dd7" kindref="member">wholememory_comm_::group_end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>-&gt;<ref refid="classwholememory_1_1nccl__comms_1ae1c3a7461a7c310383ab03c840519b20" kindref="member">group_end</ref>();<sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory" kindref="compound">wholememory</ref><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>comm_mu;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>wholememory_comm_t&gt;<sp/>communicator_map;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>nvshmem_has_initalized<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17" kindref="member">wm_comm_op</ref><sp/>:<sp/>int32_t<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a36d4ee478218dafc0967bd85a001825f" kindref="member">WM_COMM_OP_STARTING</ref><sp/>=<sp/>0xEEC0EE,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a3eaa867aa45b64d00e52481f25b63100" kindref="member">WM_COMM_OP_EXCHANGE_ID</ref>,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a7de239af32391f9312cb9b50963891d8" kindref="member">WM_COMM_OP_WAIT_CREATE_TEMPDIR</ref>,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a3952b76a72c500e4c02f1800a92e25e0" kindref="member">WM_COMM_OP_DESTROY_ALL_HANDLES</ref>,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a285594ef08ad1e2790175293068ed40d" kindref="member">WM_COMM_OP_DESTROY_COMM</ref>,</highlight></codeline>
<codeline lineno="392"><highlight class="normal">};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a95b01d87eac905d8199b7f8f5f3d870a" kindref="member">create_unique_id</ref>(<ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref>*<sp/>unique_id)<sp/>noexcept</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>ncclUniqueId<sp/>id;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ncclUniqueId)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref>));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(ncclGetUniqueId(&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>==<sp/>ncclSuccess);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>memcpy(unique_id-&gt;internal,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.internal,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ncclUniqueId));</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>HOST_NAME_MAX_LENGTH<sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BOOT_ID_MAX_LENGTH<sp/><sp/><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">host_info<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="communicator_8cpp_1a3bf60dd8990775b41eee8c48f7aff2da" kindref="member">host_name</ref>[HOST_NAME_MAX_LENGTH];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="communicator_8cpp_1a0935c2d5e5b6205ca65e2820cc3b2bb2" kindref="member">boot_id</ref>[BOOT_ID_MAX_LENGTH];</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>dev_t<sp/><ref refid="communicator_8cpp_1a4b31071669f6230a7c4bce9ea9ce0014" kindref="member">shm_dev</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="communicator_8cpp_1ad13189dc93acf4dc5df8b1ea264c806c" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>host_info&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="411"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::strncmp(<ref refid="communicator_8cpp_1a3bf60dd8990775b41eee8c48f7aff2da" kindref="member">host_name</ref>,<sp/>rhs.host_name,<sp/>HOST_NAME_MAX_LENGTH)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::strncmp(<ref refid="communicator_8cpp_1a0935c2d5e5b6205ca65e2820cc3b2bb2" kindref="member">boot_id</ref>,<sp/>rhs.boot_id,<sp/>BOOT_ID_MAX_LENGTH)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="communicator_8cpp_1a4b31071669f6230a7c4bce9ea9ce0014" kindref="member">shm_dev</ref><sp/>!=<sp/>rhs.shm_dev)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}<sp/><ref refid="namespacewholememory_1a9357798c89fbaee360de89945aebcc44" kindref="member">__attribute__</ref>((aligned(128)));</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rank_info<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>host_info<sp/>rank_host_info;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>pid_t<sp/>pid;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpu_id;</highlight></codeline>
<codeline lineno="425"><highlight class="normal">};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_host_name(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hostname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxlen,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delim)</highlight></codeline>
<codeline lineno="428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gethostname(hostname,<sp/>maxlen)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(hostname,<sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">,<sp/>maxlen);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a2aabf020ba5e697df145e080d894b5c4" kindref="member">WHOLEMEMORY_FATAL</ref>(</highlight><highlight class="stringliteral">&quot;gethostname<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((hostname[i]<sp/>!=<sp/>delim)<sp/>&amp;&amp;<sp/>(hostname[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(i<sp/>&lt;<sp/>maxlen<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>hostname[i]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>hostname<sp/>and<sp/>boot<sp/>id</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>Equivalent<sp/>of:</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*<sp/>$(hostname)$(cat<sp/>/proc/sys/kernel/random/boot_id)</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*<sp/>This<sp/>string<sp/>can<sp/>be<sp/>overridden<sp/>by<sp/>using<sp/>the<sp/>WHOLEGRAPH_HOSTID<sp/>env<sp/>var.</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1acf12a3f356dd209bb82510b24ad4a704" kindref="member">get_boot_id</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>host_id,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)</highlight></codeline>
<codeline lineno="447"><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>env_host_id;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOOTID_FILE<sp/>&quot;/proc/sys/kernel/random/boot_id&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((env_host_id<sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;WHOLEMEMORY_BOOTID&quot;</highlight><highlight class="normal">))<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1ab039a9b073f4c3f6005fd8f0d1c444fd" kindref="member">WHOLEMEMORY_LOG</ref>(<ref refid="wholememory_8h_1aca1fd1d8935433e6ba2e3918214e07f9a831e8f5cdb3ed97330b2e17502149d8f" kindref="member">LEVEL_INFO</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WHOLEMEMORY_BOOTID<sp/>set<sp/>by<sp/>environment<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>env_host_id);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>strncpy(host_id,<sp/>env_host_id,<sp/>len<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>strlen(env_host_id);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>file<sp/>=<sp/>fopen(<ref refid="communicator_8cpp_1a946a5ed3677197c18c0c684887259f6f" kindref="member">BOOTID_FILE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf(file,<sp/></highlight><highlight class="stringliteral">&quot;%ms&quot;</highlight><highlight class="normal">,<sp/>&amp;p)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(host_id<sp/>+<sp/>offset,<sp/>p,<sp/>len<sp/>-<sp/>offset<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>strlen(p);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(file);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>HOSTID_FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>host_id[offset]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a46b207a1367c70e5abaeb241cedfc769" kindref="member">get_shm_devid</ref>(dev_t*<sp/><ref refid="communicator_8cpp_1a4b31071669f6230a7c4bce9ea9ce0014" kindref="member">shm_dev</ref>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>statbuf<sp/>{};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(stat(</highlight><highlight class="stringliteral">&quot;/dev/shm&quot;</highlight><highlight class="normal">,<sp/>&amp;statbuf)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>*<ref refid="communicator_8cpp_1a4b31071669f6230a7c4bce9ea9ce0014" kindref="member">shm_dev</ref><sp/>=<sp/>statbuf.st_dev;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1adbfb3c230e831ace53be3c5f6566cf82" kindref="member">get_host_info</ref>(host_info*<sp/>phi)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>bzero(phi,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(host_info));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>get_host_name(&amp;phi-&gt;host_name[0],<sp/>HOST_NAME_MAX_LENGTH,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1acf12a3f356dd209bb82510b24ad4a704" kindref="member">get_boot_id</ref>(&amp;phi-&gt;boot_id[0],<sp/>BOOT_ID_MAX_LENGTH);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1a46b207a1367c70e5abaeb241cedfc769" kindref="member">get_shm_devid</ref>(&amp;phi-&gt;shm_dev);</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a9c5172123345ce7690b59f39a9757b75" kindref="member">exchange_rank_info</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>wm_comm)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>rank_info<sp/>ri;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><ref refid="namespacewholememory_1adbfb3c230e831ace53be3c5f6566cf82" kindref="member">get_host_info</ref>(&amp;ri.rank_host_info);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>ri.rank<sp/><sp/><sp/>=<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" kindref="member">world_rank</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>ri.size<sp/><sp/><sp/>=<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>ri.pid<sp/><sp/><sp/><sp/>=<sp/>getpid();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>ri.gpu_id<sp/>=<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1af9f6d010ca8af713d8660a1defd63ab5" kindref="member">dev_id</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;rank_info[]&gt;<sp/>p_rank_info(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>rank_info[ri.size]);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">host_allgather</ref>(&amp;ri,<sp/>p_rank_info.get(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(rank_info),<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1ab4c459c199ea6afaa840f39111e42969" kindref="member">intra_node_first_rank</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a782cafc2eee72c52d3907282c5802d10" kindref="member">intra_node_rank</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(r<sp/>==<sp/>p_rank_info.get()[r].rank);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ri.rank_host_info<sp/>==<sp/>p_rank_info.get()[r].rank_host_info)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" kindref="member">world_rank</ref>)<sp/>{<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a782cafc2eee72c52d3907282c5802d10" kindref="member">intra_node_rank</ref><sp/>=<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref>;<sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wm_comm-&gt;<ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a7d736e2b695040c9b390a4aa8069149d" kindref="member">intra_node_first_rank_pid</ref><sp/>=<sp/>p_rank_info.get()[r].pid;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1ab4c459c199ea6afaa840f39111e42969" kindref="member">intra_node_first_rank</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1af20488964e4466d7906d86fb8630bfba" kindref="member">local_gpu_ids</ref>[wm_comm-&gt;<ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref>]<sp/>=<sp/>p_rank_info.get()[r].gpu_id;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref>++;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a95008f0a1f11568c54ae618ec66bbc72" kindref="member">negotiate_communicator_id_locked</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>wm_comm)</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(wm_comm,<sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a3eaa867aa45b64d00e52481f25b63100" kindref="member">WM_COMM_OP_EXCHANGE_ID</ref>);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_same<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>rank_ids(wm_comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!all_same)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(communicator_map.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/>communicator_map.end())</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">host_allgather</ref>(&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>rank_ids.data(),<sp/>1,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae4485215773ac9d733555c7119002e52" kindref="member">WHOLEMEMORY_DT_INT</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>all_same<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank_ids[i]<sp/>&gt;<sp/>max_id)<sp/>max_id<sp/>=<sp/>rank_ids[i];</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rank_ids[i]<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>all_same<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>max_id;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>wm_comm-&gt;<ref refid="structwholememory__comm___1a2b551137f0731e414a013704a90847ac" kindref="member">comm_id</ref><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>communicator_map.insert(std::pair&lt;int,<sp/>wholememory_comm_t&gt;(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wm_comm));</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal">std::string<sp/><ref refid="namespacewholememory_1a380fdb86cf1c7824a5e1c13080347349" kindref="member">get_temporary_directory_path</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sock_prefix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>getenv(</highlight><highlight class="stringliteral">&quot;WHOLEMEMORY_TMPPREFIX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>std::string<sp/>wholememory_prefix_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/tmp/wmtmp&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock_prefix<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{<sp/>wholememory_prefix_str<sp/>=<sp/>sock_prefix;<sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp_path_buffer[128];</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>(void)std::snprintf(</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_path_buffer,<sp/>128,<sp/></highlight><highlight class="stringliteral">&quot;_comm_id_%d_pid_%d&quot;</highlight><highlight class="normal">,<sp/>comm-&gt;<ref refid="structwholememory__comm___1a2b551137f0731e414a013704a90847ac" kindref="member">comm_id</ref>,<sp/>comm-&gt;<ref refid="structwholememory__comm___1a7d736e2b695040c9b390a4aa8069149d" kindref="member">intra_node_first_rank_pid</ref>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>wholememory_prefix_str.append(temp_path_buffer);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wholememory_prefix_str;</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">std::string<sp/><ref refid="namespacewholememory_1af35e40bbda1b5855e82cd1b365532641" kindref="member">get_shm_prefix</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp_path_buffer[128];</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>(void)std::snprintf(temp_path_buffer,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wmshm_comm_id_%d_pid_%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1a2b551137f0731e414a013704a90847ac" kindref="member">comm_id</ref>,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1a7d736e2b695040c9b390a4aa8069149d" kindref="member">intra_node_first_rank_pid</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>std::string<sp/>wholememory_prefix_str<sp/>=<sp/>temp_path_buffer;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wholememory_prefix_str;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a96587d25f987409d1b7d1a9e520375d3" kindref="member">maybe_create_temp_dir</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>wm_comm)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacewholememory_1a9c2c75c1847de5be0addf761edf559d5" kindref="member">is_intranode_communicator</ref>(wm_comm))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wm_comm-&gt;<ref refid="structwholememory__comm___1a782cafc2eee72c52d3907282c5802d10" kindref="member">intra_node_rank</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_path<sp/>=<sp/><ref refid="namespacewholememory_1a380fdb86cf1c7824a5e1c13080347349" kindref="member">get_temporary_directory_path</ref>(wm_comm);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(mkdir(temp_path.c_str(),<sp/>0700)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(wm_comm,<sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a7de239af32391f9312cb9b50963891d8" kindref="member">WM_COMM_OP_WAIT_CREATE_TEMPDIR</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a5725f479c4bd27606c4a9bcaa86fbd99" kindref="member">maybe_remove_temp_dir</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>wm_comm)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacewholememory_1a9c2c75c1847de5be0addf761edf559d5" kindref="member">is_intranode_communicator</ref>(wm_comm))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wm_comm-&gt;<ref refid="structwholememory__comm___1a782cafc2eee72c52d3907282c5802d10" kindref="member">intra_node_rank</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>temp_path<sp/>=<sp/><ref refid="namespacewholememory_1a380fdb86cf1c7824a5e1c13080347349" kindref="member">get_temporary_directory_path</ref>(wm_comm);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(remove(<ref refid="namespacewholememory_1a380fdb86cf1c7824a5e1c13080347349" kindref="member">get_temporary_directory_path</ref>(wm_comm).c_str())<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>get_alloc_granularity(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1afd6d033a7ec5b3799a7c6cb0fefd177f" kindref="member">dev_id</ref>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal">{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>granularity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>CUmemAllocationProp<sp/>prop;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>memset(&amp;prop,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(prop));</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>prop.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CU_MEM_ALLOCATION_TYPE_PINNED;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>prop.requestedHandleTypes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CU_MEM_HANDLE_TYPE_POSIX_FILE_DESCRIPTOR;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>prop.location.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CU_MEM_LOCATION_TYPE_DEVICE;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>prop.allocFlags.compressionType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CU_MEM_ALLOCATION_COMP_NONE;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>CUmemAllocationGranularity_flags<sp/>flags<sp/>=<sp/>CU_MEM_ALLOC_GRANULARITY_RECOMMENDED;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>prop.location.id<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="communicator_8hpp_1afd6d033a7ec5b3799a7c6cb0fefd177f" kindref="member">dev_id</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1ab91989c3164b0d59babf67dddbf74120" kindref="member">WM_CU_CHECK</ref>(cuMemGetAllocationGranularity(&amp;granularity,<sp/>&amp;prop,<sp/>flags));</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>granularity;</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a3af64ba7abc562da548370fa251cd826" kindref="member">determine_alloc_granularity</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>granularity<sp/>=<sp/>get_alloc_granularity(comm-&gt;<ref refid="structwholememory__comm___1af9f6d010ca8af713d8660a1defd63ab5" kindref="member">dev_id</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>std::vector&lt;size_t&gt;<sp/>all_granularitys(comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">host_allgather</ref>(&amp;granularity,<sp/>all_granularitys.data(),<sp/>1,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cad544b558c31c88cf2977614e34ace0d5" kindref="member">WHOLEMEMORY_DT_INT64</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_granularity<sp/>=<sp/>granularity;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>g<sp/>:<sp/>all_granularitys)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g<sp/>&gt;<sp/>max_granularity)<sp/>{<sp/>max_granularity<sp/>=<sp/>g;<sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1a6d4f8669e0cb84743fcd297347d03433" kindref="member">alloc_granularity</ref><sp/>=<sp/>max_granularity;</highlight></codeline>
<codeline lineno="608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a9f8e92de4da5081630c846c779fc4263" kindref="member">create_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref>*<sp/>comm,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref><sp/>unique_id,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1a0be0ed3102aab1d72782301d75cf570b" kindref="member">world_rank</ref>,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(comm_mu);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>ncclComm_t<sp/>nccl_comm;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ncclCommInitRank(&amp;nccl_comm,<sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>,<sp/>(ncclUniqueId&amp;)unique_id,<sp/><ref refid="communicator_8hpp_1a0be0ed3102aab1d72782301d75cf570b" kindref="member">world_rank</ref>)<sp/>==</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ncclSuccess);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaStream_t<sp/>cuda_stream;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cuda__macros_8hpp_1a7d48b62f3df53ec1496f053529c79c52" kindref="member">WM_CUDA_CHECK</ref>(cudaStreamCreateWithFlags(&amp;cuda_stream,<sp/>cudaStreamNonBlocking));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>wm_comm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1a72d04c386835c200503fd1d46fd1f0f4" kindref="member">wholememory_comm_</ref>(nccl_comm,<sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>,<sp/><ref refid="communicator_8hpp_1a0be0ed3102aab1d72782301d75cf570b" kindref="member">world_rank</ref>,<sp/>cuda_stream);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>*comm<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>wm_comm;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(wm_comm,<sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a36d4ee478218dafc0967bd85a001825f" kindref="member">WM_COMM_OP_STARTING</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1a9c5172123345ce7690b59f39a9757b75" kindref="member">exchange_rank_info</ref>(wm_comm);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1a95008f0a1f11568c54ae618ec66bbc72" kindref="member">negotiate_communicator_id_locked</ref>(wm_comm);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1a96587d25f987409d1b7d1a9e520375d3" kindref="member">maybe_create_temp_dir</ref>(wm_comm);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1a3af64ba7abc562da548370fa251cd826" kindref="member">determine_alloc_granularity</ref>(wm_comm);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cu__error" kindref="compound">wholememory::cu_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cuda__error" kindref="compound">wholememory::cuda_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wle.what());</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::exception&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>re.what());</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::bad_alloc&amp;<sp/>sba)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>sba.what());</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1ac28dc0954635eb3e3e797fbde34101c4" kindref="member">destroy_all_wholememory</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(comm-&gt;<ref refid="structwholememory__comm___1aee579aabcce7a3212b11dedefdd595a5" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(comm,<sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a3952b76a72c500e4c02f1800a92e25e0" kindref="member">WM_COMM_OP_DESTROY_ALL_HANDLES</ref>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(comm,<sp/>comm-&gt;<ref refid="structwholememory__comm___1a35a267e7a30f64fb67d907f302aff960" kindref="member">wholememory_map</ref>.size());</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!comm-&gt;<ref refid="structwholememory__comm___1a35a267e7a30f64fb67d907f302aff960" kindref="member">wholememory_map</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>id_wm<sp/>=<sp/>comm-&gt;<ref refid="structwholememory__comm___1a35a267e7a30f64fb67d907f302aff960" kindref="member">wholememory_map</ref>.begin();</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1aa567f9c7bb90682cf10f61f0534bee2b" kindref="member">destroy_wholememory_with_comm_locked</ref>(id_wm-&gt;second);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wle.what());</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cuda__error" kindref="compound">wholememory::cuda_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::exception&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>re.what());</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1accb6ff921c8934a7878a8855f645a551" kindref="member">destroy_communicator_locked</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(communicator_map.find(comm-&gt;<ref refid="structwholememory__comm___1a2b551137f0731e414a013704a90847ac" kindref="member">comm_id</ref>)<sp/>==<sp/>communicator_map.end())<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1ac28dc0954635eb3e3e797fbde34101c4" kindref="member">destroy_all_wholememory</ref>(comm);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm-&gt;bind_to_nvshmem)<sp/>{<sp/>finalize_nvshmem_locked(comm);<sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(comm,<sp/><ref refid="namespacewholememory_1ad6de2acff817f4a1645066e29e305c17a285594ef08ad1e2790175293068ed40d" kindref="member">WM_COMM_OP_DESTROY_COMM</ref>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>communicator_map.erase(comm-&gt;<ref refid="structwholememory__comm___1a2b551137f0731e414a013704a90847ac" kindref="member">comm_id</ref>);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/><ref refid="communicator_8hpp_1ab59aa3cadb0b193c20a2b256f2a88b62" kindref="member">raw_nccl_comm</ref><sp/>=<sp/>comm-&gt;<ref refid="structwholememory__comm___1a76c4e2839b12259ae479cc87400b23e8" kindref="member">raw_nccl_comm</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>cuda_stream<sp/><sp/><sp/>=<sp/>comm-&gt;<ref refid="structwholememory__comm___1a9a9627d2b431d377763f226d373ebd55" kindref="member">comm_stream</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1a5725f479c4bd27606c4a9bcaa86fbd99" kindref="member">maybe_remove_temp_dir</ref>(comm);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>comm;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(ncclCommDestroy(<ref refid="communicator_8hpp_1ab59aa3cadb0b193c20a2b256f2a88b62" kindref="member">raw_nccl_comm</ref>)<sp/>==<sp/>ncclSuccess);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cuda__macros_8hpp_1a7d48b62f3df53ec1496f053529c79c52" kindref="member">WM_CUDA_CHECK</ref>(cudaStreamDestroy(cuda_stream));</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cuda__error" kindref="compound">wholememory::cuda_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wle.what());</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::exception&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>re.what());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a7d7a70bc0fd811bc3365a0006672568d" kindref="member">destroy_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(comm_mu);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1accb6ff921c8934a7878a8855f645a551" kindref="member">destroy_communicator_locked</ref>(comm);</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1ad196384a459e9d06c87a84b500373f13" kindref="member">communicator_support_type_location</ref>(</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location)<sp/>noexcept</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm-&gt;<ref refid="structwholememory__comm___1a86e4a137c710b81c0422127556f836eb" kindref="member">support_type_location</ref>(memory_type,<sp/>memory_location)<sp/>?<sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2acfd69c3c88b109af7e9b31ba119f983d" kindref="member">WHOLEMEMORY_NOT_SUPPORTED</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1ad3eaac5ad3d1adab0c25930187bbb892" kindref="member">destroy_all_communicators</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(comm_mu);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!communicator_map.empty())<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>id_comm<sp/>=<sp/>communicator_map.begin();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1accb6ff921c8934a7878a8855f645a551" kindref="member">destroy_communicator_locked</ref>(id_comm-&gt;second);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a066152d2429b6fadba01de0cb71dee49" kindref="member">communicator_get_rank</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rank,<sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>*rank<sp/>=<sp/>comm-&gt;<ref refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" kindref="member">world_rank</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a7e32c1600ee5fc7de9c172221823698f" kindref="member">communicator_get_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>size,<sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>*size<sp/>=<sp/>comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1ae0648dd1c3cb302520b9e2b5fbecb5d6" kindref="member">communicator_is_bind_to_nvshmem</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm-&gt;bind_to_nvshmem;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="namespacewholememory_1a6374c623eb001a87d3b9f27070a61c45" kindref="member">communicator_get_distributed_backend</ref>(</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="754"><highlight class="normal">{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm-&gt;<ref refid="structwholememory__comm___1af008c36ab2cc46cccd117f6d5662a707" kindref="member">distributed_backend</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal">}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a8b696746c0e9af2a26f527980f8f81ac" kindref="member">communicator_barrier</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1a58ad310a4836696213a8fe2beb7bba06" kindref="member">barrier</ref>();</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cuda__error" kindref="compound">wholememory::cuda_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wle.what());</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::exception&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>re.what());</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a9c2c75c1847de5be0addf761edf559d5" kindref="member">is_intranode_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comm-&gt;<ref refid="structwholememory__comm___1ac5998572fd8c52a62500a5308569d03c" kindref="member">is_intranode</ref>();<sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>init_nvshmem_with_comm(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(comm_mu);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(comm<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af59b2af87c5d45e0543be49eb5afe262" kindref="member">WHOLEMEMORY_EXPECTS</ref>(comm-&gt;bind_to_nvshmem<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>distributed_backend<sp/>should<sp/>be<sp/>WHOLEMEMORY_DB_NVSHMEM.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvshmem_has_initalized)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(comm,<sp/>nvshmem_has_initalized);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af59b2af87c5d45e0543be49eb5afe262" kindref="member">WHOLEMEMORY_EXPECTS</ref>(nvshmem_has_initalized<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;A<sp/>wholememory_comm_t<sp/>has<sp/>been<sp/>used<sp/>to<sp/>init<sp/>nvshmem.<sp/>To<sp/>init<sp/>nvshmem<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;other<sp/>wholememory_coomm_t,<sp/>call<sp/>finalize_nvshmem<sp/>first.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>set_env_if_not_exist<sp/>=<sp/>[](std::string_view<sp/>env_name,<sp/>std::string_view<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getenv(env_name.data())<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||<sp/>strcmp(getenv(env_name.data()),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setenv(env_name.data(),<sp/>value.data(),<sp/>1);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(getenv(env_name.data()),<sp/>value.data())<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1ada7e915c82d40eae1dee8f59a56190b8" kindref="member">WHOLEMEMORY_WARN</ref>(</highlight><highlight class="stringliteral">&quot;When<sp/>using<sp/>wholegraph,<sp/>the<sp/>environment<sp/>variable<sp/>%s<sp/>is<sp/>best<sp/>set<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env_name.data(),</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.data());</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>set_env_if_not_exist(</highlight><highlight class="stringliteral">&quot;NVSHMEM_BOOTSTRAP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mpi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>set_env_if_not_exist(</highlight><highlight class="stringliteral">&quot;NVSHMEM_BOOTSTRAP_MPI_PLUGIN&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;libnvshmem_wholememory_bootstrap.so&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>nvshmemx_init_attr_t<sp/>attr;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>attr.mpi_comm<sp/>=<sp/>&amp;comm;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>nvshmemx_init_attr(NVSHMEMX_INIT_WITH_MPI_COMM,<sp/>&amp;attr);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(nvshmem_my_pe()<sp/>==<sp/>comm-&gt;<ref refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" kindref="member">world_rank</ref>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(nvshmem_n_pes()<sp/>==<sp/>comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>nvshmem_has_initalized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;bind_to_nvshmem<sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wle.what());</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cuda__error" kindref="compound">wholememory::cuda_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::exception&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>re.what());</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>finalize_nvshmem_locked(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(comm<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(comm,<sp/>nvshmem_has_initalized);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af59b2af87c5d45e0543be49eb5afe262" kindref="member">WHOLEMEMORY_EXPECTS</ref>(comm-&gt;bind_to_nvshmem<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>wholememory_comm_t<sp/>must<sp/>be<sp/>the<sp/>one<sp/>previously<sp/>used<sp/>to<sp/>init<sp/>nvshmem.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af59b2af87c5d45e0543be49eb5afe262" kindref="member">WHOLEMEMORY_EXPECTS</ref>(</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nvshmem_has_initalized<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;To<sp/>call<sp/>finalize_nvshmem,please<sp/>use<sp/>wholememory_comm_t<sp/>to<sp/>init<sp/>nvshmem<sp/>first.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destroy<sp/>all<sp/>memory<sp/>allocated<sp/>by<sp/>nvshmem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>nvshmem_finalize();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>nvshmemi_is_nvshmem_bootstrapped<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>can<sp/>bootstrap<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>nvshmem_has_initalized<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;bind_to_nvshmem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wle.what());</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cuda__error" kindref="compound">wholememory::cuda_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::exception&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>re.what());</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a6b51adbdf967904a9b109296a5cff842" kindref="member">communicator_set_distributed_backend</ref>(</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,<sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" kindref="member">distributed_backend</ref>)<sp/>noexcept</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>mlock(comm_mu);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(comm<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" kindref="member">WM_COMM_CHECK_ALL_SAME</ref>(comm,<sp/><ref refid="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" kindref="member">distributed_backend</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;&amp;<sp/>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>handle]<sp/>:<sp/>comm-&gt;<ref refid="structwholememory__comm___1a35a267e7a30f64fb67d907f302aff960" kindref="member">wholememory_map</ref>)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af59b2af87c5d45e0543be49eb5afe262" kindref="member">WHOLEMEMORY_EXPECTS</ref>(<ref refid="wholememory_8h_1a502d8b806342b9a8b50fde1eeeb9321f" kindref="member">wholememory_get_memory_type</ref>(handle)<sp/>!=<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50aaf158928fcf5c811aba5071c22ec0f06" kindref="member">WHOLEMEMORY_MT_DISTRIBUTED</ref>,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>set<sp/>distributed_backend<sp/>before<sp/>creating<sp/>any<sp/>whole_memory<sp/>with<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;distributed<sp/>memory<sp/>type<sp/>if<sp/>need<sp/>to<sp/>change<sp/>distriubted_backend&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1af008c36ab2cc46cccd117f6d5662a707" kindref="member">distributed_backend</ref><sp/>=<sp/><ref refid="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" kindref="member">distributed_backend</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" kindref="member">distributed_backend</ref><sp/>==<sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82abede33ed3c2f8d61cd02409161967356" kindref="member">WHOLEMEMORY_DB_NVSHMEM</ref>)<sp/>{<sp/>comm-&gt;bind_to_nvshmem<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wle.what());</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structwholememory_1_1cuda__error" kindref="compound">wholememory::cuda_error</ref>&amp;<sp/>wce)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>wce.what());</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>raft::exception&amp;<sp/>re)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>re.what());</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a30cdbf2d058a1e5fada5dcccba3e75fa" kindref="member">WHOLEMEMORY_FAIL_NOTHROW</ref>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>exception.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>wholememory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/wholememory/communicator.cpp"/>
  </compounddef>
</doxygen>
