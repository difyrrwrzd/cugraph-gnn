<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="embedding__cache_8cpp" kind="file" language="C++">
    <compoundname>embedding_cache.cpp</compoundname>
    <includes refid="embedding__cache_8hpp" local="yes">embedding_cache.hpp</includes>
    <includes local="no">cmath</includes>
    <includes refid="integer__utils_8hpp" local="yes">integer_utils.hpp</includes>
    <includes refid="logger_8hpp" local="yes">logger.hpp</includes>
    <includes refid="memory__handle_8hpp" local="yes">memory_handle.hpp</includes>
    <includes refid="embedding__cache__func_8h" local="yes">wholememory_ops/functions/embedding_cache_func.h</includes>
    <incdepgraph>
      <node id="17">
        <label>raft/util/integer_utils.hpp</label>
      </node>
      <node id="39">
        <label>iomanip</label>
      </node>
      <node id="23">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="28">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>stdint.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="15">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>cassert</label>
      </node>
      <node id="27">
        <label>communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>integer_utils.hpp</label>
        <link refid="integer__utils_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>string</label>
      </node>
      <node id="19">
        <label>cstdarg</label>
      </node>
      <node id="31">
        <label>map</label>
      </node>
      <node id="14">
        <label>stddef.h</label>
      </node>
      <node id="18">
        <label>logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>wholememory/env_func_ptrs.h</label>
        <link refid="env__func__ptrs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>cstdio</label>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
      <node id="33">
        <label>vector</label>
      </node>
      <node id="1">
        <label>src/wholememory/embedding_cache.cpp</label>
        <link refid="embedding__cache_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>wholememory/embedding.h</label>
        <link refid="embedding_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>wholememory/wholememory_tensor.h</label>
        <link refid="wholememory__tensor_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cstdlib</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>cuda_macros.hpp</label>
        <link refid="cuda__macros_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>memory_handle.hpp</label>
        <link refid="memory__handle_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>cuda.h</label>
      </node>
      <node id="41">
        <label>wholememory_ops/functions/embedding_cache_func.h</label>
        <link refid="embedding__cache__func_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>mutex</label>
      </node>
      <node id="3">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="36">
        <label>chrono</label>
      </node>
      <node id="13">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>nccl.h</label>
      </node>
      <node id="2">
        <label>embedding_cache.hpp</label>
        <link refid="embedding__cache_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdio.h</label>
      </node>
      <node id="38">
        <label>execinfo.h</label>
      </node>
      <node id="30">
        <label>cstring</label>
      </node>
      <node id="40">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacewholememory">wholememory</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embedding__cache_8hpp" kindref="compound">embedding_cache.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="integer__utils_8hpp" kindref="compound">integer_utils.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__handle_8hpp" kindref="compound">memory_handle.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embedding__cache__func_8h" kindref="compound">wholememory_ops/functions/embedding_cache_func.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory" kindref="compound">wholememory</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="classwholememory_1_1embedding__cache__local__data_1ab3ec81fe95f3e83d215dd8994f59e7bb" kindref="member">embedding_cache_local_data::~embedding_cache_local_data</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__local__data_1ac25c6ce50373760b702329120837fc62" kindref="member">cache_line_tag_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__local__data_1ac25c6ce50373760b702329120837fc62" kindref="member">cache_line_tag_</ref>)<sp/>==<sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__local__data_1ac25c6ce50373760b702329120837fc62" kindref="member">cache_line_tag_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__local__data_1adad684be61e71cf6e617b26a847a835f" kindref="member">cache_line_lfu_count_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__local__data_1adad684be61e71cf6e617b26a847a835f" kindref="member">cache_line_lfu_count_</ref>)<sp/>==</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__local__data_1adad684be61e71cf6e617b26a847a835f" kindref="member">cache_line_lfu_count_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__local__data_1a33a091f28fb3b55ed64a1f0a6cd7497f" kindref="member">cache_line_data_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__local__data_1a33a091f28fb3b55ed64a1f0a6cd7497f" kindref="member">cache_line_data_</ref>)<sp/>==<sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__local__data_1a33a091f28fb3b55ed64a1f0a6cd7497f" kindref="member">cache_line_data_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__local__data_1a0d02ec413f5ccfddb8839cd11f4bd9ba" kindref="member">access_count_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__local__data_1a0d02ec413f5ccfddb8839cd11f4bd9ba" kindref="member">access_count_</ref>)<sp/>==<sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__local__data_1a0d02ec413f5ccfddb8839cd11f4bd9ba" kindref="member">access_count_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="classwholememory_1_1embedding__cache__base_1a2ba51fc5bc640a8829c4764b10eccef8" kindref="member">embedding_cache_base::embedding_cache_base</ref>(<ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_t</ref><sp/>cache_policy)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a6303ed95b5fac4353748f77d64271fdf" kindref="member">cache_policy_</ref><sp/>=<sp/>cache_policy;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="classwholememory_1_1embedding__cache__base_1ac95f250dfa94bfa7744ff0e3c5b41842" kindref="member">embedding_cache_base::~embedding_cache_base</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__base_1a42296cc962c3ddbdb7a6c45057647685" kindref="member">cache_line_tag_wm_tensor_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__base_1a42296cc962c3ddbdb7a6c45057647685" kindref="member">cache_line_tag_wm_tensor_</ref>)<sp/>==</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a42296cc962c3ddbdb7a6c45057647685" kindref="member">cache_line_tag_wm_tensor_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__base_1a68ea8e32e42a628f1452c2a3118b5db8" kindref="member">cache_line_lfu_count_wm_tensor_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__base_1a68ea8e32e42a628f1452c2a3118b5db8" kindref="member">cache_line_lfu_count_wm_tensor_</ref>)<sp/>==</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a68ea8e32e42a628f1452c2a3118b5db8" kindref="member">cache_line_lfu_count_wm_tensor_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__base_1ad6a09990fe92ff8087785299623aa5e3" kindref="member">cache_line_data_wm_tensor_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__base_1ad6a09990fe92ff8087785299623aa5e3" kindref="member">cache_line_data_wm_tensor_</ref>)<sp/>==</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1ad6a09990fe92ff8087785299623aa5e3" kindref="member">cache_line_data_wm_tensor_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__base_1ac855262c539fb5a74157df6a8f416abb" kindref="member">access_count_wm_tensor_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="wholememory__tensor_8h_1a6358b3b4a8b37c3172814e3a1c9a4d0d" kindref="member">wholememory_destroy_tensor</ref>(<ref refid="classwholememory_1_1embedding__cache__base_1ac855262c539fb5a74157df6a8f416abb" kindref="member">access_count_wm_tensor_</ref>)<sp/>==</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1ac855262c539fb5a74157df6a8f416abb" kindref="member">access_count_wm_tensor_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__base_1a6303ed95b5fac4353748f77d64271fdf" kindref="member">cache_policy_</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(<ref refid="embedding_8h_1a02db48656dd2c2103a3dfb0008884495" kindref="member">wholememory_destroy_embedding_cache_policy</ref>(<ref refid="classwholememory_1_1embedding__cache__base_1a6303ed95b5fac4353748f77d64271fdf" kindref="member">cache_policy_</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a6303ed95b5fac4353748f77d64271fdf" kindref="member">cache_policy_</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a911b7b877893fba917df073fe3a8aba0" kindref="member">embedding_cache_base::pad_last_dim</ref>(<ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref><sp/>data_desc)<sp/>noexcept</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>matrix_description_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>data_desc;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>embedding_count<sp/>=<sp/>matrix_description_.sizes[0];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>embedding_dim<sp/><sp/><sp/>=<sp/>matrix_description_.sizes[1];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>element_size<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="tensor__description_8h_1a1283f01dec368463825a17645e13169e" kindref="member">wholememory_dtype_get_element_size</ref>(matrix_description_.dtype);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(element_size<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>align_count<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>kEmbeddingAlignmentInBytes<sp/>/<sp/>element_size;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>embedding_stride<sp/>=<sp/>round_up_unsafe&lt;int64_t&gt;(embedding_dim,<sp/>align_count);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>matrix_description_.stride<sp/><sp/><sp/><sp/><sp/>=<sp/>embedding_stride;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>padded_matrix_description_<sp/><sp/><sp/><sp/><sp/>=<sp/>matrix_description_;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="classwholememory_1_1embedding__cache__base_1af3d25495d982e7c54bea7759f31b116d" kindref="member">embedding_cache_base::check_raw_tensor</ref>(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>raw_data_tensor)<sp/>noexcept</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>all<sp/>are<sp/>same<sp/>as<sp/>requested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_data_tensor<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;raw_data_tensor<sp/>is<sp/>null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wholememory__tensor_8h_1a8fd657162127ed32802f94e1b2ed348e" kindref="member">wholememory_tensor_has_handle</ref>(raw_data_tensor))<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;raw_data_tensor<sp/>is<sp/>not<sp/>WholeMemory<sp/>Tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>mem_handle<sp/>=<sp/><ref refid="wholememory__tensor_8h_1a098f2402daf29568bfb6678ef0a7eb5f" kindref="member">wholememory_tensor_get_memory_handle</ref>(raw_data_tensor);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem_handle<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;raw_data_tensor<sp/>WholeMemory<sp/>Handle<sp/>is<sp/>nullptr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="wholememory_8h_1a502d8b806342b9a8b50fde1eeeb9321f" kindref="member">wholememory_get_memory_type</ref>(mem_handle)<sp/>!=<sp/>raw_memory_type_<sp/>||</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewholememory_1a3b465d47df3912c6d731f775515538bc" kindref="member">get_memory_location</ref>(mem_handle)<sp/>!=<sp/>raw_memory_location_)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raw_data_tensor<sp/>WholeMemory<sp/>type<sp/>or<sp/>location<sp/>is<sp/>not<sp/>same<sp/>as<sp/>get_embedding_requirement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1a399699aa55ec434ea8fe89d2b7bf6832" kindref="member">wholememory_get_communicator</ref>(&amp;comm,<sp/>mem_handle));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm<sp/>!=<sp/>raw_comm_)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;raw_data_tensor<sp/>WholeMemory<sp/>communicator<sp/>is<sp/>not<sp/>same<sp/>as<sp/>get_embedding_requirement&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>raw_desc<sp/>=<sp/><ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(raw_data_tensor);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(raw_desc-&gt;dim<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>raw_desc-&gt;storage_offset<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(raw_desc-&gt;dtype<sp/>==<sp/>matrix_description_.dtype);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(raw_desc-&gt;strides[0]<sp/>==<sp/>matrix_description_.stride<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_desc-&gt;strides[1]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(raw_desc-&gt;sizes[0]<sp/>==<sp/>matrix_description_.sizes[0]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_desc-&gt;sizes[1]<sp/>==<sp/>matrix_description_.sizes[1]);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;check_raw_tensor<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="wholememory__tensor_8h_1a8fd657162127ed32802f94e1b2ed348e" kindref="member">wholememory_tensor_has_handle</ref>(raw_data_tensor))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;should<sp/>be<sp/>WholeMemory<sp/>Tensor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>root_tensor<sp/>=<sp/><ref refid="wholememory__tensor_8h_1a02313ba65cd384d3c91d5190f94ec992" kindref="member">wholememory_tensor_get_root</ref>(raw_data_tensor);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>root_desc<sp/><sp/><sp/>=<sp/><ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(root_tensor);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(root_desc-&gt;dim<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>root_desc-&gt;storage_offset<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(root_desc-&gt;dtype<sp/>==<sp/>padded_matrix_description_.dtype);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(root_desc-&gt;strides[0]<sp/>==<sp/>padded_matrix_description_.stride<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_desc-&gt;strides[1]<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af32f7e28d8982de1feb7cfa07a6c8794" kindref="member">WHOLEMEMORY_CHECK</ref>(root_desc-&gt;sizes[0]<sp/>==<sp/>padded_matrix_description_.sizes[0]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root_desc-&gt;sizes[1]<sp/>==<sp/>padded_matrix_description_.sizes[1]);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="structwholememory_1_1logic__error" kindref="compound">wholememory::logic_error</ref>&amp;<sp/>wle)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;check_raw_tensor<sp/>failed<sp/>for<sp/>root<sp/>tensor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a354f2c9c13876a230b839cf1f739a6de" kindref="member">embedding_cache_base::compute_cache_set_coverage</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classwholememory_1_1embedding__cache__base_1a6303ed95b5fac4353748f77d64271fdf" kindref="member">cache_policy_</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;cache_policy_<sp/>not<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cache_ratio<sp/>=<sp/><ref refid="classwholememory_1_1embedding__cache__base_1a6303ed95b5fac4353748f77d64271fdf" kindref="member">cache_policy_</ref>-&gt;<ref refid="structwholememory__embedding__cache__policy___1a929216ff656a607a34b16351445211e8" kindref="member">cache_ratio</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_ratio<sp/>&gt;=<sp/>1.0F<sp/>||<sp/>cache_ratio<sp/>&lt;=<sp/>0.0F)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>cache<sp/>ratio<sp/>%f,<sp/>should<sp/>be<sp/>in<sp/>range<sp/>(0.0,<sp/>1.0).&quot;</highlight><highlight class="normal">,<sp/>cache_ratio);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a485ecd2b76892b86eaeaa28163e4a5c7" kindref="member">WHOLEMEMORY_INVALID_VALUE</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1aa514c769be785f00e0aec49a3304d652" kindref="member">cache_set_coverage_</ref><sp/>=<sp/>std::round(<ref refid="classwholememory_1_1embedding__cache__base_1ac28940a30c2491153dd539784006b9fc" kindref="member">kCacheSetSize</ref><sp/>/<sp/>cache_ratio);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="classwholememory_1_1embedding__cache__base_1aa514c769be785f00e0aec49a3304d652" kindref="member">cache_set_coverage_</ref><sp/>=<sp/>std::min(<ref refid="classwholememory_1_1embedding__cache__base_1aa514c769be785f00e0aec49a3304d652" kindref="member">cache_set_coverage_</ref>,<sp/><ref refid="classwholememory_1_1embedding__cache__base_1ab6b1328910442f346c74ce6647b508ac" kindref="member">kMaxCacheSetCoverage</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a8da5f29aa1655c0660c070ac0221f3a3" kindref="member">embedding_cache_base::allocate</ref>(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>raw_data_tensor)<sp/>noexcept</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(check_raw_tensor(raw_data_tensor));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>padded_raw_tensor_<sp/><sp/><sp/><sp/>=<sp/><ref refid="wholememory__tensor_8h_1a02313ba65cd384d3c91d5190f94ec992" kindref="member">wholememory_tensor_get_root</ref>(raw_data_tensor);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">*<sp/>padded_raw_desc<sp/>=<sp/><ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(padded_raw_tensor_);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(padded_raw_desc<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(padded_raw_desc-&gt;dim<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>padded_embedding_count<sp/>=<sp/>padded_embedding_count_for_cache_;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(padded_embedding_count<sp/>%<sp/>cache_set_coverage_<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>total_cache_set_count<sp/>=<sp/>padded_embedding_count<sp/>/<sp/>cache_set_coverage_;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_world_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1aa1aad91132568fe162864d821a47b5cc" kindref="member">wholememory_communicator_get_size</ref>(&amp;cache_world_size,<sp/>cache_policy_-&gt;cache_comm));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a7a4ea726195a00d76b63f8ad3ce56d47" kindref="member">WHOLEMEMORY_CHECK_NOTHROW</ref>(total_cache_set_count<sp/>%<sp/>cache_world_size<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>cache_line_meta_desc;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>cache_line_meta_desc.<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>cache_line_meta_desc.<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cae63ed5b24aa79279081568835a6ed649" kindref="member">WHOLEMEMORY_DT_INT16</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>cache_line_meta_desc.<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>cache_line_meta_desc.<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>total_cache_set_count;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>cache_line_meta_desc.<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[1]<sp/>=<sp/>cache_line_meta_desc.<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/>=<sp/>kCacheSetSize;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>cache_line_meta_desc.<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory__tensor_8h_1a0ffc85adcd2d4bf705b0e0880f344fe2" kindref="member">wholememory_create_tensor</ref>(&amp;cache_line_tag_wm_tensor_,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cache_line_meta_desc,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_comm,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_type,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_location));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory__tensor_8h_1a0ffc85adcd2d4bf705b0e0880f344fe2" kindref="member">wholememory_create_tensor</ref>(&amp;cache_line_lfu_count_wm_tensor_,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cache_line_meta_desc,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_comm,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_type,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_location));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>cache_line_data_desc<sp/>=<sp/>cache_line_meta_desc;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>cache_line_data_desc.<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>padded_raw_desc-&gt;dtype;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>cache_line_data_desc.<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>total_cache_set_count<sp/>*<sp/>kCacheSetSize;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>cache_line_data_desc.<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>padded_raw_desc-&gt;sizes[1];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>cache_line_data_desc.<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>padded_raw_desc-&gt;strides[0];</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory__tensor_8h_1a0ffc85adcd2d4bf705b0e0880f344fe2" kindref="member">wholememory_create_tensor</ref>(&amp;cache_line_data_wm_tensor_,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cache_line_data_desc,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_comm,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_type,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_location));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>access_count_desc;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>access_count_desc.<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>access_count_desc.<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>access_count_desc.<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>padded_embedding_count_for_cache_;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>access_count_desc.<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5cad544b558c31c88cf2977614e34ace0d5" kindref="member">WHOLEMEMORY_DT_INT64</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>access_count_desc.<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory__tensor_8h_1a0ffc85adcd2d4bf705b0e0880f344fe2" kindref="member">wholememory_create_tensor</ref>(&amp;access_count_wm_tensor_,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;access_count_desc,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_comm,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_type,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_policy_-&gt;cache_memory_location));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1abe9ddf0d6119f5eba3680de07166c681" kindref="member">wholememory_tensor_map_local_tensor</ref>(cache_line_tag_wm_tensor_,<sp/>&amp;local_cache_.cache_line_tag_));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory__tensor_8h_1abe9ddf0d6119f5eba3680de07166c681" kindref="member">wholememory_tensor_map_local_tensor</ref>(</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>cache_line_lfu_count_wm_tensor_,<sp/>&amp;local_cache_.cache_line_lfu_count_));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory__tensor_8h_1abe9ddf0d6119f5eba3680de07166c681" kindref="member">wholememory_tensor_map_local_tensor</ref>(cache_line_data_wm_tensor_,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;local_cache_.cache_line_data_));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1abe9ddf0d6119f5eba3680de07166c681" kindref="member">wholememory_tensor_map_local_tensor</ref>(access_count_wm_tensor_,<sp/>&amp;local_cache_.access_count_));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>local_cache_line_count<sp/>=<sp/><ref refid="tensor__description_8h_1a42c858c711aea6b50a494bb57a542568" kindref="member">wholememory_get_memory_element_count_from_tensor</ref>(</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(local_cache_.cache_line_tag_));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaMemset(<ref refid="wholememory__tensor_8h_1a3f5f9937591864246e0673b0a0cf8db2" kindref="member">wholememory_tensor_get_data_pointer</ref>(local_cache_.cache_line_tag_),</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_cache_line_count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16_t)));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaMemset(<ref refid="wholememory__tensor_8h_1a3f5f9937591864246e0673b0a0cf8db2" kindref="member">wholememory_tensor_get_data_pointer</ref>(local_cache_.cache_line_lfu_count_),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_cache_line_count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int16_t)));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>local_access_count_count<sp/>=<sp/><ref refid="tensor__description_8h_1a42c858c711aea6b50a494bb57a542568" kindref="member">wholememory_get_memory_element_count_from_tensor</ref>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(local_cache_.access_count_));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(cudaMemset(<ref refid="wholememory__tensor_8h_1a3f5f9937591864246e0673b0a0cf8db2" kindref="member">wholememory_tensor_get_data_pointer</ref>(local_cache_.access_count_),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_access_count_count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int64_t)));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(cudaDeviceSynchronize());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1a50d5b529e38c0967a8f8ac3cb0903606" kindref="member">wholememory_communicator_barrier</ref>(cache_policy_-&gt;cache_comm));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a43f5a089fc9de52ede11fe2a10a0342c" kindref="member">embedding_cache_base::writeback_all_cache</ref>(cudaStream_t<sp/>stream)<sp/>noexcept</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="classwholememory_1_1embedding__cache__base_1a1494c7df36538cb6503daf1c4b8244fc" kindref="member">embedding_cache_base::drop_all_cache</ref>(cudaStream_t<sp/>stream)<sp/>noexcept</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="classwholememory_1_1device__cache__for__host_1a3563a7755ba5e1332ac193416037beb4" kindref="member">device_cache_for_host::device_cache_for_host</ref>(<ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_t</ref><sp/>cache_policy)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>:<sp/>embedding_cache_base(cache_policy)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">device_cache_for_host::~device_cache_for_host()<sp/>{}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>device_cache_for_host::get_embedding_requirement(</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>padded_desc,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref><sp/>data_desc,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location)<sp/>noexcept</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_policy_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>cache<sp/>policy<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_policy_-&gt;cache_memory_location<sp/>!=<sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fead3ca08fe2942418057f06c95eebd4714" kindref="member">WHOLEMEMORY_ML_DEVICE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;device_cache_for_host<sp/>cache<sp/>memory<sp/>should<sp/>be<sp/>device.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comm<sp/>!=<sp/>cache_policy_-&gt;cache_comm)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;device_cache_for_host<sp/>cache<sp/>should<sp/>use<sp/>the<sp/>same<sp/>communicator<sp/>as<sp/>raw<sp/>data.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a485ecd2b76892b86eaeaa28163e4a5c7" kindref="member">WHOLEMEMORY_INVALID_VALUE</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padded_raw_tensor_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;embedding_cache<sp/>already<sp/>cached<sp/>other<sp/>embedding.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memory_type<sp/>&gt;<sp/>cache_policy_-&gt;cache_memory_type)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;embedding<sp/>memory_type<sp/>should<sp/>support<sp/>at<sp/>least<sp/>cache<sp/>memory_type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a485ecd2b76892b86eaeaa28163e4a5c7" kindref="member">WHOLEMEMORY_INVALID_VALUE</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>compute_cache_set_coverage();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>pad_last_dim(data_desc);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>embedding_count<sp/>=<sp/>matrix_description_.sizes[0];</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1aa1aad91132568fe162864d821a47b5cc" kindref="member">wholememory_communicator_get_size</ref>(&amp;<ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>,<sp/>comm));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>padded_embedding_count_for_cache_<sp/>=<sp/>round_up_unsafe&lt;int64_t&gt;(</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>embedding_count,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>)<sp/>*<sp/>cache_set_coverage_);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>padded_matrix_description_.sizes[0]<sp/>=<sp/>padded_embedding_count_for_cache_;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="tensor__description_8h_1af2eef6741c9e7e40c4ea740f512f23dc" kindref="member">wholememory_copy_matrix_desc_to_tensor</ref>(padded_desc,<sp/>&amp;padded_matrix_description_);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>raw_comm_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>raw_memory_location_<sp/>=<sp/>memory_location;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>raw_memory_type_<sp/><sp/><sp/><sp/><sp/>=<sp/>memory_type;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>device_cache_for_host::writeback_all_cache(cudaStream_t<sp/>stream)<sp/>noexcept</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="namespacewholememory__ops_1af58170ffeb8bbe957db42aa56fd8a3ae" kindref="member">wholememory_ops::writeback_cache_direct_same_comm</ref>(</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>padded_raw_tensor_,<sp/>&amp;local_cache_,<sp/>cache_set_coverage_,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>stream));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(cudaStreamSynchronize(stream));</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>wm_comm;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1a399699aa55ec434ea8fe89d2b7bf6832" kindref="member">wholememory_get_communicator</ref>(</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;wm_comm,<sp/><ref refid="wholememory__tensor_8h_1a098f2402daf29568bfb6678ef0a7eb5f" kindref="member">wholememory_tensor_get_memory_handle</ref>(padded_raw_tensor_)));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1a50d5b529e38c0967a8f8ac3cb0903606" kindref="member">wholememory_communicator_barrier</ref>(wm_comm));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>device_cache_for_host::drop_all_cache(cudaStream_t<sp/>stream)<sp/>noexcept</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="namespacewholememory__ops_1af58170ffeb8bbe957db42aa56fd8a3ae" kindref="member">wholememory_ops::writeback_cache_direct_same_comm</ref>(</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>padded_raw_tensor_,<sp/>&amp;local_cache_,<sp/>cache_set_coverage_,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>stream));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(cudaStreamSynchronize(stream));</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>wm_comm;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1a399699aa55ec434ea8fe89d2b7bf6832" kindref="member">wholememory_get_communicator</ref>(</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;wm_comm,<sp/><ref refid="wholememory__tensor_8h_1a098f2402daf29568bfb6678ef0a7eb5f" kindref="member">wholememory_tensor_get_memory_handle</ref>(padded_raw_tensor_)));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1a50d5b529e38c0967a8f8ac3cb0903606" kindref="member">wholememory_communicator_barrier</ref>(wm_comm));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal">local_cache_for_global::local_cache_for_global(<ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_t</ref><sp/>cache_policy)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>:<sp/>embedding_cache_base(cache_policy)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">local_cache_for_global::~local_cache_for_global()<sp/>{}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>local_cache_for_global::get_embedding_requirement(</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>padded_desc,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__matrix__description__t" kindref="compound">wholememory_matrix_description_t</ref><sp/>data_desc,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location)<sp/>noexcept</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_policy_<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>cache<sp/>policy<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_policy_-&gt;cache_memory_type<sp/>&gt;<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50acb4fa48855a5741ad8f7153dceb7665e" kindref="member">WHOLEMEMORY_MT_CHUNKED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;local_cache_for_global<sp/>cache<sp/>should<sp/>support<sp/>at<sp/>least<sp/>WHOLEMEMORY_MT_CHUNKED<sp/>for<sp/>now.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2b4b897ab5a9ba65a0cac0c6e168176c" kindref="member">WHOLEMEMORY_NOT_IMPLEMENTED</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padded_raw_tensor_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;embedding_cache<sp/>already<sp/>cached<sp/>other<sp/>embedding.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_policy_-&gt;access_type<sp/>!=<sp/><ref refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aad216025260dc818463c93e46939b1236" kindref="member">WHOLEMEMORY_AT_READONLY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;local_cache_for_global<sp/>only<sp/>READONLY<sp/>cache<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a2b4b897ab5a9ba65a0cac0c6e168176c" kindref="member">WHOLEMEMORY_NOT_IMPLEMENTED</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>compute_cache_set_coverage();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>pad_last_dim(data_desc);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>int64_t<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>embedding_count<sp/>=<sp/>matrix_description_.sizes[0];</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_world_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_policy_-&gt;cache_comm<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1aa1aad91132568fe162864d821a47b5cc" kindref="member">wholememory_communicator_get_size</ref>(&amp;cache_world_size,<sp/>cache_policy_-&gt;cache_comm));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>padded_embedding_count_for_cache_<sp/>=<sp/>round_up_unsafe&lt;int64_t&gt;(</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>embedding_count,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">int64_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cache_world_size)<sp/>*<sp/>cache_set_coverage_);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>padded_matrix_description_.sizes[0]<sp/>=<sp/>padded_embedding_count_for_cache_;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="tensor__description_8h_1af2eef6741c9e7e40c4ea740f512f23dc" kindref="member">wholememory_copy_matrix_desc_to_tensor</ref>(padded_desc,<sp/>&amp;padded_matrix_description_);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>raw_comm_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>comm;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>raw_memory_location_<sp/>=<sp/>memory_location;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>raw_memory_type_<sp/><sp/><sp/><sp/><sp/>=<sp/>memory_type;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>local_cache_for_global::drop_all_cache(cudaStream_t<sp/>stream)<sp/>noexcept</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>local_tag_tensor<sp/>=<sp/>local_cache_.cache_line_tag_;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>local_cache_line_size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="tensor__description_8h_1a1f9ecef913f2ca09c01cf5d0e87911aa" kindref="member">wholememory_get_memory_size_from_tensor</ref>(</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(local_tag_tensor));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(cudaMemsetAsync(</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1a3f5f9937591864246e0673b0a0cf8db2" kindref="member">wholememory_tensor_get_data_pointer</ref>(local_tag_tensor),<sp/>0,<sp/>local_cache_line_size,<sp/>stream));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="cuda__macros_8hpp_1a1d4e4e4337fdfdb036f1817f266938c4" kindref="member">WM_CUDA_CHECK_NO_THROW</ref>(cudaStreamSynchronize(stream));</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(<ref refid="wholememory_8h_1a50d5b529e38c0967a8f8ac3cb0903606" kindref="member">wholememory_communicator_barrier</ref>(cache_policy_-&gt;cache_comm));</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>wholememory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/wholememory/embedding_cache.cpp"/>
  </compounddef>
</doxygen>
