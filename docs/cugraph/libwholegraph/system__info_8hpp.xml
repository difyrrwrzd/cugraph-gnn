<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="system__info_8hpp" kind="file" language="C++">
    <compoundname>system_info.hpp</compoundname>
    <includedby refid="communicator_8cpp" local="yes">src/wholememory/communicator.cpp</includedby>
    <includedby refid="memory__handle_8cpp" local="yes">src/wholememory/memory_handle.cpp</includedby>
    <includedby refid="system__info_8cpp" local="yes">src/wholememory/system_info.cpp</includedby>
    <invincdepgraph>
      <node id="3">
        <label>src/wholememory/memory_handle.cpp</label>
        <link refid="memory__handle_8cpp"/>
      </node>
      <node id="1">
        <label>src/wholememory/system_info.hpp</label>
        <link refid="system__info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/wholememory/system_info.cpp</label>
        <link refid="system__info_8cpp"/>
      </node>
      <node id="2">
        <label>src/wholememory/communicator.cpp</label>
        <link refid="communicator_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="system__info_8hpp_1aa415ac5d8f2b57a6a409294242a40b72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DevAttrPagebleMemoryAccess</definition>
        <argsstring>()</argsstring>
        <name>DevAttrPagebleMemoryAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="18" column="6" bodyfile="src/wholememory/system_info.cpp" bodystart="22" bodyend="30" declfile="src/wholememory/system_info.hpp" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="system__info_8hpp_1a18bdb4a151278353ee50cfa496dba0b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DeviceCanAccessPeer</definition>
        <argsstring>(int peer_device)</argsstring>
        <name>DeviceCanAccessPeer</name>
        <param>
          <type>int</type>
          <declname>peer_device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="20" column="6" bodyfile="src/wholememory/system_info.cpp" bodystart="32" bodyend="39" declfile="src/wholememory/system_info.hpp" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="system__info_8hpp_1a9fd5ec853ae2127290da62c79103465b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DevicesCanAccessP2P</definition>
        <argsstring>(const int *dev_ids, int count)</argsstring>
        <name>DevicesCanAccessP2P</name>
        <param>
          <type>const int *</type>
          <declname>dev_ids</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="22" column="6" bodyfile="src/wholememory/system_info.cpp" bodystart="41" bodyend="65" declfile="src/wholememory/system_info.hpp" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="system__info_8hpp_1aa1d10b39ddd98784da026207f441401c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetCudaCompCap</definition>
        <argsstring>()</argsstring>
        <name>GetCudaCompCap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="24" column="5" bodyfile="src/wholememory/system_info.cpp" bodystart="67" bodyend="77" declfile="src/wholememory/system_info.hpp" declline="24" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="system__info_8hpp_1a8d382576959665e2ce0bf3f9748eff85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* GetCPUArch</definition>
        <argsstring>()</argsstring>
        <name>GetCPUArch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="26" column="12" bodyfile="src/wholememory/system_info.cpp" bodystart="79" bodyend="89" declfile="src/wholememory/system_info.hpp" declline="26" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="system__info_8hpp_1a1498d86ae084dab2e930543fa6cf6e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SupportMNNVL</definition>
        <argsstring>()</argsstring>
        <name>SupportMNNVL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="28" column="6" bodyfile="src/wholememory/system_info.cpp" bodystart="91" bodyend="95" declfile="src/wholememory/system_info.hpp" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="system__info_8hpp_1a08c33ef7194ee8a76c4edce2eab2fc7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SupportEGM</definition>
        <argsstring>()</argsstring>
        <name>SupportEGM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="30" column="6" bodyfile="src/wholememory/system_info.cpp" bodystart="97" bodyend="101" declfile="src/wholememory/system_info.hpp" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="system__info_8hpp_1a7758895085a4b665ac9908c6324e395f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool SupportMNNVLForEGM</definition>
        <argsstring>()</argsstring>
        <name>SupportMNNVLForEGM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/system_info.hpp" line="32" column="6" bodyfile="src/wholememory/system_info.cpp" bodystart="103" bodyend="103" declfile="src/wholememory/system_info.hpp" declline="32" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="system__info_8hpp_1aa415ac5d8f2b57a6a409294242a40b72" kindref="member">DevAttrPagebleMemoryAccess</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="system__info_8hpp_1a18bdb4a151278353ee50cfa496dba0b6" kindref="member">DeviceCanAccessPeer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>peer_device);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="system__info_8hpp_1a9fd5ec853ae2127290da62c79103465b" kindref="member">DevicesCanAccessP2P</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dev_ids,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="system__info_8hpp_1aa1d10b39ddd98784da026207f441401c" kindref="member">GetCudaCompCap</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="system__info_8hpp_1a8d382576959665e2ce0bf3f9748eff85" kindref="member">GetCPUArch</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="system__info_8hpp_1a1498d86ae084dab2e930543fa6cf6e36" kindref="member">SupportMNNVL</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="system__info_8hpp_1a08c33ef7194ee8a76c4edce2eab2fc7a" kindref="member">SupportEGM</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="system__info_8hpp_1a7758895085a4b665ac9908c6324e395f" kindref="member">SupportMNNVLForEGM</ref>();</highlight></codeline>
    </programlisting>
    <location file="src/wholememory/system_info.hpp"/>
  </compounddef>
</doxygen>
