<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="nvshmem__wholememory__bootstrap_8cpp" kind="file" language="C++">
    <compoundname>nvshmem_wholememory_bootstrap.cpp</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdlib</includes>
    <includes refid="logger_8hpp" local="yes">logger.hpp</includes>
    <includes local="yes">nvshmem.h</includes>
    <includes local="yes">nvshmemi_bootstrap.h</includes>
    <includes local="yes">nvshmemx.h</includes>
    <includes refid="communicator_8hpp" local="yes">wholememory/communicator.hpp</includes>
    <includes refid="initialize_8hpp" local="yes">wholememory/initialize.hpp</includes>
    <includes refid="memory__handle_8hpp" local="yes">wholememory/memory_handle.hpp</includes>
    <includes refid="wholememory_8h" local="no">wholememory/wholememory.h</includes>
    <incdepgraph>
      <node id="35">
        <label>iomanip</label>
      </node>
      <node id="17">
        <label>nvshmemi_bootstrap.h</label>
      </node>
      <node id="9">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="20">
        <label>cstdint</label>
      </node>
      <node id="28">
        <label>stdint.h</label>
      </node>
      <node id="29">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>cassert</label>
      </node>
      <node id="19">
        <label>wholememory/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="5">
        <label>cstdarg</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="15">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>cstdio</label>
      </node>
      <node id="13">
        <label>unistd.h</label>
      </node>
      <node id="26">
        <label>vector</label>
      </node>
      <node id="37">
        <label>wholememory/initialize.hpp</label>
        <link refid="initialize_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</label>
        <link refid="nvshmem__wholememory__bootstrap_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="30">
        <label>cuda_macros.hpp</label>
        <link refid="cuda__macros_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="38">
        <label>wholememory/memory_handle.hpp</label>
        <link refid="memory__handle_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>cuda.h</label>
      </node>
      <node id="25">
        <label>mutex</label>
      </node>
      <node id="21">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="32">
        <label>chrono</label>
      </node>
      <node id="14">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>nccl.h</label>
      </node>
      <node id="18">
        <label>nvshmemx.h</label>
      </node>
      <node id="27">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
      <node id="34">
        <label>execinfo.h</label>
      </node>
      <node id="23">
        <label>cstring</label>
      </node>
      <node id="16">
        <label>nvshmem.h</label>
      </node>
      <node id="36">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="nvshmem__wholememory__bootstrap_8cpp_1a815417734d16b01955784db756ff1125" prot="public" static="yes" mutable="no">
        <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
        <definition>wholememory_comm_t bootstrap_comm</definition>
        <argsstring></argsstring>
        <name>bootstrap_comm</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" line="31" column="27" bodyfile="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="nvshmem__wholememory__bootstrap_8cpp_1ad7badb54059e932e626d150883a83bc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int bootstrap_wholememory_barrier</definition>
        <argsstring>(struct bootstrap_handle *handle)</argsstring>
        <name>bootstrap_wholememory_barrier</name>
        <param>
          <type>struct bootstrap_handle *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" line="33" column="12" bodyfile="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="nvshmem__wholememory__bootstrap_8cpp_1a22d2186d074a51059886f13b12fa7aee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int bootstrap_wholememory_allgather</definition>
        <argsstring>(const void *sendbuf, void *recvbuf, int length, struct bootstrap_handle *handle)</argsstring>
        <name>bootstrap_wholememory_allgather</name>
        <param>
          <type>const void *</type>
          <declname>sendbuf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>struct bootstrap_handle *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" line="39" column="12" bodyfile="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="nvshmem__wholememory__bootstrap_8cpp_1a3423de6a081556dfaf38b9bbbc275503" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int bootstrap_wholememory_alltoall</definition>
        <argsstring>(const void *sendbuf, void *recvbuf, int length, struct bootstrap_handle *handle)</argsstring>
        <name>bootstrap_wholememory_alltoall</name>
        <param>
          <type>const void *</type>
          <declname>sendbuf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>struct bootstrap_handle *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" line="49" column="12" bodyfile="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="nvshmem__wholememory__bootstrap_8cpp_1a3cf5f122c414f554fb90f0a976234ec7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void bootstrap_wholememory_global_exit</definition>
        <argsstring>(int status)</argsstring>
        <name>bootstrap_wholememory_global_exit</name>
        <param>
          <type>int</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" line="58" column="13" bodyfile="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="nvshmem__wholememory__bootstrap_8cpp_1ab49e5c62c4892cfcb1944cf8b5bddd16" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int bootstrap_wholememory_finalize</definition>
        <argsstring>(bootstrap_handle_t *handle)</argsstring>
        <name>bootstrap_wholememory_finalize</name>
        <param>
          <type>bootstrap_handle_t *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" line="68" column="12" bodyfile="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="nvshmem__wholememory__bootstrap_8cpp_1ad9d12a14277988b35dad5b4fe046d695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nvshmemi_bootstrap_plugin_init</definition>
        <argsstring>(void *wholememory_comm, bootstrap_handle_t *handle, const int abi_version)</argsstring>
        <name>nvshmemi_bootstrap_plugin_init</name>
        <param>
          <type>void *</type>
          <declname>wholememory_comm</declname>
        </param>
        <param>
          <type>bootstrap_handle_t *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>abi_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" line="74" column="5" bodyfile="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp" bodystart="74" bodyend="102"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvshmem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvshmemi_bootstrap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvshmemx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="communicator_8hpp" kindref="compound">wholememory/communicator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="initialize_8hpp" kindref="compound">wholememory/initialize.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="memory__handle_8hpp" kindref="compound">wholememory/memory_handle.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wholememory_8h" kindref="compound">wholememory/wholememory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extern<sp/>bool<sp/>nvshmemi_is_nvshmem_bootstrapped;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>bootstrap_comm<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bootstrap_wholememory_barrier(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bootstrap_handle*<sp/>handle)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>bootstrap_comm-&gt;<ref refid="structwholememory__comm___1a58ad310a4836696213a8fe2beb7bba06" kindref="member">barrier</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bootstrap_wholememory_allgather(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bootstrap_handle*<sp/>handle)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>bootstrap_comm-&gt;<ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">host_allgather</ref>(sendbuf,<sp/>recvbuf,<sp/>length,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bootstrap_wholememory_alltoall(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>bootstrap_handle*<sp/>handle)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>bootstrap_comm-&gt;<ref refid="structwholememory__comm___1a99d0e19b865e6e8e01536f5772188a0f" kindref="member">host_alltoall</ref>(sendbuf,<sp/>recvbuf,<sp/>length,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>bootstrap_wholememory_global_exit(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>bootstrap_comm-&gt;<ref refid="structwholememory__comm___1ad247edc8f1d4bcb461c0b91bc024fe1f" kindref="member">abort</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;bootstrap_comm-&gt;abort()<sp/>failed<sp/>,<sp/>error:%s\n&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::exit(1);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bootstrap_wholememory_finalize(bootstrap_handle_t*<sp/>handle)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2af2acb13945f12e60c989bc7e7d433fba" kindref="member">WHOLEMEMORY_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nvshmem__wholememory__bootstrap_8cpp_1ad9d12a14277988b35dad5b4fe046d695" kindref="member">nvshmemi_bootstrap_plugin_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>wholememory_comm,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bootstrap_handle_t*<sp/>handle,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abi_version)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>0,<sp/>initialized<sp/>=<sp/>0,<sp/>finalized<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>src_comm;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bootstrap_version<sp/>=<sp/>NVSHMEMI_BOOTSTRAP_ABI_VERSION;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1af59b2af87c5d45e0543be49eb5afe262" kindref="member">WHOLEMEMORY_EXPECTS</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>nvshmemi_is_bootstrap_compatible(bootstrap_version,<sp/>abi_version),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WholeMemory<sp/>bootstrap<sp/>version<sp/>(%d)<sp/>is<sp/>not<sp/>compatible<sp/>with<sp/>NVSHMEM<sp/>version<sp/>(%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>bootstrap_version,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>abi_version);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1af59b2af87c5d45e0543be49eb5afe262" kindref="member">WHOLEMEMORY_EXPECTS</ref>((wholememory_comm<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>wholememory_comm<sp/>!=<sp/>NULL),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WholeMemory<sp/>bootstrap<sp/>wholememory_comm<sp/>should<sp/>not<sp/>==<sp/>nullptr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>src_comm<sp/>=<sp/>*((<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref>*)wholememory_comm);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>bootstrap_comm<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>src_comm;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>handle-&gt;pg_rank<sp/><sp/><sp/><sp/><sp/>=<sp/>src_comm-&gt;<ref refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" kindref="member">world_rank</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>handle-&gt;pg_size<sp/><sp/><sp/><sp/><sp/>=<sp/>src_comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>handle-&gt;allgather<sp/><sp/><sp/>=<sp/>bootstrap_wholememory_allgather;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>handle-&gt;alltoall<sp/><sp/><sp/><sp/>=<sp/>bootstrap_wholememory_alltoall;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>handle-&gt;barrier<sp/><sp/><sp/><sp/><sp/>=<sp/>bootstrap_wholememory_barrier;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>handle-&gt;global_exit<sp/>=<sp/>bootstrap_wholememory_global_exit;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>handle-&gt;finalize<sp/><sp/><sp/><sp/>=<sp/>bootstrap_wholememory_finalize;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp"/>
  </compounddef>
</doxygen>
