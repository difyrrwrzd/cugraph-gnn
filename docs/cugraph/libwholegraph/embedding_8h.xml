<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="embedding_8h" kind="file" language="C++">
    <compoundname>embedding.h</compoundname>
    <includes refid="env__func__ptrs_8h" local="no">wholememory/env_func_ptrs.h</includes>
    <includes refid="wholememory__tensor_8h" local="no">wholememory/wholememory_tensor.h</includes>
    <includedby refid="embedding_8cpp" local="no">src/wholememory/embedding.cpp</includedby>
    <includedby refid="embedding_8hpp" local="no">src/wholememory/embedding.hpp</includedby>
    <includedby refid="embedding__cache_8hpp" local="no">src/wholememory/embedding_cache.hpp</includedby>
    <includedby refid="embedding__optimizer_8hpp" local="no">src/wholememory/embedding_optimizer.hpp</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>wholememory/env_func_ptrs.h</label>
        <link refid="env__func__ptrs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>unistd.h</label>
      </node>
      <node id="1">
        <label>include/wholememory/embedding.h</label>
        <link refid="embedding_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>wholememory/wholememory_tensor.h</label>
        <link refid="wholememory__tensor_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="11">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>src/wholememory/embedding_optimizer.hpp</label>
        <link refid="embedding__optimizer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/wholememory/embedding.hpp</label>
        <link refid="embedding_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/wholememory/embedding_optimizer.cpp</label>
        <link refid="embedding__optimizer_8cpp"/>
      </node>
      <node id="2">
        <label>src/wholememory/embedding.cpp</label>
        <link refid="embedding_8cpp"/>
      </node>
      <node id="6">
        <label>src/wholememory/embedding_cache.cpp</label>
        <link refid="embedding__cache_8cpp"/>
      </node>
      <node id="1">
        <label>include/wholememory/embedding.h</label>
        <link refid="embedding_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/wholememory_ops/functions/embedding_cache_func.h</label>
        <link refid="embedding__cache__func_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/wholememory/embedding_cache.hpp</label>
        <link refid="embedding__cache_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27a" prot="public" static="no" strong="no">
        <type></type>
        <name>wholememory_access_type_t</name>
        <enumvalue id="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aa75e30178dd858079e4dc174e5faa7089" prot="public">
          <name>WHOLEMEMORY_AT_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Not defined </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aad216025260dc818463c93e46939b1236" prot="public">
          <name>WHOLEMEMORY_AT_READONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Only have readonly access to the WholeMemory </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aa9c0d3d12600c40529b7dfd8ce9718672" prot="public">
          <name>WHOLEMEMORY_AT_READWRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>May have write access to the WholeMemory </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>defines access type of WholeMemory Embedding </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="50" column="1" bodyfile="include/wholememory/embedding.h" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cf" prot="public" static="no" strong="no">
        <type></type>
        <name>wholememory_optimizer_type_t</name>
        <enumvalue id="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa852bce75b10790bf12c12b842a0ce30c" prot="public">
          <name>WHOLEMEMORY_OPT_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No optimizer needed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa6c514157afa87ce0f52697f1084a937c" prot="public">
          <name>WHOLEMEMORY_OPT_SGD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use SGD optimizer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfab9302921b184718f9f8d618f47dc26d5" prot="public">
          <name>WHOLEMEMORY_OPT_LAZY_ADAM</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use Lazy Adam optimizer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa83fa4b240dfce5c0b36ee1b15f15e927" prot="public">
          <name>WHOLEMEMORY_OPT_RMSPROP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use RMSProp optimizer </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa5da22328b94fde663df28a5cea1048e3" prot="public">
          <name>WHOLEMEMORY_OPT_ADAGRAD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use AdaGrad optimizer </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>defines optimizer type for WholeMemory Embedding </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="60" column="1" bodyfile="include/wholememory/embedding.h" bodystart="60" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="embedding_8h_1a67a8a8c30b88db9d9d505115cfe53d0d" prot="public" static="no">
        <type>struct <ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_</ref> *</type>
        <definition>typedef struct wholememory_embedding_cache_policy_* wholememory_embedding_cache_policy_t</definition>
        <argsstring></argsstring>
        <name>wholememory_embedding_cache_policy_t</name>
        <briefdescription>
<para>Opaque handle to WholeMemory Embedding Cache Policy. </para>
        </briefdescription>
        <detaileddescription>
<para>An Opaque handle to WholeMemory Embedding Cache Policy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="30" column="51" bodyfile="include/wholememory/embedding.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="embedding_8h_1a35feb5c3fa89c1bed12e5c698499df19" prot="public" static="no">
        <type>struct <ref refid="structwholememory__embedding__optimizer__" kindref="compound">wholememory_embedding_optimizer_</ref> *</type>
        <definition>typedef struct wholememory_embedding_optimizer_* wholememory_embedding_optimizer_t</definition>
        <argsstring></argsstring>
        <name>wholememory_embedding_optimizer_t</name>
        <briefdescription>
<para>Opaque handle to WholeMemory Embedding Optimizer. </para>
        </briefdescription>
        <detaileddescription>
<para>An Opaque handle to WholeMemory Embedding Optimizer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="37" column="48" bodyfile="include/wholememory/embedding.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" prot="public" static="no">
        <type>struct <ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_</ref> *</type>
        <definition>typedef struct wholememory_embedding_* wholememory_embedding_t</definition>
        <argsstring></argsstring>
        <name>wholememory_embedding_t</name>
        <briefdescription>
<para>Opaque handle to WholeMemory Embedding. </para>
        </briefdescription>
        <detaileddescription>
<para>An Opaque handle to WholeMemory Embedding </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="44" column="38" bodyfile="include/wholememory/embedding.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="embedding_8h_1a50e7a4ae00a12ba2c5fe8709ecb1fb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_create_embedding_optimizer</definition>
        <argsstring>(wholememory_embedding_optimizer_t *optimizer, wholememory_optimizer_type_t optimizer_type)</argsstring>
        <name>wholememory_create_embedding_optimizer</name>
        <param>
          <type><ref refid="embedding_8h_1a35feb5c3fa89c1bed12e5c698499df19" kindref="member">wholememory_embedding_optimizer_t</ref> *</type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cf" kindref="member">wholememory_optimizer_type_t</ref></type>
          <declname>optimizer_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create Optimizer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>: Returned wholememory_embedding_optimizer_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer_type</parametername>
</parameternamelist>
<parameterdescription>
<para>: Optimizer type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="74" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="832" bodyend="836" declfile="include/wholememory/embedding.h" declline="74" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a4734456b52782e5782a18a2cd43ac4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_optimizer_set_parameter</definition>
        <argsstring>(wholememory_embedding_optimizer_t optimizer, const char *parameter_name, void *value)</argsstring>
        <name>wholememory_optimizer_set_parameter</name>
        <param>
          <type><ref refid="embedding_8h_1a35feb5c3fa89c1bed12e5c698499df19" kindref="member">wholememory_embedding_optimizer_t</ref></type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameter_name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set parameter for optimizer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>: Optimizer to set parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter_name</parametername>
</parameternamelist>
<parameterdescription>
<para>: parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>: parameter value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="84" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="838" bodyend="842" declfile="include/wholememory/embedding.h" declline="84" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a1ba9059608aa497ff6a1d12880a48a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory_destroy_embedding_optimizer</definition>
        <argsstring>(wholememory_embedding_optimizer_t optimizer)</argsstring>
        <name>wholememory_destroy_embedding_optimizer</name>
        <param>
          <type><ref refid="embedding_8h_1a35feb5c3fa89c1bed12e5c698499df19" kindref="member">wholememory_embedding_optimizer_t</ref></type>
          <declname>optimizer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy optimizer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>: optimizer to destroy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="91" column="6" bodyfile="src/wholememory/embedding.cpp" bodystart="844" bodyend="847" declfile="include/wholememory/embedding.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a2b11328bd4f61a2b0c64e06ee2256fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_create_embedding_cache_policy</definition>
        <argsstring>(wholememory_embedding_cache_policy_t *cache_policy, wholememory_comm_t cache_level_comm, wholememory_memory_type_t memory_type, wholememory_memory_location_t memory_location, wholememory_access_type_t access_type, float cache_ratio)</argsstring>
        <name>wholememory_create_embedding_cache_policy</name>
        <param>
          <type><ref refid="embedding_8h_1a67a8a8c30b88db9d9d505115cfe53d0d" kindref="member">wholememory_embedding_cache_policy_t</ref> *</type>
          <declname>cache_policy</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>cache_level_comm</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref></type>
          <declname>memory_type</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref></type>
          <declname>memory_location</declname>
        </param>
        <param>
          <type><ref refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27a" kindref="member">wholememory_access_type_t</ref></type>
          <declname>access_type</declname>
        </param>
        <param>
          <type>float</type>
          <declname>cache_ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create WholeMemory Embedding Cache Policy <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cache_policy</parametername>
</parameternamelist>
<parameterdescription>
<para>: Returned wholememory_embedding_cache_policy_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_level_comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: At which level to cache the full embedding. In most cases it should be same as wholememory_embedding_t&apos;s comm. If access_type is WHOLEMEMORY_AT_READONLY, it can be different for multiple readonly caches. E.g. for a multi-node WHOLEMEMORY_MT_DISTRIBUTED WHOLEMEMORY_AT_READONLY embedding, it can have a intra-node WHOLEMEMORY_MT_CHUNKED cache. or a multi-node WHOLEMEMORY_MT_DISTRIBUTED cache. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_type</parametername>
</parameternamelist>
<parameterdescription>
<para>: Memory Type of the underlying WholeMemory for cache </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_location</parametername>
</parameternamelist>
<parameterdescription>
<para>: Memory Location of the underlying WholeMemory for cache </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>access_type</parametername>
</parameternamelist>
<parameterdescription>
<para>: ReadOnly or ReadWrite </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>: suggested cache ratio, values should be in range [1.0 / 512, 1.0] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="107" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="849" bodyend="869" declfile="include/wholememory/embedding.h" declline="107" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a02db48656dd2c2103a3dfb0008884495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_destroy_embedding_cache_policy</definition>
        <argsstring>(wholememory_embedding_cache_policy_t cache_policy)</argsstring>
        <name>wholememory_destroy_embedding_cache_policy</name>
        <param>
          <type><ref refid="embedding_8h_1a67a8a8c30b88db9d9d505115cfe53d0d" kindref="member">wholememory_embedding_cache_policy_t</ref></type>
          <declname>cache_policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy WholeMemory Embedding Cache Policy <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cache_policy</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding Cache Policy to destroy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="120" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="871" bodyend="876" declfile="include/wholememory/embedding.h" declline="120" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1ad19a4ccf645e78622067f49a38f76c79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_create_embedding</definition>
        <argsstring>(wholememory_embedding_t *wholememory_embedding, wholememory_tensor_description_t *embedding_tensor_description, wholememory_comm_t comm, wholememory_memory_type_t memory_type, wholememory_memory_location_t memory_location, wholememory_embedding_optimizer_t optimizer, wholememory_embedding_cache_policy_t cache_policy, int user_defined_sms=-1, int round_robin_size=0)</argsstring>
        <name>wholememory_create_embedding</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref> *</type>
          <declname>wholememory_embedding</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref> *</type>
          <declname>embedding_tensor_description</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref></type>
          <declname>memory_type</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref></type>
          <declname>memory_location</declname>
        </param>
        <param>
          <type><ref refid="embedding_8h_1a35feb5c3fa89c1bed12e5c698499df19" kindref="member">wholememory_embedding_optimizer_t</ref></type>
          <declname>optimizer</declname>
        </param>
        <param>
          <type><ref refid="embedding_8h_1a67a8a8c30b88db9d9d505115cfe53d0d" kindref="member">wholememory_embedding_cache_policy_t</ref></type>
          <declname>cache_policy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>user_defined_sms</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>round_robin_size</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create WholeMemory Embedding <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: Returned wholememory_embedding_t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>embedding_tensor_description</parametername>
</parameternamelist>
<parameterdescription>
<para>: Description of the embedding, sizes and dtype used, stride and storage_offset ignored. Must be matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Communicator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_type</parametername>
</parameternamelist>
<parameterdescription>
<para>: Memory Type of the underlying WholeMemory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>memory_location</parametername>
</parameternamelist>
<parameterdescription>
<para>: Memory Location of the underlying WholeMemory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>optimizer</parametername>
</parameternamelist>
<parameterdescription>
<para>: Optimizer to use for training, if don&apos;t train embedding, use nullptr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cache_policy</parametername>
</parameternamelist>
<parameterdescription>
<para>: Cache policy for this embedding, if don&apos;t use cache, use nullptr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_defined_sms</parametername>
</parameternamelist>
<parameterdescription>
<para>: User-defined sms number for raw embedding gather/scatter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>round_robin_size</parametername>
</parameternamelist>
<parameterdescription>
<para>: continuous embedding size in each rank under round-robin shard mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="137" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="878" bodyend="959" declfile="include/wholememory/embedding.h" declline="137" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a076cd52dd1e61a381a88c65f4f4b7d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_destroy_embedding</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding)</argsstring>
        <name>wholememory_destroy_embedding</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy WholeMemory Embedding <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding to destroy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="153" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="961" bodyend="968" declfile="include/wholememory/embedding.h" declline="153" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a21af0007a961d1209e5970013a39aa64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
        <definition>wholememory_tensor_t wholememory_embedding_get_embedding_tensor</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding)</argsstring>
        <name>wholememory_embedding_get_embedding_tensor</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get WholeMemory Tensor from WholeMemory Embedding. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: WholeMemory Tensor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="161" column="22" bodyfile="src/wholememory/embedding.cpp" bodystart="1032" bodyend="1038" declfile="include/wholememory/embedding.h" declline="161" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1ab71a41f8c25c7bbb4fed39e5f1a2f0bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_embedding_gather</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding, wholememory_tensor_t indices, wholememory_tensor_t output, bool adjust_cache, wholememory_env_func_t *p_env_fns, int64_t stream_int)</argsstring>
        <name>wholememory_embedding_gather</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>adjust_cache</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref> *</type>
          <declname>p_env_fns</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stream_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gather from WholeMemory Embedding <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>: indices to gather </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>: output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adjust_cache</parametername>
</parameternamelist>
<parameterdescription>
<para>: if we should adjust cache in this gather </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_env_fns</parametername>
</parameternamelist>
<parameterdescription>
<para>: env fns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_int</parametername>
</parameternamelist>
<parameterdescription>
<para>: CUDA stream to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="174" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="970" bodyend="998" declfile="include/wholememory/embedding.h" declline="174" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1adf752936df6da954166350eef113fb81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_embedding_gather_gradient_apply</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding, wholememory_tensor_t indices, wholememory_tensor_t grads, bool adjust_cache, float lr, wholememory_env_func_t *p_env_fns, int64_t stream_int)</argsstring>
        <name>wholememory_embedding_gather_gradient_apply</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>grads</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>adjust_cache</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lr</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref> *</type>
          <declname>p_env_fns</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stream_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gather backward for WholeMemory Embedding <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indices</parametername>
</parameternamelist>
<parameterdescription>
<para>: indices to gather </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>grads</parametername>
</parameternamelist>
<parameterdescription>
<para>: gradient of output tensor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>adjust_cache</parametername>
</parameternamelist>
<parameterdescription>
<para>: if we should adjust cache in this gather </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lr</parametername>
</parameternamelist>
<parameterdescription>
<para>: learning rate of current step. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_env_fns</parametername>
</parameternamelist>
<parameterdescription>
<para>: env fns </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_int</parametername>
</parameternamelist>
<parameterdescription>
<para>: CUDA stream to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="192" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="1000" bodyend="1030" declfile="include/wholememory/embedding.h" declline="192" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1aa21a933804cdd10e9c5ae8460635d977" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *const  *</type>
        <definition>const char* const* wholememory_embedding_get_optimizer_state_names</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding)</argsstring>
        <name>wholememory_embedding_get_optimizer_state_names</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get optimizer internal state names <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: nullptr terminated names. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="206" column="18" bodyfile="src/wholememory/embedding.cpp" bodystart="1040" bodyend="1046" declfile="include/wholememory/embedding.h" declline="206" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a37110816fc0f601688290f6612d14d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
        <definition>wholememory_tensor_t wholememory_embedding_get_optimizer_state</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding, const char *name)</argsstring>
        <name>wholememory_embedding_get_optimizer_state</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get optimizer internal state <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>: state name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: internal state, nullptr for not exist. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="215" column="22" bodyfile="src/wholememory/embedding.cpp" bodystart="1048" bodyend="1054" declfile="include/wholememory/embedding.h" declline="215" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1a95f88a538f030788e6e9b9d4c2041386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_embedding_writeback_cache</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding, int64_t stream_int)</argsstring>
        <name>wholememory_embedding_writeback_cache</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stream_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writeback all cache WholeMemory Embedding <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_int</parametername>
</parameternamelist>
<parameterdescription>
<para>: CUDA stream to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="224" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="1056" bodyend="1062" declfile="include/wholememory/embedding.h" declline="224" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="embedding_8h_1ac998cc845d0bc048c9bb5cadfb75c73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholememory_embedding_drop_all_cache</definition>
        <argsstring>(wholememory_embedding_t wholememory_embedding, int64_t stream_int)</argsstring>
        <name>wholememory_embedding_drop_all_cache</name>
        <param>
          <type><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref></type>
          <declname>wholememory_embedding</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stream_int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop all cache in WholeMemory Embedding <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wholememory_embedding</parametername>
</parameternamelist>
<parameterdescription>
<para>: WholeMemory Embedding </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_int</parametername>
</parameternamelist>
<parameterdescription>
<para>: CUDA stream to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/wholememory/embedding.h" line="233" column="26" bodyfile="src/wholememory/embedding.cpp" bodystart="1064" bodyend="1069" declfile="include/wholememory/embedding.h" declline="233" declcolumn="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="env__func__ptrs_8h" kindref="compound">wholememory/env_func_ptrs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wholememory__tensor_8h" kindref="compound">wholememory/wholememory_tensor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="embedding_8h_1a67a8a8c30b88db9d9d505115cfe53d0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_</ref>*<sp/><ref refid="embedding_8h_1a67a8a8c30b88db9d9d505115cfe53d0d" kindref="member">wholememory_embedding_cache_policy_t</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="embedding_8h_1a35feb5c3fa89c1bed12e5c698499df19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__embedding__optimizer__" kindref="compound">wholememory_embedding_optimizer_</ref>*<sp/><ref refid="embedding_8h_1a35feb5c3fa89c1bed12e5c698499df19" kindref="member">wholememory_embedding_optimizer_t</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_</ref>*<sp/><ref refid="embedding_8h_1a3759c6f27fc010503ec53e74847d6f71" kindref="member">wholememory_embedding_t</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27a" kindref="member">wholememory_access_type_t</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aa75e30178dd858079e4dc174e5faa7089" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aa75e30178dd858079e4dc174e5faa7089" kindref="member">WHOLEMEMORY_AT_NONE</ref><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="52" refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aad216025260dc818463c93e46939b1236" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aad216025260dc818463c93e46939b1236" kindref="member">WHOLEMEMORY_AT_READONLY</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aa9c0d3d12600c40529b7dfd8ce9718672" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27aa9c0d3d12600c40529b7dfd8ce9718672" kindref="member">WHOLEMEMORY_AT_READWRITE</ref>,<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cf" kindref="member">wholememory_optimizer_type_t</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa852bce75b10790bf12c12b842a0ce30c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa852bce75b10790bf12c12b842a0ce30c" kindref="member">WHOLEMEMORY_OPT_NONE</ref><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa6c514157afa87ce0f52697f1084a937c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa6c514157afa87ce0f52697f1084a937c" kindref="member">WHOLEMEMORY_OPT_SGD</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfab9302921b184718f9f8d618f47dc26d5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfab9302921b184718f9f8d618f47dc26d5" kindref="member">WHOLEMEMORY_OPT_LAZY_ADAM</ref>,<sp/></highlight></codeline>
<codeline lineno="64" refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa83fa4b240dfce5c0b36ee1b15f15e927" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa83fa4b240dfce5c0b36ee1b15f15e927" kindref="member">WHOLEMEMORY_OPT_RMSPROP</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa5da22328b94fde663df28a5cea1048e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cfa5da22328b94fde663df28a5cea1048e3" kindref="member">WHOLEMEMORY_OPT_ADAGRAD</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1a50e7a4ae00a12ba2c5fe8709ecb1fb14" kindref="member">wholememory_create_embedding_optimizer</ref>(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__optimizer__" kindref="compound">wholememory_embedding_optimizer_t</ref>*<sp/><ref refid="structwholememory__embedding___1a2133505171fd0e4bea9a567d1961ccaf" kindref="member">optimizer</ref>,<sp/><ref refid="embedding_8h_1a550f5f2bdfbd3fcccb8d357e555451cf" kindref="member">wholememory_optimizer_type_t</ref><sp/>optimizer_type);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1a4734456b52782e5782a18a2cd43ac4d1" kindref="member">wholememory_optimizer_set_parameter</ref>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__optimizer__" kindref="compound">wholememory_embedding_optimizer_t</ref><sp/><ref refid="structwholememory__embedding___1a2133505171fd0e4bea9a567d1961ccaf" kindref="member">optimizer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>parameter_name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>value);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="embedding_8h_1a1ba9059608aa497ff6a1d12880a48a95" kindref="member">wholememory_destroy_embedding_optimizer</ref>(<ref refid="structwholememory__embedding__optimizer__" kindref="compound">wholememory_embedding_optimizer_t</ref><sp/><ref refid="structwholememory__embedding___1a2133505171fd0e4bea9a567d1961ccaf" kindref="member">optimizer</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1a2b11328bd4f61a2b0c64e06ee2256fef" kindref="member">wholememory_create_embedding_cache_policy</ref>(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_t</ref>*<sp/><ref refid="structwholememory__embedding___1a6106fbe92781e1df2d11613428580c04" kindref="member">cache_policy</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>cache_level_comm,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="embedding_8h_1ae44b3c6add27a9ccc2b663994860c27a" kindref="member">wholememory_access_type_t</ref><sp/>access_type,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cache_ratio);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1a02db48656dd2c2103a3dfb0008884495" kindref="member">wholememory_destroy_embedding_cache_policy</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_t</ref><sp/><ref refid="structwholememory__embedding___1a6106fbe92781e1df2d11613428580c04" kindref="member">cache_policy</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1ad19a4ccf645e78622067f49a38f76c79" kindref="member">wholememory_create_embedding</ref>(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref>*<sp/>wholememory_embedding,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>embedding_tensor_description,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__optimizer__" kindref="compound">wholememory_embedding_optimizer_t</ref><sp/><ref refid="structwholememory__embedding___1a2133505171fd0e4bea9a567d1961ccaf" kindref="member">optimizer</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__cache__policy__" kindref="compound">wholememory_embedding_cache_policy_t</ref><sp/><ref refid="structwholememory__embedding___1a6106fbe92781e1df2d11613428580c04" kindref="member">cache_policy</ref>,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>user_defined_sms<sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>round_robin_size<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1a076cd52dd1e61a381a88c65f4f4b7d5d" kindref="member">wholememory_destroy_embedding</ref>(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/><ref refid="embedding_8h_1a21af0007a961d1209e5970013a39aa64" kindref="member">wholememory_embedding_get_embedding_tensor</ref>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1ab71a41f8c25c7bbb4fed39e5f1a2f0bd" kindref="member">wholememory_embedding_gather</ref>(<ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>indices,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>output,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjust_cache,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref>*<sp/>p_env_fns,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>stream_int);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1adf752936df6da954166350eef113fb81" kindref="member">wholememory_embedding_gather_gradient_apply</ref>(</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>indices,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>grads,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>adjust_cache,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lr,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref>*<sp/>p_env_fns,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>int64_t<sp/>stream_int);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/><ref refid="embedding_8h_1aa21a933804cdd10e9c5ae8460635d977" kindref="member">wholememory_embedding_get_optimizer_state_names</ref>(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/><ref refid="embedding_8h_1a37110816fc0f601688290f6612d14d8d" kindref="member">wholememory_embedding_get_optimizer_state</ref>(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1a95f88a538f030788e6e9b9d4c2041386" kindref="member">wholememory_embedding_writeback_cache</ref>(</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding,<sp/>int64_t<sp/>stream_int);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="embedding_8h_1ac998cc845d0bc048c9bb5cadfb75c73b" kindref="member">wholememory_embedding_drop_all_cache</ref>(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__embedding__" kindref="compound">wholememory_embedding_t</ref><sp/>wholememory_embedding,<sp/>int64_t<sp/>stream_int);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/wholememory/embedding.h"/>
  </compounddef>
</doxygen>
