<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classwholememory__ops_1_1wm__thrust__allocator" kind="class" language="C++" prot="public">
    <compoundname>wholememory_ops::wm_thrust_allocator</compoundname>
    <includes refid="thrust__allocator_8hpp" local="no">thrust_allocator.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classwholememory__ops_1_1wm__thrust__allocator_1a027398ad44435981b77d3c22d4b0ee32" prot="public" static="no">
        <type>char</type>
        <definition>using wholememory_ops::wm_thrust_allocator::value_type =  char</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="26" column="3" bodyfile="src/wholememory_ops/thrust_allocator.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classwholememory__ops_1_1wm__thrust__allocator_1a4256cb33e46ca42f0e6c1e38b7ef8c3e" prot="public" static="no" mutable="no">
        <type><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref> *</type>
        <definition>wholememory_env_func_t* wholememory_ops::wm_thrust_allocator::fns</definition>
        <argsstring></argsstring>
        <name>fns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="35" column="26" bodyfile="src/wholememory_ops/thrust_allocator.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classwholememory__ops_1_1wm__thrust__allocator_1a890bc5f54b4ad072cb6e6351838d41ba" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="classwholememory__ops_1_1wm__thrust__allocator_1a027398ad44435981b77d3c22d4b0ee32" kindref="member">value_type</ref> *, void * &gt;</type>
        <definition>std::map&lt;value_type*, void*&gt; wholememory_ops::wm_thrust_allocator::mem_ptr_to_context_map</definition>
        <argsstring></argsstring>
        <name>mem_ptr_to_context_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="36" column="12" bodyfile="src/wholememory_ops/thrust_allocator.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwholememory__ops_1_1wm__thrust__allocator_1a49bb8f40216411f9ee1e46eda1b79e42" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>wholememory_ops::wm_thrust_allocator::wm_thrust_allocator</definition>
        <argsstring>(wholememory_env_func_t *fns)</argsstring>
        <name>wm_thrust_allocator</name>
        <param>
          <type><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref> *</type>
          <declname>fns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="27" column="12" bodyfile="src/wholememory_ops/thrust_allocator.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory__ops_1_1wm__thrust__allocator_1a86115ea42a901f055894e3a1e6eb76ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wholememory_ops::wm_thrust_allocator::wm_thrust_allocator</definition>
        <argsstring>()=delete</argsstring>
        <name>wm_thrust_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="28" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory__ops_1_1wm__thrust__allocator_1a990d9d8fd10d0a1367d6a11f15fced0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>wholememory_ops::wm_thrust_allocator::~wm_thrust_allocator</definition>
        <argsstring>()</argsstring>
        <name>~wm_thrust_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="29" column="3" bodyfile="src/wholememory_ops/thrust_allocator.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory__ops_1_1wm__thrust__allocator_1ac314ba4dd1d32c6dcd7fdb3a9929fc15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classwholememory__ops_1_1wm__thrust__allocator_1a027398ad44435981b77d3c22d4b0ee32" kindref="member">value_type</ref> *</type>
        <definition>wm_thrust_allocator::value_type * wholememory_ops::wm_thrust_allocator::allocate</definition>
        <argsstring>(std::ptrdiff_t mem_size)</argsstring>
        <name>allocate</name>
        <param>
          <type>std::ptrdiff_t</type>
          <declname>mem_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="31" column="14" bodyfile="src/wholememory_ops/thrust_allocator.cpp" bodystart="25" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory__ops_1_1wm__thrust__allocator_1aff16fd4109b14d99ee21f07b096dd33a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory_ops::wm_thrust_allocator::deallocate</definition>
        <argsstring>(value_type *p, size_t mem_size)</argsstring>
        <name>deallocate</name>
        <param>
          <type><ref refid="classwholememory__ops_1_1wm__thrust__allocator_1a027398ad44435981b77d3c22d4b0ee32" kindref="member">value_type</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mem_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="32" column="8" bodyfile="src/wholememory_ops/thrust_allocator.cpp" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory__ops_1_1wm__thrust__allocator_1a386bf8a6f43d6dd02d7900fa6015a013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory_ops::wm_thrust_allocator::deallocate_all</definition>
        <argsstring>()</argsstring>
        <name>deallocate_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory_ops/thrust_allocator.hpp" line="33" column="8" bodyfile="src/wholememory_ops/thrust_allocator.cpp" bodystart="52" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>wholememory_temp_memory_func_t</label>
        <link refid="structwholememory__temp__memory__func__t"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+malloc_fn</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>wholememory_output_memory_func_t</label>
        <link refid="structwholememory__output__memory__func__t"/>
        <childnode refid="4" relation="usage">
          <edgelabel>+malloc_fn</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wholememory_tensor_description_t</label>
        <link refid="structwholememory__tensor__description__t"/>
      </node>
      <node id="1">
        <label>wholememory_ops::wm_thrust_allocator</label>
        <link refid="classwholememory__ops_1_1wm__thrust__allocator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+fns</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>wholememory_env_func_t</label>
        <link refid="structwholememory__env__func__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+temporary_fns</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+output_fns</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/wholememory_ops/thrust_allocator.hpp" line="24" column="1" bodyfile="src/wholememory_ops/thrust_allocator.hpp" bodystart="24" bodyend="37"/>
    <listofallmembers>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1ac314ba4dd1d32c6dcd7fdb3a9929fc15" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>allocate</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1aff16fd4109b14d99ee21f07b096dd33a" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>deallocate</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1a386bf8a6f43d6dd02d7900fa6015a013" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>deallocate_all</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1a4256cb33e46ca42f0e6c1e38b7ef8c3e" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>fns</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1a890bc5f54b4ad072cb6e6351838d41ba" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>mem_ptr_to_context_map</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1a027398ad44435981b77d3c22d4b0ee32" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>value_type</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1a49bb8f40216411f9ee1e46eda1b79e42" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>wm_thrust_allocator</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1a86115ea42a901f055894e3a1e6eb76ef" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>wm_thrust_allocator</name></member>
      <member refid="classwholememory__ops_1_1wm__thrust__allocator_1a990d9d8fd10d0a1367d6a11f15fced0c" prot="public" virt="non-virtual"><scope>wholememory_ops::wm_thrust_allocator</scope><name>~wm_thrust_allocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
