<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="weighted__sample__without__replacement_8cpp" kind="file" language="C++">
    <compoundname>weighted_sample_without_replacement.cpp</compoundname>
    <includes refid="wholegraph__op_8h" local="no">wholememory/wholegraph_op.h</includes>
    <includes refid="weighted__sample__without__replacement__impl_8h" local="no">wholegraph_ops/weighted_sample_without_replacement_impl.h</includes>
    <includes refid="error_8hpp" local="yes">error.hpp</includes>
    <includes refid="logger_8hpp" local="yes">logger.hpp</includes>
    <incdepgraph>
      <node id="17">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="22">
        <label>cassert</label>
      </node>
      <node id="8">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>string</label>
      </node>
      <node id="19">
        <label>cstdarg</label>
      </node>
      <node id="12">
        <label>stddef.h</label>
      </node>
      <node id="18">
        <label>logger.hpp</label>
        <link refid="logger_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>wholememory/env_func_ptrs.h</label>
        <link refid="env__func__ptrs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>unistd.h</label>
      </node>
      <node id="14">
        <label>wholegraph_ops/weighted_sample_without_replacement_impl.h</label>
        <link refid="weighted__sample__without__replacement__impl_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>wholememory/wholememory_tensor.h</label>
        <link refid="wholememory__tensor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>cstdlib</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>wholememory/wholegraph_op.h</label>
        <link refid="wholegraph__op_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="11">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/wholegraph_ops/weighted_sample_without_replacement.cpp</label>
        <link refid="weighted__sample__without__replacement_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="weighted__sample__without__replacement_8cpp_1a1aea1705edba4342951ddf167c417098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t wholegraph_csr_weighted_sample_without_replacement</definition>
        <argsstring>(wholememory_tensor_t wm_csr_row_ptr_tensor, wholememory_tensor_t wm_csr_col_ptr_tensor, wholememory_tensor_t wm_csr_weight_ptr_tensor, wholememory_tensor_t center_nodes_tensor, int max_sample_count, wholememory_tensor_t output_sample_offset_tensor, void *output_dest_memory_context, void *output_center_localid_memory_context, void *output_edge_gid_memory_context, unsigned long long random_seed, wholememory_env_func_t *p_env_fns, void *stream)</argsstring>
        <name>wholegraph_csr_weighted_sample_without_replacement</name>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>wm_csr_row_ptr_tensor</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>wm_csr_col_ptr_tensor</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>wm_csr_weight_ptr_tensor</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>center_nodes_tensor</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_sample_count</declname>
        </param>
        <param>
          <type><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref></type>
          <declname>output_sample_offset_tensor</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output_dest_memory_context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output_center_localid_memory_context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output_edge_gid_memory_context</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>random_seed</declname>
        </param>
        <param>
          <type><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref> *</type>
          <declname>p_env_fns</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unweighted sample without replacement kernel op <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wm_csr_row_ptr_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>: Wholememory Tensor of graph csr_row_ptr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wm_csr_col_ptr_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>: Wholememory Tensor of graph csr_col_ptr </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wm_csr_weight_ptr_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>: Wholememory Tensor of graph edge weight </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>center_nodes_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>: None Wholememory Tensor of center node to sample </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_sample_count</parametername>
</parameternamelist>
<parameterdescription>
<para>: maximum sample count </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_sample_offset_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointer to output sample offset </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_dest_memory_context</parametername>
</parameternamelist>
<parameterdescription>
<para>: memory context to output dest nodes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_center_localid_memory_context</parametername>
</parameternamelist>
<parameterdescription>
<para>: memory context to output center local id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output_edge_gid_memory_context</parametername>
</parameternamelist>
<parameterdescription>
<para>: memory context to output edge global id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>random_seed</parametername>
</parameternamelist>
<parameterdescription>
<para>random number generator seed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_env_fns</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointers to environment functions. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>: CUDA stream to use </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>: wholememory_error_code_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholegraph_ops/weighted_sample_without_replacement.cpp" line="23" column="26" bodyfile="src/wholegraph_ops/weighted_sample_without_replacement.cpp" bodystart="23" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wholegraph__op_8h" kindref="compound">wholememory/wholegraph_op.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="weighted__sample__without__replacement__impl_8h" kindref="compound">wholegraph_ops/weighted_sample_without_replacement_impl.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8hpp" kindref="compound">error.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logger_8hpp" kindref="compound">logger.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="weighted__sample__without__replacement_8cpp_1a1aea1705edba4342951ddf167c417098" kindref="member">wholegraph_csr_weighted_sample_without_replacement</ref>(</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>wm_csr_row_ptr_tensor,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>wm_csr_col_ptr_tensor,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>wm_csr_weight_ptr_tensor,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>center_nodes_tensor,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_sample_count,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="wholememory__tensor_8h_1a27285cc111a63f4203830dcdef17e1d9" kindref="member">wholememory_tensor_t</ref><sp/>output_sample_offset_tensor,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output_dest_memory_context,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output_center_localid_memory_context,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output_edge_gid_memory_context,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>random_seed,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref>*<sp/>p_env_fns,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>stream)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>csr_row_ptr_has_handle<sp/>=<sp/><ref refid="wholememory__tensor_8h_1a8fd657162127ed32802f94e1b2ed348e" kindref="member">wholememory_tensor_has_handle</ref>(wm_csr_row_ptr_tensor);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>csr_row_ptr_memory_type<sp/>=<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4590b351fca36aa4365d26bec0be0ea8" kindref="member">WHOLEMEMORY_MT_NONE</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csr_row_ptr_has_handle)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>csr_row_ptr_memory_type<sp/>=</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a502d8b806342b9a8b50fde1eeeb9321f" kindref="member">wholememory_get_memory_type</ref>(<ref refid="wholememory__tensor_8h_1a098f2402daf29568bfb6678ef0a7eb5f" kindref="member">wholememory_tensor_get_memory_handle</ref>(wm_csr_row_ptr_tensor));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a0a6b9f1ea518c265ec96fadca0dfac4d" kindref="member">WHOLEMEMORY_EXPECTS_NOTHROW</ref>(!csr_row_ptr_has_handle<sp/>||</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csr_row_ptr_memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50acb4fa48855a5741ad8f7153dceb7665e" kindref="member">WHOLEMEMORY_MT_CHUNKED</ref><sp/>||</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csr_row_ptr_memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4c6ff55ce83b298a2945868ed19431c9" kindref="member">WHOLEMEMORY_MT_CONTINUOUS</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>type<sp/>not<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>csr_col_ptr_has_handle<sp/>=<sp/><ref refid="wholememory__tensor_8h_1a8fd657162127ed32802f94e1b2ed348e" kindref="member">wholememory_tensor_has_handle</ref>(wm_csr_col_ptr_tensor);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>csr_col_ptr_memory_type<sp/>=<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4590b351fca36aa4365d26bec0be0ea8" kindref="member">WHOLEMEMORY_MT_NONE</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csr_col_ptr_has_handle)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>csr_col_ptr_memory_type<sp/>=</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a502d8b806342b9a8b50fde1eeeb9321f" kindref="member">wholememory_get_memory_type</ref>(<ref refid="wholememory__tensor_8h_1a098f2402daf29568bfb6678ef0a7eb5f" kindref="member">wholememory_tensor_get_memory_handle</ref>(wm_csr_col_ptr_tensor));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a0a6b9f1ea518c265ec96fadca0dfac4d" kindref="member">WHOLEMEMORY_EXPECTS_NOTHROW</ref>(!csr_col_ptr_has_handle<sp/>||</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csr_col_ptr_memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50acb4fa48855a5741ad8f7153dceb7665e" kindref="member">WHOLEMEMORY_MT_CHUNKED</ref><sp/>||</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csr_col_ptr_memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4c6ff55ce83b298a2945868ed19431c9" kindref="member">WHOLEMEMORY_MT_CONTINUOUS</ref>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>type<sp/>not<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>csr_weight_ptr_has_handle<sp/>=<sp/><ref refid="wholememory__tensor_8h_1a8fd657162127ed32802f94e1b2ed348e" kindref="member">wholememory_tensor_has_handle</ref>(wm_csr_weight_ptr_tensor);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>csr_weight_ptr_memory_type<sp/>=<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4590b351fca36aa4365d26bec0be0ea8" kindref="member">WHOLEMEMORY_MT_NONE</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csr_weight_ptr_has_handle)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>csr_weight_ptr_memory_type<sp/>=</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a502d8b806342b9a8b50fde1eeeb9321f" kindref="member">wholememory_get_memory_type</ref>(<ref refid="wholememory__tensor_8h_1a098f2402daf29568bfb6678ef0a7eb5f" kindref="member">wholememory_tensor_get_memory_handle</ref>(wm_csr_weight_ptr_tensor));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="error_8hpp_1a0a6b9f1ea518c265ec96fadca0dfac4d" kindref="member">WHOLEMEMORY_EXPECTS_NOTHROW</ref>(!csr_weight_ptr_has_handle<sp/>||</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csr_weight_ptr_memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50acb4fa48855a5741ad8f7153dceb7665e" kindref="member">WHOLEMEMORY_MT_CHUNKED</ref><sp/>||</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csr_weight_ptr_memory_type<sp/>==<sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50a4c6ff55ce83b298a2945868ed19431c9" kindref="member">WHOLEMEMORY_MT_CONTINUOUS</ref>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>type<sp/>not<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>csr_row_ptr_tensor_description<sp/>=</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(wm_csr_row_ptr_tensor);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>csr_col_ptr_tensor_description<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(wm_csr_col_ptr_tensor);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>csr_weight_ptr_tensor_description<sp/>=</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(wm_csr_weight_ptr_tensor);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csr_row_ptr_tensor_description.dim<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;wm_csr_row_ptr_tensor<sp/>should<sp/>be<sp/>1D<sp/>tensor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csr_col_ptr_tensor_description.dim<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;wm_csr_col_ptr_tensor<sp/>should<sp/>be<sp/>1D<sp/>tensor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(csr_weight_ptr_tensor_description.dim<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;wm_csr_weight_ptr_tensor<sp/>should<sp/>be<sp/>1D<sp/>tensor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref><sp/>wm_csr_row_ptr_desc,<sp/>wm_csr_col_ptr_desc,<sp/>wm_csr_weight_ptr_desc;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="tensor__description_8h_1a4bd945e95a4bec4bc89251ed8827587f" kindref="member">wholememory_convert_tensor_desc_to_array</ref>(&amp;wm_csr_row_ptr_desc,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;csr_row_ptr_tensor_description))<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Input<sp/>wm_csr_row_ptr_tensor<sp/>convert<sp/>to<sp/>array<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="tensor__description_8h_1a4bd945e95a4bec4bc89251ed8827587f" kindref="member">wholememory_convert_tensor_desc_to_array</ref>(&amp;wm_csr_col_ptr_desc,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;csr_col_ptr_tensor_description))<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Input<sp/>wm_csr_col_ptr_tensor<sp/>convert<sp/>to<sp/>array<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="tensor__description_8h_1a4bd945e95a4bec4bc89251ed8827587f" kindref="member">wholememory_convert_tensor_desc_to_array</ref>(&amp;wm_csr_weight_ptr_desc,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;csr_weight_ptr_tensor_description))<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Input<sp/>wm_csr_weight_ptr_tensor<sp/>convert<sp/>to<sp/>array<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>center_nodes_tensor_desc<sp/>=</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(center_nodes_tensor);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(center_nodes_tensor_desc.<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Input<sp/>center_nodes_tensor<sp/>should<sp/>be<sp/>1D<sp/>tensor&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref><sp/>center_nodes_desc;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="tensor__description_8h_1a4bd945e95a4bec4bc89251ed8827587f" kindref="member">wholememory_convert_tensor_desc_to_array</ref>(&amp;center_nodes_desc,<sp/>&amp;center_nodes_tensor_desc))<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Input<sp/>center_nodes_tensor<sp/>convert<sp/>to<sp/>array<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>output_sample_offset_tensor_desc<sp/>=</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="wholememory__tensor_8h_1ae345b249eb4bac62cf8232e3d856f510" kindref="member">wholememory_tensor_get_tensor_description</ref>(output_sample_offset_tensor);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_sample_offset_tensor_desc.<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Output<sp/>output_sample_offset_tensor<sp/>should<sp/>be<sp/>1D<sp/>tensor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a990f7a173a52060ada366cc817eb6da8" kindref="member">WHOLEMEMORY_INVALID_INPUT</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__array__description__t" kindref="compound">wholememory_array_description_t</ref><sp/>output_sample_offset_desc;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="tensor__description_8h_1a4bd945e95a4bec4bc89251ed8827587f" kindref="member">wholememory_convert_tensor_desc_to_array</ref>(&amp;output_sample_offset_desc,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;output_sample_offset_tensor_desc))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logger_8hpp_1a34c74df9f1821c923aad87bc826c78d6" kindref="member">WHOLEMEMORY_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Output<sp/>output_sample_offset_tensor<sp/>convert<sp/>to<sp/>array<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2a695f0de6a56652e7c04f91aa28e7d1ce" kindref="member">WHOLEMEMORY_LOGIC_ERROR</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>center_nodes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="wholememory__tensor_8h_1a3f5f9937591864246e0673b0a0cf8db2" kindref="member">wholememory_tensor_get_data_pointer</ref>(center_nodes_tensor);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output_sample_offset<sp/>=<sp/><ref refid="wholememory__tensor_8h_1a3f5f9937591864246e0673b0a0cf8db2" kindref="member">wholememory_tensor_get_data_pointer</ref>(output_sample_offset_tensor);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__gref__t" kindref="compound">wholememory_gref_t</ref><sp/>wm_csr_row_ptr_gref,<sp/>wm_csr_col_ptr_gref,<sp/>wm_csr_weight_ptr_gref;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1a8de28a7ba7471883ba38b8ca33ed5001" kindref="member">wholememory_tensor_get_global_reference</ref>(wm_csr_row_ptr_tensor,<sp/>&amp;wm_csr_row_ptr_gref));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1a8de28a7ba7471883ba38b8ca33ed5001" kindref="member">wholememory_tensor_get_global_reference</ref>(wm_csr_col_ptr_tensor,<sp/>&amp;wm_csr_col_ptr_gref));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a5502d912a6793c7600a87a241798cf43" kindref="member">WHOLEMEMORY_RETURN_ON_FAIL</ref>(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wholememory__tensor_8h_1a8de28a7ba7471883ba38b8ca33ed5001" kindref="member">wholememory_tensor_get_global_reference</ref>(wm_csr_weight_ptr_tensor,<sp/>&amp;wm_csr_weight_ptr_gref));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewholegraph__ops_1aaac080810dd9cc21cf0833d9d4e3a678" kindref="member">wholegraph_ops::wholegraph_csr_weighted_sample_without_replacement_mapped</ref>(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>wm_csr_row_ptr_gref,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>wm_csr_row_ptr_desc,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>wm_csr_col_ptr_gref,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>wm_csr_col_ptr_desc,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>wm_csr_weight_ptr_gref,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>wm_csr_weight_ptr_desc,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>center_nodes,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>center_nodes_desc,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>max_sample_count,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>output_sample_offset,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>output_sample_offset_desc,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>output_dest_memory_context,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>output_center_localid_memory_context,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>output_edge_gid_memory_context,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>random_seed,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>p_env_fns,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">cudaStream_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(stream));</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/wholegraph_ops/weighted_sample_without_replacement.cpp"/>
  </compounddef>
</doxygen>
