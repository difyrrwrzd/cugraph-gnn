<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classwholememory_1_1global__mapped__host__wholememory__impl" kind="class" language="C++" prot="public">
    <compoundname>wholememory::global_mapped_host_wholememory_impl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">wholememory::wholememory_impl</basecompoundref>
    <innerclass refid="structwholememory_1_1global__mapped__host__wholememory__impl_1_1shared__host__handle" prot="protected">wholememory::global_mapped_host_wholememory_impl::shared_host_handle</innerclass>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a45b3fdfbb4d6324689df0c4e00f6bafd" prot="protected" static="no" mutable="no">
        <type>struct wholememory::global_mapped_host_wholememory_impl::shared_host_handle</type>
        <definition>struct wholememory::global_mapped_host_wholememory_impl::shared_host_handle wholememory::global_mapped_host_wholememory_impl::shared_host_handle_</definition>
        <argsstring></argsstring>
        <name>shared_host_handle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="581" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1aa27c3c62304cdb1cd879735a51a1ccb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>wholememory::global_mapped_host_wholememory_impl::global_mapped_host_wholememory_impl</definition>
        <argsstring>(wholememory_handle_t wholememory_handle, size_t total_size, wholememory_comm_t comm, wholememory_memory_type_t memory_type, wholememory_memory_location_t memory_location, size_t data_granularity)</argsstring>
        <name>global_mapped_host_wholememory_impl</name>
        <param>
          <type><ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref></type>
          <declname>wholememory_handle</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>total_size</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref></type>
          <declname>memory_type</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref></type>
          <declname>memory_location</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_granularity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="385" column="3" bodyfile="src/wholememory/memory_handle.cpp" bodystart="385" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a79ca4560e1e15daf7dd5ae8286c7a561" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory::global_mapped_host_wholememory_impl::create_memory</definition>
        <argsstring>() override</argsstring>
        <name>create_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="397" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="397" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a201a9277561531b6c2db99ed84e572de" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory::global_mapped_host_wholememory_impl::destroy_memory</definition>
        <argsstring>() noexcept override</argsstring>
        <name>destroy_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="404" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="404" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1ad9059c488b846da0f40b8ba185ecc24c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* wholememory::global_mapped_host_wholememory_impl::get_continuous_mapping_pointer</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>get_continuous_mapping_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="409" column="9" bodyfile="src/wholememory/memory_handle.cpp" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a9fc88fbf9f2ffb76060a4a140d8fbf5d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="structwholememory__gref__t" kindref="compound">wholememory_gref_t</ref></type>
        <definition>wholememory_gref_t wholememory::global_mapped_host_wholememory_impl::get_global_reference</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>get_global_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="413" column="23" bodyfile="src/wholememory/memory_handle.cpp" bodystart="413" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a58b1a0e6ab549f60ec7f564b6498e23a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory::global_mapped_host_wholememory_impl::contains_pointer</definition>
        <argsstring>(const void *ptr) const override</argsstring>
        <name>contains_pointer</name>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="420" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="420" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a0634ddf8fd2b6193cd50ca9397214f0b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool wholememory::global_mapped_host_wholememory_impl::get_rank_memory</definition>
        <argsstring>(void **rank_memory_ptr, size_t *rank_memory_size, size_t *rank_memory_offset, int rank) const noexcept override</argsstring>
        <name>get_rank_memory</name>
        <param>
          <type>void **</type>
          <declname>rank_memory_ptr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>rank_memory_size</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>rank_memory_offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="426" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="426" bodyend="438"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a91b50cec041fff6df93a44bc3a12bb72" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory::global_mapped_host_wholememory_impl::register_host_memory</definition>
        <argsstring>()</argsstring>
        <name>register_host_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="441" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="441" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a4b39b3163c29a53b738861c02f6ba369" prot="protected" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory::global_mapped_host_wholememory_impl::unregister_host_memory</definition>
        <argsstring>() noexcept</argsstring>
        <name>unregister_host_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="447" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="447" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a20686fff7e5b18b17d30872ef3976788" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory::global_mapped_host_wholememory_impl::create_and_map_shared_host_memory</definition>
        <argsstring>()</argsstring>
        <name>create_and_map_shared_host_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="461" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="461" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1ae5e40d9548b0daa830792c7be3556b23" prot="protected" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void wholememory::global_mapped_host_wholememory_impl::unmap_and_destroy_shared_host_memory</definition>
        <argsstring>() noexcept</argsstring>
        <name>unmap_and_destroy_shared_host_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="537" column="8" bodyfile="src/wholememory/memory_handle.cpp" bodystart="537" bodyend="577"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classwholememory_1_1global__mapped__host__wholememory__impl_1a8120513944877c5d79bfb7924148f068" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string wholememory::global_mapped_host_wholememory_impl::get_host_memory_full_path</definition>
        <argsstring>(wholememory_comm_t wm_comm, int tensor_id)</argsstring>
        <name>get_host_memory_full_path</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>wm_comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tensor_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/memory_handle.cpp" line="453" column="22" bodyfile="src/wholememory/memory_handle.cpp" bodystart="453" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>wholememory::global_mapped_host_wholememory_impl</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>wholememory::wholememory_impl</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>wholememory::wholememory_impl::partition_strategy</label>
      </node>
      <node id="5">
        <label>wholememory::nccl_comms</label>
        <link refid="classwholememory_1_1nccl__comms"/>
      </node>
      <node id="7">
        <label>wholememory::wholememory_impl::alloc_strategy</label>
      </node>
      <node id="8">
        <label>wholememory::global_mapped_host_wholememory_impl::shared_host_handle</label>
      </node>
      <node id="1">
        <label>wholememory::global_mapped_host_wholememory_impl</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#shared_host_handle_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>wholememory_comm_</label>
        <link refid="structwholememory__comm__"/>
        <childnode refid="5" relation="usage">
          <edgelabel>+raft_nccl_comm</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>wholememory::wholememory_impl</label>
        <childnode refid="3" relation="usage">
          <edgelabel>#rank_partition_strategy_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#comm_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#handle_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#alloc_strategy_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>wholememory_handle_</label>
        <link refid="structwholememory__handle__"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+impl</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/wholememory/memory_handle.cpp" line="383" column="1" bodyfile="src/wholememory/memory_handle.cpp" bodystart="383" bodyend="582"/>
    <listofallmembers>
      <member refid="classwholememory_1_1wholememory__impl_1a535a7cd1728a82a904c1f8ac55039137" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>alloc_strategy_</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1aec69b5c86796cbc0c86c1105cd9bd78a" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>comm_</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a58b1a0e6ab549f60ec7f564b6498e23a" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>contains_pointer</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a20686fff7e5b18b17d30872ef3976788" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>create_and_map_shared_host_memory</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a79ca4560e1e15daf7dd5ae8286c7a561" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>create_memory</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1af44274279b17a5385faa5415e6fb6f90" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>data_granularity</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a99e82034d18f9d088bc6d16912300994" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>data_granularity_</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a201a9277561531b6c2db99ed84e572de" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>destroy_memory</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a43add716feb99423b69f81a25d6ae468" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>distrubuted_backend_</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ae16dfb07309ba727a8c647cacb4c20cb" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>each_rank_multiple_page_strategy</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a5ffe99bcb552c188e511ec87f71dede7" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>each_rank_same_chunk_strategy</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ae41ec17d98c9e3bc13306b2837e23b35" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>first_rank_allocate_all_strategy</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ad3de8b07f76ad32c282c8c3d370e4db7" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>generate_rank_partition_strategy</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a077662ce53d112f6c9a26e6bf4681e8b" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_comm</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1ad9059c488b846da0f40b8ba185ecc24c" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_continuous_mapping_pointer</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ae340e64e372601f4c53eb91a7c94cd47" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_distributed_backend</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a9fc88fbf9f2ffb76060a4a140d8fbf5d" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_global_reference</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a8120513944877c5d79bfb7924148f068" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_host_memory_full_path</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1abb4bd9742bbc538f0a443d634d810054" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_local_memory</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ac9be7376b8da6a9050c3310657b4ff4f" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_location</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ac251ef0764048ba11c556d2d8af3aded" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_partition_stride</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a0634ddf8fd2b6193cd50ca9397214f0b" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_rank_memory</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1acd5b9ef51dbc8625081f100ad7b170eb" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_rank_partition_info</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a34e36686bcee8a009aacf512e0021d6b" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>get_type</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1aa27c3c62304cdb1cd879735a51a1ccb2" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>global_mapped_host_wholememory_impl</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ae69736b7ed3ca0504a3d45fa51b54082" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>handle_</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a9a2ce54b840ba26eec97434cc9562d46" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>HUGE_PAGE_SIZE</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a85074e2a1da83503338ed4e02df1f1e8" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>HUGE_PAGE_THRESHOLD</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a2b4e66dd1141d696fa76e62cd24457ed" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>local_partition_memory_pointer_</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ad57bf2c7cb7c22c5840445166dbb9904" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>location_</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a1092aa21db147607c63a43bfbe6790cd" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>rank_partition_strategy_</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a91b50cec041fff6df93a44bc3a12bb72" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>register_host_memory</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a45b3fdfbb4d6324689df0c4e00f6bafd" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>shared_host_handle_</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a1635bce254d6ca72d5c8ed72c72177db" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>total_size</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1ae33e835f549ef8d47cb505740e42bae9" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>total_size_</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1acee8dd8f2d942c909b3a8e3f14fc3183" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>type_</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1ae5e40d9548b0daa830792c7be3556b23" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>unmap_and_destroy_shared_host_memory</name></member>
      <member refid="classwholememory_1_1global__mapped__host__wholememory__impl_1a4b39b3163c29a53b738861c02f6ba369" prot="protected" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>unregister_host_memory</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1add2016c7032767abbb7293e06c6f2664" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>wholememory_impl</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a824076d2d7debf9bf15073e53bddac4c" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>wholememory_impl</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a8b03ac15f71d8f5f8fd63dfb8d078fd4" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>wholememory_impl</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1aa7f71ef66be6a89d87fedf729530caeb" prot="public" virt="non-virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>wholememory_impl</name></member>
      <member refid="classwholememory_1_1wholememory__impl_1a67f43bccb63fc4637fd5253d4c3df24c" prot="public" virt="virtual"><scope>wholememory::global_mapped_host_wholememory_impl</scope><name>~wholememory_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
