<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="communicator_8hpp" kind="file" language="C++">
    <compoundname>communicator.hpp</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">cuda_runtime_api.h</includes>
    <includes local="no">nccl.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">map</includes>
    <includes local="no">mutex</includes>
    <includes local="no">vector</includes>
    <includes refid="tensor__description_8h" local="no">wholememory/tensor_description.h</includes>
    <includes refid="wholememory_8h" local="no">wholememory/wholememory.h</includes>
    <includes refid="cuda__macros_8hpp" local="yes">cuda_macros.hpp</includes>
    <includedby refid="nvshmem__wholememory__bootstrap_8cpp" local="yes">src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</includedby>
    <includedby refid="communicator_8cpp" local="yes">src/wholememory/communicator.cpp</includedby>
    <includedby refid="file__io_8cpp" local="yes">src/wholememory/file_io.cpp</includedby>
    <includedby refid="initialize_8cpp" local="yes">src/wholememory/initialize.cpp</includedby>
    <includedby refid="memory__handle_8cpp" local="yes">src/wholememory/memory_handle.cpp</includedby>
    <includedby refid="memory__handle_8hpp" local="yes">src/wholememory/memory_handle.hpp</includedby>
    <includedby refid="wholememory_8cpp" local="yes">src/wholememory/wholememory.cpp</includedby>
    <incdepgraph>
      <node id="23">
        <label>iomanip</label>
      </node>
      <node id="26">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="11">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>src/wholememory/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="16">
        <label>stddef.h</label>
      </node>
      <node id="27">
        <label>error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>cstdio</label>
      </node>
      <node id="14">
        <label>unistd.h</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="21">
        <label>cstdlib</label>
      </node>
      <node id="24">
        <label>iostream</label>
      </node>
      <node id="17">
        <label>cuda_macros.hpp</label>
        <link refid="cuda__macros_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>cuda.h</label>
      </node>
      <node id="7">
        <label>mutex</label>
      </node>
      <node id="3">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="19">
        <label>chrono</label>
      </node>
      <node id="15">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>nccl.h</label>
      </node>
      <node id="9">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stdio.h</label>
      </node>
      <node id="22">
        <label>execinfo.h</label>
      </node>
      <node id="5">
        <label>cstring</label>
      </node>
      <node id="25">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/wholememory/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/wholememory/memory_handle.cpp</label>
        <link refid="memory__handle_8cpp"/>
      </node>
      <node id="8">
        <label>src/wholememory/embedding_cache.cpp</label>
        <link refid="embedding__cache_8cpp"/>
      </node>
      <node id="2">
        <label>src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</label>
        <link refid="nvshmem__wholememory__bootstrap_8cpp"/>
      </node>
      <node id="7">
        <label>src/wholememory/memory_handle.hpp</label>
        <link refid="memory__handle_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/wholememory/initialize.cpp</label>
        <link refid="initialize_8cpp"/>
      </node>
      <node id="9">
        <label>src/wholememory/wholememory.cpp</label>
        <link refid="wholememory_8cpp"/>
      </node>
      <node id="4">
        <label>src/wholememory/file_io.cpp</label>
        <link refid="file__io_8cpp"/>
      </node>
      <node id="3">
        <label>src/wholememory/communicator.cpp</label>
        <link refid="communicator_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structwholememory__comm__" prot="public">wholememory_comm_</innerclass>
    <innernamespace refid="namespacewholememory">wholememory</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" prot="public" static="no">
        <name>WM_COMM_CHECK_ALL_SAME</name>
        <param><defname>comm</defname></param>
        <param><defname>data</defname></param>
        <initializer>  do {                                                                                             \
    if (!<ref refid="communicator_8hpp_1aafdeff9663812f6a5631f7381cf88485" kindref="member">wm_comm_check_all_same</ref>(comm, data)) { <ref refid="logger_8hpp_1a2aabf020ba5e697df145e080d894b5c4" kindref="member">WHOLEMEMORY_FATAL</ref>(&quot;COMM_CHECK_ALL_SAME failed.&quot;); } \
  } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="256" column="9" bodyfile="src/wholememory/communicator.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="communicator_8hpp_1ac9163cfb1168f71dfa3cbbedb5699204" prot="public" static="no" mutable="no">
        <type><ref refid="classwholememory_1_1nccl__comms" kindref="compound">wholememory::nccl_comms</ref> *</type>
        <definition>wholememory::nccl_comms* raft_nccl_comm</definition>
        <argsstring></argsstring>
        <name>raft_nccl_comm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="163" column="27" bodyfile="src/wholememory/communicator.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a1a5acbd3355420f1be85b81e897a423d" prot="public" static="no" mutable="no">
        <type>cudaStream_t</type>
        <definition>cudaStream_t comm_stream</definition>
        <argsstring></argsstring>
        <name>comm_stream</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="164" column="16" bodyfile="src/wholememory/communicator.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1af797f99d21a5531a35d9051b3a63e3da" prot="public" static="no" mutable="no">
        <type>cudaEvent_t</type>
        <definition>cudaEvent_t cuda_event</definition>
        <argsstring></argsstring>
        <name>cuda_event</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="165" column="15" bodyfile="src/wholememory/communicator.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1ab59aa3cadb0b193c20a2b256f2a88b62" prot="public" static="no" mutable="no">
        <type>ncclComm_t</type>
        <definition>ncclComm_t raw_nccl_comm</definition>
        <argsstring></argsstring>
        <name>raw_nccl_comm</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="166" column="14" bodyfile="src/wholememory/communicator.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a0be0ed3102aab1d72782301d75cf570b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int world_rank</definition>
        <argsstring></argsstring>
        <name>world_rank</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="168" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int world_size</definition>
        <argsstring></argsstring>
        <name>world_size</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="169" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a94a069e3c91c2f1aba8a965e2333affd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int intra_node_first_rank</definition>
        <argsstring></argsstring>
        <name>intra_node_first_rank</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="171" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a58b8f0713e236f832837904495e70467" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int intra_node_rank</definition>
        <argsstring></argsstring>
        <name>intra_node_rank</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="172" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a0735742bbd98c2e3361dfac56f223be8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int intra_node_rank_num</definition>
        <argsstring></argsstring>
        <name>intra_node_rank_num</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="173" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a7b2ea66a540af83213c3b30b41d6e171" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int intra_node_first_rank_pid</definition>
        <argsstring></argsstring>
        <name>intra_node_first_rank_pid</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="174" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a3aa85b9e7e35e25c7c03544464c3020d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int comm_id</definition>
        <argsstring></argsstring>
        <name>comm_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="176" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1afd6d033a7ec5b3799a7c6cb0fefd177f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int dev_id</definition>
        <argsstring></argsstring>
        <name>dev_id</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="178" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a9e6e45021e198e051d582f3579379ad9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int local_gpu_ids[16]</definition>
        <argsstring>[16]</argsstring>
        <name>local_gpu_ids</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="179" column="7" bodyfile="src/wholememory/communicator.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1ad75cdd4adbf31a447bfd980c38c2455d" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t alloc_granularity</definition>
        <argsstring></argsstring>
        <name>alloc_granularity</name>
        <initializer>= 2 * 1024 * 1024UL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="181" column="10" bodyfile="src/wholememory/communicator.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a9e631d74e28c39bc9af0c6c59cb97998" prot="public" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex mu</definition>
        <argsstring></argsstring>
        <name>mu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="183" column="14" bodyfile="src/wholememory/communicator.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a15edb2cd62b1e2b1288988b04ded64cc" prot="public" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="wholememory_8h_1a01ef3ce8ec989cb313a386a942e08e12" kindref="member">wholememory_handle_t</ref> &gt;</type>
        <definition>std::map&lt;int, wholememory_handle_t&gt; wholememory_map</definition>
        <argsstring></argsstring>
        <name>wholememory_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="184" column="12" bodyfile="src/wholememory/communicator.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" prot="public" static="no" mutable="no">
        <type><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref></type>
        <definition>wholememory_distributed_backend_t distributed_backend</definition>
        <argsstring></argsstring>
        <name>distributed_backend</name>
        <initializer>= <ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82a1c459898724e4c23efd58d0881c2ad5f" kindref="member">WHOLEMEMORY_DB_NCCL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="185" column="37" bodyfile="src/wholememory/communicator.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="communicator_8hpp_1a3dc7a4529994ae203ae3589238837d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_</ref></type>
        <definition>struct wholememory_comm_ __attribute__</definition>
        <argsstring>((aligned(64)))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(aligned(64))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="1" column="0" declfile="src/wholememory/communicator.hpp" declline="1" declcolumn="0"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a72d04c386835c200503fd1d46fd1f0f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__::wholememory_comm_</definition>
        <argsstring>(ncclComm_t nccl_comm, int num_ranks, int rank, cudaStream_t stream)</argsstring>
        <name>wholememory_comm_</name>
        <param>
          <type>ncclComm_t</type>
          <declname>nccl_comm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_ranks</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="0" column="3" declfile="src/wholememory/communicator.hpp" declline="0" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a0882ebda5ae2215e66485841e800e240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__::~wholememory_comm_</definition>
        <argsstring>()</argsstring>
        <name>~wholememory_comm_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="1" column="3" declfile="src/wholememory/communicator.hpp" declline="1" declcolumn="3"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1ab0ced7ede81f3a9003878829e64fe160" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::barrier</definition>
        <argsstring>() const</argsstring>
        <name>barrier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="3" column="8" declfile="src/wholememory/communicator.hpp" declline="3" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a70b54559cae3920bb2713ca60f7bcb5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::abort</definition>
        <argsstring>() const</argsstring>
        <name>abort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="5" column="8" declfile="src/wholememory/communicator.hpp" declline="5" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a8d02700456c513708d2a4f78bdf45b40" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::allreduce</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t count, wholememory_dtype_t datatype, ncclRedOp_t op, cudaStream_t stream) const</argsstring>
        <name>allreduce</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>ncclRedOp_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="7" column="8" declfile="src/wholememory/communicator.hpp" declline="7" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1ab07ed1d9811db8ed97cd457e95f9f44c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_allreduce</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t count, wholememory_dtype_t datatype, ncclRedOp_t op) const</argsstring>
        <name>host_allreduce</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>ncclRedOp_t</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="14" column="8" declfile="src/wholememory/communicator.hpp" declline="14" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a53d2a27f191663bda6b8bc580a9bab8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::bcast</definition>
        <argsstring>(void *buff, size_t count, wholememory_dtype_t datatype, int root, cudaStream_t stream) const</argsstring>
        <name>bcast</name>
        <param>
          <type>void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="20" column="8" declfile="src/wholememory/communicator.hpp" declline="20" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1aea4238d22f291651e42aeccab5dd0013" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::bcast</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t count, wholememory_dtype_t datatype, int root, cudaStream_t stream) const</argsstring>
        <name>bcast</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="23" column="8" declfile="src/wholememory/communicator.hpp" declline="23" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a6d6f940b491ea741b9045146edd6bcee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_bcast</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t count, wholememory_dtype_t datatype, int root) const</argsstring>
        <name>host_bcast</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="30" column="8" declfile="src/wholememory/communicator.hpp" declline="30" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a54ec9ddebec8518b3f48c066a456249b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_bcast</definition>
        <argsstring>(void *buff, size_t count, wholememory_dtype_t datatype, int root) const</argsstring>
        <name>host_bcast</name>
        <param>
          <type>void *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="36" column="8" declfile="src/wholememory/communicator.hpp" declline="36" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a2db8ea32a25f401a30505722ac050e89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::reduce</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t count, wholememory_dtype_t datatype, ncclRedOp_t op, int root, cudaStream_t stream) const</argsstring>
        <name>reduce</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>ncclRedOp_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="38" column="8" declfile="src/wholememory/communicator.hpp" declline="38" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a05345a7df601d787cd49cb74b976501c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_reduce</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t count, wholememory_dtype_t datatype, ncclRedOp_t op, int root) const</argsstring>
        <name>host_reduce</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>ncclRedOp_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="46" column="8" declfile="src/wholememory/communicator.hpp" declline="46" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a4a5e586b77158b51f0e2d22a9461fb85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::allgather</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t sendcount, wholememory_dtype_t datatype, cudaStream_t stream) const</argsstring>
        <name>allgather</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="53" column="8" declfile="src/wholememory/communicator.hpp" declline="53" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1ad251275ee92a8c7a52c85b3f40817ca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_allgather</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t sendcount, wholememory_dtype_t datatype) const</argsstring>
        <name>host_allgather</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="59" column="8" declfile="src/wholememory/communicator.hpp" declline="59" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a1d765b00154a40b699f84672d8de709f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::allgatherv</definition>
        <argsstring>(const void *sendbuf, void *recvbuf, const size_t *recvcounts, const size_t *displs, wholememory_dtype_t datatype, cudaStream_t stream) const</argsstring>
        <name>allgatherv</name>
        <param>
          <type>const void *</type>
          <declname>sendbuf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuf</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>displs</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="64" column="8" declfile="src/wholememory/communicator.hpp" declline="64" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a334a1bf29845ba059f3c8170d0ecbdec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_allgatherv</definition>
        <argsstring>(const void *sendbuf, void *recvbuf, const size_t *recvcounts, const size_t *displs, wholememory_dtype_t datatype) const</argsstring>
        <name>host_allgatherv</name>
        <param>
          <type>const void *</type>
          <declname>sendbuf</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuf</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>displs</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="71" column="8" declfile="src/wholememory/communicator.hpp" declline="71" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1ac240930954c4a038f3ca91c3e48762ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::gather</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t sendcount, wholememory_dtype_t datatype, int root, cudaStream_t stream) const</argsstring>
        <name>gather</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="77" column="8" declfile="src/wholememory/communicator.hpp" declline="77" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a21b1d042b87ac0135861921927735d20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_gather</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t sendcount, wholememory_dtype_t datatype, int root) const</argsstring>
        <name>host_gather</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="84" column="8" declfile="src/wholememory/communicator.hpp" declline="84" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a9c32f4ec1d9816f173b5fafb861a71a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::gatherv</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t sendcount, const size_t *recvcounts, const size_t *displs, wholememory_dtype_t datatype, int root, cudaStream_t stream) const</argsstring>
        <name>gatherv</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>displs</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>int</type>
          <declname>root</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="90" column="8" declfile="src/wholememory/communicator.hpp" declline="90" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a37756e5f0a376c416910458338fcd33e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::reducescatter</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t recvcount, wholememory_dtype_t datatype, ncclRedOp_t op, cudaStream_t stream) const</argsstring>
        <name>reducescatter</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>recvcount</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>ncclRedOp_t</type>
          <declname>op</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="99" column="8" declfile="src/wholememory/communicator.hpp" declline="99" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a4b4dd7173eef3684adb8a76ddb2f4866" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::alltoall</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t sendcount, wholememory_dtype_t datatype, cudaStream_t stream) const</argsstring>
        <name>alltoall</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="106" column="8" declfile="src/wholememory/communicator.hpp" declline="106" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a84523015bb81b9d9606a081036f73ea3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::host_alltoall</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, size_t sendcount, wholememory_dtype_t datatype) const</argsstring>
        <name>host_alltoall</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendcount</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="112" column="8" declfile="src/wholememory/communicator.hpp" declline="112" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1afcdf6075ce1a35db38bf70b483344603" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::alltoallv</definition>
        <argsstring>(const void *sendbuff, void *recvbuff, const size_t *sendcounts, const size_t *senddispls, const size_t *recvcounts, const size_t *recvdispls, wholememory_dtype_t datatype, cudaStream_t stream) const</argsstring>
        <name>alltoallv</name>
        <param>
          <type>const void *</type>
          <declname>sendbuff</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuff</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>sendcounts</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>senddispls</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>recvcounts</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>recvdispls</declname>
        </param>
        <param>
          <type><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref></type>
          <declname>datatype</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="117" column="8" declfile="src/wholememory/communicator.hpp" declline="117" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1abe9c6b80c817fcb183ac891bec3afe9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t __attribute__::sync_stream</definition>
        <argsstring>(cudaStream_t stream) const</argsstring>
        <name>sync_stream</name>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="126" column="28" declfile="src/wholememory/communicator.hpp" declline="126" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1adf36f4a5ccb143992e11c7143f8b7bb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref></type>
        <definition>wholememory_error_code_t __attribute__::sync_stream</definition>
        <argsstring>() const</argsstring>
        <name>sync_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="128" column="28" declfile="src/wholememory/communicator.hpp" declline="128" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a1e7e9326d20c53ad661eabea73dbb241" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::device_send</definition>
        <argsstring>(const void *send_buf, size_t send_size, int dest, cudaStream_t stream) const</argsstring>
        <name>device_send</name>
        <param>
          <type>const void *</type>
          <declname>send_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>send_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="131" column="8" declfile="src/wholememory/communicator.hpp" declline="131" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a761f3714bdd14648f9c8e780b079fba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::device_recv</definition>
        <argsstring>(void *recv_buf, size_t recv_size, int source, cudaStream_t stream) const</argsstring>
        <name>device_recv</name>
        <param>
          <type>void *</type>
          <declname>recv_buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>recv_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="134" column="8" declfile="src/wholememory/communicator.hpp" declline="134" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a6d8253555285664649d0626bd59fdb1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::device_sendrecv</definition>
        <argsstring>(const void *sendbuf, size_t sendsize, int dest, void *recvbuf, size_t recvsize, int source, cudaStream_t stream) const</argsstring>
        <name>device_sendrecv</name>
        <param>
          <type>const void *</type>
          <declname>sendbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sendsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>recvsize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>source</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="136" column="8" declfile="src/wholememory/communicator.hpp" declline="136" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a543395620890668caafc4fc54231b755" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::device_multicast_sendrecv</definition>
        <argsstring>(const void *sendbuf, std::vector&lt; size_t &gt; const &amp;sendsizes, std::vector&lt; size_t &gt; const &amp;sendoffsets, std::vector&lt; int &gt; const &amp;dests, void *recvbuf, std::vector&lt; size_t &gt; const &amp;recvsizes, std::vector&lt; size_t &gt; const &amp;recvoffsets, std::vector&lt; int &gt; const &amp;sources, cudaStream_t stream) const</argsstring>
        <name>device_multicast_sendrecv</name>
        <param>
          <type>const void *</type>
          <declname>sendbuf</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>sendsizes</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>sendoffsets</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; const &amp;</type>
          <declname>dests</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>recvbuf</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>recvsizes</declname>
        </param>
        <param>
          <type>std::vector&lt; size_t &gt; const &amp;</type>
          <declname>recvoffsets</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; const &amp;</type>
          <declname>sources</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="144" column="8" declfile="src/wholememory/communicator.hpp" declline="144" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a454159ec45b47161ed87e2e6e004a300" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool __attribute__::is_intranode</definition>
        <argsstring>() const</argsstring>
        <name>is_intranode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="154" column="8" declfile="src/wholememory/communicator.hpp" declline="154" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a4655d31ddb38b170b0d431f40aac7322" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool __attribute__::support_type_location</definition>
        <argsstring>(wholememory_memory_type_t memory_type, wholememory_memory_location_t memory_location) const</argsstring>
        <name>support_type_location</name>
        <param>
          <type><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref></type>
          <declname>memory_type</declname>
        </param>
        <param>
          <type><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref></type>
          <declname>memory_location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="156" column="8" declfile="src/wholememory/communicator.hpp" declline="156" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1ae2e78510f110be06c60c61b1418d469a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::group_start</definition>
        <argsstring>() const</argsstring>
        <name>group_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="159" column="8" declfile="src/wholememory/communicator.hpp" declline="159" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1a5696f3d0292a70085aa40d4ea48732e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __attribute__::group_end</definition>
        <argsstring>() const</argsstring>
        <name>group_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="161" column="8" declfile="src/wholememory/communicator.hpp" declline="161" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1abd0d46cd3fbf77ead72938e7a6cbb545" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TypeT</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool wm_comm_check_all_same</definition>
        <argsstring>(wholememory_comm_t comm, const TypeT &amp;t)</argsstring>
        <name>wm_comm_check_all_same</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const TypeT &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="231" column="13" bodyfile="src/wholememory/communicator.hpp" bodystart="231" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="communicator_8hpp_1aafdeff9663812f6a5631f7381cf88485" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool wm_comm_check_all_same</definition>
        <argsstring>(wholememory_comm_t comm, const std::string &amp;str)</argsstring>
        <name>wm_comm_check_all_same</name>
        <param>
          <type><ref refid="wholememory_8h_1a072bd5462591f49775a4a183e34b800d" kindref="member">wholememory_comm_t</ref></type>
          <declname>comm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wholememory/communicator.hpp" line="242" column="13" bodyfile="src/wholememory/communicator.hpp" bodystart="242" bodyend="254"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="communicator_8hpp_1a3dc7a4529994ae203ae3589238837d35" refkind="member"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3" refid="communicator_8hpp_1ab0ced7ede81f3a9003878829e64fe160" refkind="member"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5" refid="communicator_8hpp_1a70b54559cae3920bb2713ca60f7bcb5c" refkind="member"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7" refid="communicator_8hpp_1a8d02700456c513708d2a4f78bdf45b40" refkind="member"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14" refid="communicator_8hpp_1ab07ed1d9811db8ed97cd457e95f9f44c" refkind="member"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda_runtime_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="communicator_8hpp_1a53d2a27f191663bda6b8bc580a9bab8c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nccl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="communicator_8hpp_1aea4238d22f291651e42aeccab5dd0013" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tensor__description_8h" kindref="compound">wholememory/tensor_description.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wholememory_8h" kindref="compound">wholememory/wholememory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="communicator_8hpp_1a6d6f940b491ea741b9045146edd6bcee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cuda__macros_8hpp" kindref="compound">cuda_macros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory" kindref="compound">wholememory</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">nccl_comms;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="communicator_8hpp_1a54ec9ddebec8518b3f48c066a456249b" refkind="member"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="communicator_8hpp_1a2db8ea32a25f401a30505722ac050e89" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1a178d397e9345164393841f0325d16138" kindref="member">wholememory_comm_</ref>(ncclComm_t<sp/>nccl_comm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ranks,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,<sp/>cudaStream_t<sp/>stream);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm___1aad0fb9af9c10cabd5ce0e7361b0f3d04" kindref="member">~wholememory_comm_</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a58ad310a4836696213a8fe2beb7bba06" kindref="member">barrier</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ad247edc8f1d4bcb461c0b91bc024fe1f" kindref="member">abort</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="communicator_8hpp_1a05345a7df601d787cd49cb74b976501c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a618f9531eb00dada81f37fc345af2fb7" kindref="member">allreduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="communicator_8hpp_1a4a5e586b77158b51f0e2d22a9461fb85" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ade39cc20f22857fba8318aea6b9678c7" kindref="member">host_allreduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="communicator_8hpp_1ad251275ee92a8c7a52c85b3f40817ca6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a9a0b23b51674e0b46b3cc5d513ebb898" kindref="member">bcast</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,<sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a9a0b23b51674e0b46b3cc5d513ebb898" kindref="member">bcast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="64" refid="communicator_8hpp_1a1d765b00154a40b699f84672d8de709f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a3b499fd4878b771ca859b7b3cfca8627" kindref="member">host_bcast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="71" refid="communicator_8hpp_1a334a1bf29845ba059f3c8170d0ecbdec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a3b499fd4878b771ca859b7b3cfca8627" kindref="member">host_bcast</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="communicator_8hpp_1ac240930954c4a038f3ca91c3e48762ff" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1acb79516642f0cf46b2ae2231c6750d5e" kindref="member">reduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84" refid="communicator_8hpp_1a21b1d042b87ac0135861921927735d20" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a8bf148950bcd3f2cfea24725dbf95473" kindref="member">host_reduce</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="90" refid="communicator_8hpp_1a9c32f4ec1d9816f173b5fafb861a71a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a58f136ed7de2cf2d77200db8217dc8b0" kindref="member">allgather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">host_allgather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="99" refid="communicator_8hpp_1a37756e5f0a376c416910458338fcd33e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1acd66b7e1b2f81ee95c54e7df7f13a4e8" kindref="member">allgatherv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="106" refid="communicator_8hpp_1a4b4dd7173eef3684adb8a76ddb2f4866" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>displs,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a3596051c38552f60302c73f808dd929a" kindref="member">host_allgatherv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="112" refid="communicator_8hpp_1a84523015bb81b9d9606a081036f73ea3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>displs,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a19a9890de4780aa69ad42fc7232f1185" kindref="member">gather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="117" refid="communicator_8hpp_1afcdf6075ce1a35db38bf70b483344603" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1afb1765b6858584748e0c7037e02e4739" kindref="member">host_gather</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="126" refid="communicator_8hpp_1abe9c6b80c817fcb183ac891bec3afe9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128" refid="communicator_8hpp_1adf36f4a5ccb143992e11c7143f8b7bb4" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a62a54dd31e5f5c780242c6cc7e203575" kindref="member">gatherv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="131" refid="communicator_8hpp_1a1e7e9326d20c53ad661eabea73dbb241" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>displs,</highlight></codeline>
<codeline lineno="134" refid="communicator_8hpp_1a761f3714bdd14648f9c8e780b079fba1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>root,</highlight></codeline>
<codeline lineno="136" refid="communicator_8hpp_1a6d8253555285664649d0626bd59fdb1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a4ca5a716655622948fa23af74e2ce560" kindref="member">reducescatter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recvcount,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncclRedOp_t<sp/>op,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144" refid="communicator_8hpp_1a543395620890668caafc4fc54231b755" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a5a90145c68b3d1085358742f52de7713" kindref="member">alltoall</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a99d0e19b865e6e8e01536f5772188a0f" kindref="member">host_alltoall</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendcount,</highlight></codeline>
<codeline lineno="154" refid="communicator_8hpp_1a454159ec45b47161ed87e2e6e004a300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="communicator_8hpp_1a4655d31ddb38b170b0d431f40aac7322" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1aeaa3eab3a7a556f2f12650ad2ee2d55e" kindref="member">alltoallv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuff,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuff,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>sendcounts,</highlight></codeline>
<codeline lineno="159" refid="communicator_8hpp_1ae2e78510f110be06c60c61b1418d469a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>senddispls,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvcounts,</highlight></codeline>
<codeline lineno="161" refid="communicator_8hpp_1a5696f3d0292a70085aa40d4ea48732e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>recvdispls,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>datatype,</highlight></codeline>
<codeline lineno="163" refid="communicator_8hpp_1ac9163cfb1168f71dfa3cbbedb5699204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164" refid="communicator_8hpp_1a1a5acbd3355420f1be85b81e897a423d" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="communicator_8hpp_1af797f99d21a5531a35d9051b3a63e3da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="structwholememory__comm___1a48f8fbf5b4576512c61ef0295e6750f5" kindref="member">sync_stream</ref>(cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166" refid="communicator_8hpp_1ab59aa3cadb0b193c20a2b256f2a88b62" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="structwholememory__comm___1a48f8fbf5b4576512c61ef0295e6750f5" kindref="member">sync_stream</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168" refid="communicator_8hpp_1a0be0ed3102aab1d72782301d75cf570b" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>thread<sp/>is<sp/>sending<sp/>&amp;<sp/>receiving<sp/>at<sp/>the<sp/>same<sp/>time,<sp/>use<sp/>device_sendrecv<sp/>to<sp/>avoid<sp/>deadlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a0114332c4a3b68af1a89493f8727d14f" kindref="member">device_send</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>send_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>send_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest,<sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171" refid="communicator_8hpp_1a94a069e3c91c2f1aba8a965e2333affd" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="communicator_8hpp_1a58b8f0713e236f832837904495e70467" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>thread<sp/>is<sp/>sending<sp/>&amp;<sp/>receiving<sp/>at<sp/>the<sp/>same<sp/>time,<sp/>use<sp/>device_sendrecv<sp/>to<sp/>avoid<sp/>deadlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="communicator_8hpp_1a0735742bbd98c2e3361dfac56f223be8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a78eccab8ce5e6ed6c9adbc677aa38b92" kindref="member">device_recv</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recv_buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recv_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,<sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174" refid="communicator_8hpp_1a7b2ea66a540af83213c3b30b41d6e171" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a7d4f9ec8d146d05f679460a7006fae60" kindref="member">device_sendrecv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="176" refid="communicator_8hpp_1a3aa85b9e7e35e25c7c03544464c3020d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sendsize,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest,</highlight></codeline>
<codeline lineno="178" refid="communicator_8hpp_1afd6d033a7ec5b3799a7c6cb0fefd177f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="179" refid="communicator_8hpp_1a9e6e45021e198e051d582f3579379ad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recvsize,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>source,</highlight></codeline>
<codeline lineno="181" refid="communicator_8hpp_1ad75cdd4adbf31a447bfd980c38c2455d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="communicator_8hpp_1a9e631d74e28c39bc9af0c6c59cb97998" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a47024fbc4bfc631aab75a06b9302de65" kindref="member">device_multicast_sendrecv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>sendbuf,</highlight></codeline>
<codeline lineno="184" refid="communicator_8hpp_1a15edb2cd62b1e2b1288988b04ded64cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sendsizes,</highlight></codeline>
<codeline lineno="185" refid="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sendoffsets,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>dests,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>recvbuf,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>recvsizes,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>recvoffsets,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>sources,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cudaStream_t<sp/>stream)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ac5998572fd8c52a62500a5308569d03c" kindref="member">is_intranode</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a86e4a137c710b81c0422127556f836eb" kindref="member">support_type_location</ref>(<ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a559ca2d0c8b8239d5f3759dfe0eeeed8" kindref="member">group_start</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1aa84bef36f3e2e31cdec9f6c22f530dd7" kindref="member">group_end</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classwholememory_1_1nccl__comms" kindref="compound">wholememory::nccl_comms</ref>*<sp/><ref refid="structwholememory__comm___1aca2ed0b5c091ea453a39222e78e854d1" kindref="member">raft_nccl_comm</ref>;</highlight></codeline>
<codeline lineno="203" refid="structwholememory__comm___1a9a9627d2b431d377763f226d373ebd55" refkind="member"><highlight class="normal"><sp/><sp/>cudaStream_t<sp/><ref refid="structwholememory__comm___1a9a9627d2b431d377763f226d373ebd55" kindref="member">comm_stream</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204" refid="structwholememory__comm___1a2156e2c488eaa112a5b0acd82df8a07c" refkind="member"><highlight class="normal"><sp/><sp/>cudaEvent_t<sp/><ref refid="structwholememory__comm___1a2156e2c488eaa112a5b0acd82df8a07c" kindref="member">cuda_event</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205" refid="structwholememory__comm___1a76c4e2839b12259ae479cc87400b23e8" refkind="member"><highlight class="normal"><sp/><sp/>ncclComm_t<sp/><ref refid="structwholememory__comm___1a76c4e2839b12259ae479cc87400b23e8" kindref="member">raw_nccl_comm</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ab7af38fc2a412427af660a6ce82a6510" kindref="member">world_rank</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208" refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="structwholememory__comm___1ab4c459c199ea6afaa840f39111e42969" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1ab4c459c199ea6afaa840f39111e42969" kindref="member">intra_node_first_rank</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="211" refid="structwholememory__comm___1a782cafc2eee72c52d3907282c5802d10" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a782cafc2eee72c52d3907282c5802d10" kindref="member">intra_node_rank</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="212" refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a230f2e95ea3984a5fa7d690f94a3233e" kindref="member">intra_node_rank_num</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213" refid="structwholememory__comm___1a7d736e2b695040c9b390a4aa8069149d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a7d736e2b695040c9b390a4aa8069149d" kindref="member">intra_node_first_rank_pid</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="structwholememory__comm___1a2b551137f0731e414a013704a90847ac" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a2b551137f0731e414a013704a90847ac" kindref="member">comm_id</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="structwholememory__comm___1af9f6d010ca8af713d8660a1defd63ab5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1af9f6d010ca8af713d8660a1defd63ab5" kindref="member">dev_id</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="218" refid="structwholememory__comm___1af20488964e4466d7906d86fb8630bfba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1af20488964e4466d7906d86fb8630bfba" kindref="member">local_gpu_ids</ref>[16]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="structwholememory__comm___1a6d4f8669e0cb84743fcd297347d03433" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structwholememory__comm___1a6d4f8669e0cb84743fcd297347d03433" kindref="member">alloc_granularity</ref><sp/>=<sp/>2<sp/>*<sp/>1024<sp/>*<sp/>1024UL;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="structwholememory__comm___1aee579aabcce7a3212b11dedefdd595a5" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="structwholememory__comm___1aee579aabcce7a3212b11dedefdd595a5" kindref="member">mu</ref>;</highlight></codeline>
<codeline lineno="223" refid="structwholememory__comm___1a35a267e7a30f64fb67d907f302aff960" refkind="member"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>wholememory_handle_t&gt;<sp/><ref refid="structwholememory__comm___1a35a267e7a30f64fb67d907f302aff960" kindref="member">wholememory_map</ref>;</highlight></codeline>
<codeline lineno="224" refid="structwholememory__comm___1af008c36ab2cc46cccd117f6d5662a707" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="structwholememory__comm___1af008c36ab2cc46cccd117f6d5662a707" kindref="member">distributed_backend</ref><sp/>=<sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82a1c459898724e4c23efd58d0881c2ad5f" kindref="member">WHOLEMEMORY_DB_NCCL</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bind_to_nvshmem<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}<sp/><ref refid="communicator_8hpp_1a3dc7a4529994ae203ae3589238837d35" kindref="member">__attribute__</ref>((aligned(64)));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TypeT&gt;</highlight></codeline>
<codeline lineno="231" refid="communicator_8hpp_1abd0d46cd3fbf77ead72938e7a6cbb545" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1abd0d46cd3fbf77ead72938e7a6cbb545" kindref="member">wm_comm_check_all_same</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TypeT&amp;<sp/>t)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;TypeT[]&gt;<sp/>t_array(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TypeT[comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>]());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">host_allgather</ref>(&amp;t,<sp/>t_array.get(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(TypeT),<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t_array.get()[r]<sp/>!=<sp/>t)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="242" refid="communicator_8hpp_1aafdeff9663812f6a5631f7381cf88485" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1abd0d46cd3fbf77ead72938e7a6cbb545" kindref="member">wm_comm_check_all_same</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>str_len<sp/>=<sp/>str.size();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="communicator_8hpp_1abd0d46cd3fbf77ead72938e7a6cbb545" kindref="member">wm_comm_check_all_same</ref>(comm,<sp/>str_len))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>std::string<sp/>cat_str;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>cat_str.resize(str_len<sp/>*<sp/>comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>comm-&gt;<ref refid="structwholememory__comm___1a9294e51b7ee036482b47f86f5a8814f6" kindref="member">host_allgather</ref>(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>str.data(),<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cat_str.c_str()),<sp/>str_len,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5caab26b36067528d88560b9ec98cf4c2cf" kindref="member">WHOLEMEMORY_DT_INT8</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>comm-&gt;<ref refid="structwholememory__comm___1afdcaa5839efe93370545e2f30492614c" kindref="member">world_size</ref>;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::strncmp(str.data(),<sp/>cat_str.data()<sp/>+<sp/>r<sp/>*<sp/>str_len,<sp/>str_len)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="communicator_8hpp_1aa93fb4e22c690788737c6882e73dc99b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WM_COMM_CHECK_ALL_SAME(comm,<sp/>data)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!wm_comm_check_all_same(comm,<sp/>data))<sp/>{<sp/>WHOLEMEMORY_FATAL(&quot;COMM_CHECK_ALL_SAME<sp/>failed.&quot;</highlight><highlight class="normal">);<sp/>}<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory" kindref="compound">wholememory</ref><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a95b01d87eac905d8199b7f8f5f3d870a" kindref="member">create_unique_id</ref>(<ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref>*<sp/>unique_id)<sp/>noexcept;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a9f8e92de4da5081630c846c779fc4263" kindref="member">create_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref>*<sp/>comm,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__unique__id__t" kindref="compound">wholememory_unique_id_t</ref><sp/>unique_id,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>noexcept;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1accb6ff921c8934a7878a8855f645a551" kindref="member">destroy_communicator_locked</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a7d7a70bc0fd811bc3365a0006672568d" kindref="member">destroy_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1ad196384a459e9d06c87a84b500373f13" kindref="member">communicator_support_type_location</ref>(</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location)<sp/>noexcept;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1ad3eaac5ad3d1adab0c25930187bbb892" kindref="member">destroy_all_communicators</ref>()<sp/>noexcept;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a066152d2429b6fadba01de0cb71dee49" kindref="member">communicator_get_rank</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>rank,<sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a7e32c1600ee5fc7de9c172221823698f" kindref="member">communicator_get_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>size,<sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a8b696746c0e9af2a26f527980f8f81ac" kindref="member">communicator_barrier</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a9c2c75c1847de5be0addf761edf559d5" kindref="member">is_intranode_communicator</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">std::string<sp/><ref refid="namespacewholememory_1a380fdb86cf1c7824a5e1c13080347349" kindref="member">get_temporary_directory_path</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">std::string<sp/><ref refid="namespacewholememory_1af35e40bbda1b5855e82cd1b365532641" kindref="member">get_shm_prefix</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a6b51adbdf967904a9b109296a5cff842" kindref="member">communicator_set_distributed_backend</ref>(</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,<sp/><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="communicator_8hpp_1a1629c64b12e7ad2b7086b4f4556d5dc3" kindref="member">distributed_backend</ref>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="namespacewholememory_1a6374c623eb001a87d3b9f27070a61c45" kindref="member">communicator_get_distributed_backend</ref>(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1ae0648dd1c3cb302520b9e2b5fbecb5d6" kindref="member">communicator_is_bind_to_nvshmem</ref>(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>init_nvshmem_with_comm(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>finalize_nvshmem_locked(<ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm)<sp/>noexcept;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>wholememory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/wholememory/communicator.hpp"/>
  </compounddef>
</doxygen>
