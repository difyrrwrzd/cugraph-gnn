<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="temp__memory__handle_8hpp" kind="file" language="C++">
    <compoundname>temp_memory_handle.hpp</compoundname>
    <includes refid="env__func__ptrs_8h" local="no">wholememory/env_func_ptrs.h</includes>
    <includes refid="tensor__description_8h" local="no">wholememory/tensor_description.h</includes>
    <includedby refid="embedding_8cpp" local="yes">src/wholememory/embedding.cpp</includedby>
    <includedby refid="exchange__embeddings__nccl__func_8h" local="no">src/wholememory_ops/functions/exchange_embeddings_nccl_func.h</includedby>
    <includedby refid="exchange__ids__nccl__func_8h" local="no">src/wholememory_ops/functions/exchange_ids_nccl_func.h</includedby>
    <includedby refid="sort__indices__func_8h" local="no">src/wholememory_ops/functions/sort_indices_func.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>wholememory/env_func_ptrs.h</label>
        <link refid="env__func__ptrs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/wholememory_ops/temp_memory_handle.hpp</label>
        <link refid="temp__memory__handle_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="4">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/wholememory/embedding.cpp</label>
        <link refid="embedding_8cpp"/>
      </node>
      <node id="5">
        <label>src/wholememory_ops/functions/sort_indices_func.h</label>
        <link refid="sort__indices__func_8h"/>
      </node>
      <node id="1">
        <label>src/wholememory_ops/temp_memory_handle.hpp</label>
        <link refid="temp__memory__handle_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/wholememory_ops/functions/exchange_embeddings_nccl_func.h</label>
        <link refid="exchange__embeddings__nccl__func_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>src/wholememory_ops/functions/exchange_ids_nccl_func.h</label>
        <link refid="exchange__ids__nccl__func_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classwholememory__ops_1_1temp__memory__handle" prot="public">wholememory_ops::temp_memory_handle</innerclass>
    <innernamespace refid="namespacewholememory__ops">wholememory_ops</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2024,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="env__func__ptrs_8h" kindref="compound">wholememory/env_func_ptrs.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tensor__description_8h" kindref="compound">wholememory/tensor_description.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory__ops" kindref="compound">wholememory_ops</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classwholememory__ops_1_1temp__memory__handle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwholememory__ops_1_1temp__memory__handle" kindref="compound">temp_memory_handle</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25" refid="classwholememory__ops_1_1temp__memory__handle_1a172b0caf216e47e4d100ce9a4b649c65" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a172b0caf216e47e4d100ce9a4b649c65" kindref="member">temp_memory_handle</ref>(<ref refid="structwholememory__env__func__t" kindref="compound">wholememory_env_func_t</ref>*<sp/>env_fns)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_mem_fns_<sp/>=<sp/>&amp;env_fns-&gt;<ref refid="structwholememory__env__func__t_1a9aa656350e5280b16966ab0ddec27f9d" kindref="member">temporary_fns</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a0b6e0e8ab4e5b3cb544e0d3573cf2314" kindref="member">create_memory_context_fn</ref>(&amp;memory_context_,<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30" refid="classwholememory__ops_1_1temp__memory__handle_1a3bec099f6fdff5eecaf8cb43564adc08" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a3bec099f6fdff5eecaf8cb43564adc08" kindref="member">temp_memory_handle</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31" refid="classwholememory__ops_1_1temp__memory__handle_1a0d4a288d47f7bc8e25b6c8ce95e44c91" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a0d4a288d47f7bc8e25b6c8ce95e44c91" kindref="member">~temp_memory_handle</ref>()<sp/>{<sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a1c3a425ad7ce374f48159dc35ec652aa" kindref="member">free_memory</ref>();<sp/>}</highlight></codeline>
<codeline lineno="32" refid="classwholememory__ops_1_1temp__memory__handle_1ad45dec565aca368465f91cd4a33aa3a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1ad45dec565aca368465f91cd4a33aa3a7" kindref="member">device_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elt_count,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>data_type)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1ab34f4ca4c043b5aa04ec2f729fa21138" kindref="member">free_data</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>tensor_description;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>get_tensor_description(&amp;tensor_description,<sp/>elt_count,<sp/>data_type);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr_<sp/>=<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a3763bef0afda3ebb0bcce4e0dad8467f" kindref="member">malloc_fn</ref>(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tensor_description,<sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa90bc04801a32deee762185250c704760" kindref="member">WHOLEMEMORY_MA_DEVICE</ref>,<sp/>memory_context_,<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41" refid="classwholememory__ops_1_1temp__memory__handle_1a10953406c8023786943e9e1a7878a8d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a10953406c8023786943e9e1a7878a8d8" kindref="member">host_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elt_count,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>data_type)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1ab34f4ca4c043b5aa04ec2f729fa21138" kindref="member">free_data</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>tensor_description;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>get_tensor_description(&amp;tensor_description,<sp/>elt_count,<sp/>data_type);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr_<sp/>=<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a3763bef0afda3ebb0bcce4e0dad8467f" kindref="member">malloc_fn</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tensor_description,<sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6a05bf42a1aa42657f7a6a9b66d43d4a" kindref="member">WHOLEMEMORY_MA_HOST</ref>,<sp/>memory_context_,<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50" refid="classwholememory__ops_1_1temp__memory__handle_1a37cd26698948215501c302ed25e33836" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a37cd26698948215501c302ed25e33836" kindref="member">pinned_malloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elt_count,<sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>data_type)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1ab34f4ca4c043b5aa04ec2f729fa21138" kindref="member">free_data</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref><sp/>tensor_description;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>get_tensor_description(&amp;tensor_description,<sp/>elt_count,<sp/>data_type);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr_<sp/>=<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a3763bef0afda3ebb0bcce4e0dad8467f" kindref="member">malloc_fn</ref>(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;tensor_description,<sp/><ref refid="env__func__ptrs_8h_1a220cfc9919630023b2df6131237a8cffa6832f7b989ef69484f680690d2fa98fc" kindref="member">WHOLEMEMORY_MA_PINNED</ref>,<sp/>memory_context_,<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59" refid="classwholememory__ops_1_1temp__memory__handle_1a93eee9808c2dcd65936467b2300b2f58" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a93eee9808c2dcd65936467b2300b2f58" kindref="member">pointer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr_;<sp/>}</highlight></codeline>
<codeline lineno="60" refid="classwholememory__ops_1_1temp__memory__handle_1ab34f4ca4c043b5aa04ec2f729fa21138" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1ab34f4ca4c043b5aa04ec2f729fa21138" kindref="member">free_data</ref>()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a3cc1ce59aa1264d3ec227ff7c29a02b8" kindref="member">free_fn</ref>(memory_context_,<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67" refid="classwholememory__ops_1_1temp__memory__handle_1a1c3a425ad7ce374f48159dc35ec652aa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classwholememory__ops_1_1temp__memory__handle_1a1c3a425ad7ce374f48159dc35ec652aa" kindref="member">free_memory</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr_<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a3cc1ce59aa1264d3ec227ff7c29a02b8" kindref="member">free_fn</ref>(memory_context_,<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a85c5125a684e4134e33eaa1fd760d327" kindref="member">destroy_memory_context_fn</ref>(memory_context_,<sp/>temp_mem_fns_-&gt;<ref refid="structwholememory__temp__memory__func__t_1a629dbbb1e2d14cdd92f92992918dcaae" kindref="member">global_context</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memory_context_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_tensor_description(<ref refid="structwholememory__tensor__description__t" kindref="compound">wholememory_tensor_description_t</ref>*<sp/>tensor_description,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>elt_count,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1aae60c79607c2908cefb0b93e06729e5c" kindref="member">wholememory_dtype_t</ref><sp/>data_type)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tensor__description_8h_1a98ad7a286797c238fa7974a32ac0c58a" kindref="member">wholememory_initialize_tensor_desc</ref>(tensor_description);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1ab0e1806fee1375ca3abee7a35e28254b" kindref="member">dim</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a4ce5c16c13bcc1bb742b3527c818ab65" kindref="member">storage_offset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a06a28a646d435a02f96b761e6d5869f7" kindref="member">dtype</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>data_type;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a2a1f59a8ba93575af4017de3d33d2925" kindref="member">sizes</ref>[0]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>elt_count;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor_description-&gt;<ref refid="structwholememory__tensor__description__t_1a6a4a4d548e44c32a10e96f78c450f3e8" kindref="member">strides</ref>[0]<sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__temp__memory__func__t" kindref="compound">wholememory_temp_memory_func_t</ref>*<sp/>temp_mem_fns_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>memory_context_<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>wholememory_ops</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/wholememory_ops/temp_memory_handle.hpp"/>
  </compounddef>
</doxygen>
