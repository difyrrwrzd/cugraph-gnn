<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="memory__handle_8hpp" kind="file" language="C++">
    <compoundname>memory_handle.hpp</compoundname>
    <includes refid="wholememory_8h" local="no">wholememory/wholememory.h</includes>
    <includes local="no">cuda_runtime_api.h</includes>
    <includes refid="communicator_8hpp" local="yes">communicator.hpp</includes>
    <includedby refid="nvshmem__wholememory__bootstrap_8cpp" local="yes">src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</includedby>
    <includedby refid="communicator_8cpp" local="yes">src/wholememory/communicator.cpp</includedby>
    <includedby refid="embedding__cache_8cpp" local="yes">src/wholememory/embedding_cache.cpp</includedby>
    <includedby refid="memory__handle_8cpp" local="yes">src/wholememory/memory_handle.cpp</includedby>
    <includedby refid="wholememory_8cpp" local="yes">src/wholememory/wholememory.cpp</includedby>
    <incdepgraph>
      <node id="24">
        <label>iomanip</label>
      </node>
      <node id="27">
        <label>raft/core/error.hpp</label>
      </node>
      <node id="9">
        <label>cstdint</label>
      </node>
      <node id="16">
        <label>stdint.h</label>
      </node>
      <node id="17">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>communicator.hpp</label>
        <link refid="communicator_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>wholememory/wholememory.h</label>
        <link refid="wholememory_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="28">
        <label>error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>cstdio</label>
      </node>
      <node id="4">
        <label>unistd.h</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="22">
        <label>cstdlib</label>
      </node>
      <node id="25">
        <label>iostream</label>
      </node>
      <node id="18">
        <label>cuda_macros.hpp</label>
        <link refid="cuda__macros_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/wholememory/memory_handle.hpp</label>
        <link refid="memory__handle_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>cuda.h</label>
      </node>
      <node id="13">
        <label>mutex</label>
      </node>
      <node id="7">
        <label>cuda_runtime_api.h</label>
      </node>
      <node id="20">
        <label>chrono</label>
      </node>
      <node id="5">
        <label>wholememory/global_reference.h</label>
        <link refid="global__reference_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>nccl.h</label>
      </node>
      <node id="15">
        <label>wholememory/tensor_description.h</label>
        <link refid="tensor__description_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="23">
        <label>execinfo.h</label>
      </node>
      <node id="11">
        <label>cstring</label>
      </node>
      <node id="26">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>src/wholememory/memory_handle.cpp</label>
        <link refid="memory__handle_8cpp"/>
      </node>
      <node id="4">
        <label>src/wholememory/embedding_cache.cpp</label>
        <link refid="embedding__cache_8cpp"/>
      </node>
      <node id="2">
        <label>src/nvshmem_plugins/nvshmem_wholememory_bootstrap.cpp</label>
        <link refid="nvshmem__wholememory__bootstrap_8cpp"/>
      </node>
      <node id="1">
        <label>src/wholememory/memory_handle.hpp</label>
        <link refid="memory__handle_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/wholememory/wholememory.cpp</label>
        <link refid="wholememory_8cpp"/>
      </node>
      <node id="3">
        <label>src/wholememory/communicator.cpp</label>
        <link refid="communicator_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structwholememory__handle__" prot="public">wholememory_handle_</innerclass>
    <innernamespace refid="namespacewholememory">wholememory</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2023,<sp/>NVIDIA<sp/>CORPORATION.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="wholememory_8h" kindref="compound">wholememory/wholememory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda_runtime_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="communicator_8hpp" kindref="compound">communicator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory" kindref="compound">wholememory</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">wholememory_impl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structwholememory__handle__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="structwholememory__handle___1ac1ea8b2a5d690517aeb162a14edac01f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structwholememory__handle___1ac1ea8b2a5d690517aeb162a14edac01f" kindref="member">handle_id</ref>;</highlight></codeline>
<codeline lineno="32" refid="structwholememory__handle___1af6aec1ebcf6d44ec3965bf8fd47e0a51" refkind="member"><highlight class="normal"><sp/><sp/>wholememory::wholememory_impl*<sp/><ref refid="structwholememory__handle___1af6aec1ebcf6d44ec3965bf8fd47e0a51" kindref="member">impl</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle___1abad13663111c8243747341dcfa4c78ca" kindref="member">~wholememory_handle_</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewholememory" kindref="compound">wholememory</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a1f2a7a120ad67bcb6527ecdc97744c8c" kindref="member">create_wholememory</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref>*<sp/>wholememory_handle_ptr,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref><sp/>comm,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/>memory_type,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/>memory_location,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_granularity)<sp/>noexcept;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1aa567f9c7bb90682cf10f61f0534bee2b" kindref="member">destroy_wholememory_with_comm_locked</ref>(</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1afef9a3fafcc21ce34a9458c3466326b5" kindref="member">destroy_wholememory</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1aae5601eb89eea5cebd20031061e1d9c9" kindref="member">get_communicator_from_handle</ref>(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__comm__" kindref="compound">wholememory_comm_t</ref>*<sp/>comm,<sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="wholememory_8h_1a58cc0d50d4f407e416d73b7a806aff50" kindref="member">wholememory_memory_type_t</ref><sp/><ref refid="namespacewholememory_1a9161a9cdf1e361c81bbc33da19c48080" kindref="member">get_memory_type</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="wholememory_8h_1aaab2c1ef14fcbfffce91ce5856c5d9fe" kindref="member">wholememory_memory_location_t</ref><sp/><ref refid="namespacewholememory_1a3b465d47df3912c6d731f775515538bc" kindref="member">get_memory_location</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a06e227296433b7c9fd844a8280c02247" kindref="member">get_total_size</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1adaec6cd9a180c84e13598dbe6b5356eb" kindref="member">get_data_granularity</ref>(<ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a465154029f3dfe361a7e9fc5d2d75353" kindref="member">get_local_memory_from_handle</ref>(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>local_ptr,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>local_size,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>local_offset,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a01c967b39628ce3a696a8a79ea34299e" kindref="member">get_rank_memory_from_handle</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>rank_memory_ptr,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>rank_memory_size,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>rank_memory_offset,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rank,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a79b9f601faf073d658a81bc54e5836f2" kindref="member">get_global_pointer_from_handle</ref>(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/>global_ptr,<sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1ab2dbc4d212890dddd8dc2d1c0919b7d9" kindref="member">get_global_reference_from_handle</ref>(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__gref__t" kindref="compound">wholememory_gref_t</ref>*<sp/>wholememory_gref,<sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a3c1f384b2582692c1c846382c50118da" kindref="member">determine_partition_plan</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>size_per_rank,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_granularity,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacewholememory_1a5f0375368614b798ed5807dd337d3904" kindref="member">determine_entry_partition_plan</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_entry_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="communicator_8hpp_1ab8411355a7d80016be6edcce3437b978" kindref="member">world_size</ref>)<sp/>noexcept;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/><ref refid="namespacewholememory_1a9d933b27319763c4c3a4077f19306df5" kindref="member">get_partition_plan_from_handle</ref>(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>size_per_rank,<sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="wholememory_8h_1a75fb650e8a2ffb7be976f9962451ce82" kindref="member">wholememory_distributed_backend_t</ref><sp/><ref refid="namespacewholememory_1aaf8b01e77c862676dd2056ee76e4ff23" kindref="member">get_distributed_backend_t</ref>(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WITH_NVSHMEM_SUPPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="wholememory_8h_1a2ee1891c60edb29e6e88ee67c5f161a2" kindref="member">wholememory_error_code_t</ref><sp/>get_nvshmem_reference_frome_handle(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__nvshmem__ref__t" kindref="compound">wholememory_nvshmem_ref_t</ref>*<sp/>wholememory_nvshmem_ref,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="structwholememory__handle__" kindref="compound">wholememory_handle_t</ref><sp/>wholememory_handle)<sp/>noexcept;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>wholememory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/wholememory/memory_handle.hpp"/>
  </compounddef>
</doxygen>
